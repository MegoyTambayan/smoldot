var searchIndex = JSON.parse('{\
"full_node":{"doc":"","t":[5,0,5,0,12,12,13,13,13,4,4,3,4,3,13,13,13,3,13,13,13,13,3,4,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,0,5,5,0,3,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,13,13,4,3,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,12,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,13,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,11,11,5,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["async_main","cli","main","run","0","0","Always","BadKey","BadLength","CliChain","CliOptions","CliOptionsRun","ColorChoice","ColorChoiceParseError","Custom","FromHex","Informant","JsonRpcAddress","Kusama","Logs","LogsJson","Never","NodeKey","NodeKeyParseError","None","Output","OutputParseError","Polkadot","Run","Westend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","clap","clap","color","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_str","from_str","from_str","from_str","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","json_rpc_address","node_key","output","parse_json_rpc_address","tmp","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","background_open_database","json_rpc_service","network_service","open_database","run","sync_service","Config","JsonRpcBackground","JsonRpcService","_server_keep_alive","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bind_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_still_alive","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","run","server","tasks_executor","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BadListenMultiaddr","BlockAnnounce","ChainConfig","Config","Connected","Disconnected","Event","Guarded","InitError","ListenerIo","NetworkService","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block","blocks_request","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone_into","connection_task","fmt","fmt","fmt","from","from","from","from","from","from","genesis_block_hash","guarded","has_grandpa_protocol","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","listen_addresses","multiaddr_to_socket","network","new","noise_key","num_established_connections","num_events_receivers","num_peers","protocol_id","set_local_best_block","tasks_executor","tasks_executor","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","announce","best_block_hash","best_block_number","chain_index","chain_index","chain_index","peer_id","peer_id","peer_id","0","BlocksRequestId","Config","FinalizedBlocks","SyncBackground","SyncService","SyncState","ToDatabase","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_hash","best_block_number","block_requests_finished","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","database","eq","equivalent","finalized_block_hash","finalized_block_number","finalized_block_storage","fmt","fmt","from","from","from","from","from","from","from_network_service","get_hash","hash","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","network_chain_index","network_events_receiver","network_service","network_service","new","partial_cmp","peers_source_id_map","process_blocks","run","start_database_write","start_requests","sync","sync_state","sync_state","sync_state","tasks_executor","to_database","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["full_node","","","","full_node::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","full_node::run","","","","","","full_node::run::json_rpc_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","full_node::run::network_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","full_node::run::network_service::Event","","","","","","","","","full_node::run::sync_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Provides the <code>CliOptions</code> struct that contains all the CLI …","","","","","","","","","","","","","","","","","","","","","","","","","","","Connect to the chain and synchronize the local database …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chain to connect to (“polkadot”, “kusama”, “…","","","Coloring: auto, always, never","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind point of the JSON-RPC server (“none” or :).","Ed25519 private key of network identity (32 bytes …","Output to stdout: auto, none, informant, logs, logs-json.","","Do not load or store anything on disk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Since opening the database can take a long time, this …","","Background network service.","Opens the database from the filesystem, or create a new …","Runs the node using the given configuration. Catches …","Background synchronization service.","Configuration for a <code>JsonRpcService</code>.","","Running JSON-RPC service. Holds a server open for as long …","As long as this value is alive, the background server …","","","","","","","Where to bind the WebSocket server.","","","","","","","As long as this channel is pending, the frontend of the …","","","","","","","","","","","","","","Initializes a new <code>JsonRpcService</code>.","","State machine of the WebSocket server. Holds the TCP …","Closure that spawns background tasks.","","","","","","","","","","","","","A listening address passed through the configuration isn…","","Configuration for one chain.","Configuration for a <code>NetworkService</code>.","","","Event generated by the events reporters returned by …","Fields of <code>NetworkService</code> behind a mutex.","Error when initializing the network service.","I/O error when initializing a listener.","","","","","","","","","","","","","","Number and hash of the current best block. Can later be …","Sends a blocks request to the given peer.","List of node identities and addresses that are known to …","","","","","","","","","","","","","List of block chains to be connected to.","","","Asynchronous task managing a specific TCP connection.","","","","","","","","","","Hash of the genesis block of the chain. Sent to other …","Fields behind a mutex.","If true, the chain uses the GrandPa networking protocol.","","","","","","","","","","","","","","","","","","","","","","","Addresses to listen for incoming connections.","Builds a future that connects to the given multiaddress. …","Data structure holding the entire state of the networking.","Initializes the network service with the given …","Key used for the encryption layer. This is a Noise static …","Returns the number of established TCP connections, both …","Number of event receivers returned by <code>NetworkService::new</code>.","Returns the number of peers we have a substream with.","Identifier of the chain to connect to.","","Closure that spawns background tasks.","See <code>Config::tasks_executor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifier for a blocks request to be performed.","Configuration for a <code>SyncService</code>.","","","Background task that verifies blocks and emits requests.","Summary of the state of the <code>SyncService</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Database to use to read and write information about the …","","","","","Holds, in parallel of the database, the storage of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receiver for events coming from the network, as returned …","Access to the network, and index of the chain to sync …","","Initializes the <code>SyncService</code> with the given configuration.","","","","","Starts the task that writes blocks to the database.","","","Returns a summary of the state of the service.","State kept up-to-date with the background task.","","Closure that spawns background tasks.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,4,4,0,0,0,0,0,5,4,6,0,5,6,6,3,0,0,6,0,0,5,7,5,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,1,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,8,7,8,8,7,8,5,3,9,9,6,10,10,1,4,4,2,7,8,5,3,9,6,10,1,4,2,7,8,5,3,6,1,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,8,8,8,0,8,9,10,4,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,7,8,5,3,9,6,10,1,4,2,0,0,0,0,0,0,0,0,0,11,12,11,13,12,11,13,12,12,11,13,12,11,13,13,12,11,13,12,11,13,12,11,13,11,12,11,13,11,13,13,12,12,11,13,12,11,13,12,11,13,12,11,13,14,15,0,0,15,15,0,0,0,14,0,16,17,18,19,15,14,16,17,18,19,15,14,17,18,17,16,17,18,19,15,14,16,17,18,19,15,14,16,15,15,0,15,14,14,16,17,18,19,15,14,17,18,17,16,17,18,19,15,14,16,17,18,19,15,14,17,18,15,14,16,17,18,19,15,14,16,0,18,18,16,18,16,18,17,18,16,19,15,14,16,17,18,19,15,14,16,17,18,19,15,14,16,17,18,19,15,14,16,17,18,19,15,14,20,21,21,21,22,20,21,22,20,23,0,0,24,0,0,0,0,25,26,24,27,23,28,25,26,24,27,23,28,28,28,27,25,26,24,27,23,28,25,26,24,27,23,28,23,28,23,28,23,25,23,23,28,28,27,23,28,25,26,24,27,23,28,27,23,23,25,26,24,27,23,28,25,26,24,27,23,28,26,24,23,28,25,26,24,27,23,28,23,27,25,25,27,26,23,27,27,27,0,27,27,26,26,27,25,27,23,28,25,26,24,27,23,28,25,26,24,27,23,28,25,26,24,27,23,28,25,26,24,27,23,28],"f":[[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["app",3]],[[],["app",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,[[["str",15]],[["string",3],["result",4,["jsonrpcaddress","string"]],["jsonrpcaddress",3]]],null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pathbuf",3],["option",4,["pathbuf"]]]],null,null,[[["chainspec",3],["chaininformation",3],["bool",15]]],[[["clioptionsrun",3]]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["config",3]]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[["arc",3],["usize",15],["peerid",3],["blocksrequestconfig",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["event",4]],[[]],[[["networkservice",3],["instant",3],["pendingid",3],["arc",3,["networkservice"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["multiaddr",3]],["result",4]],null,[[["config",3]]],null,[[]],null,[[["usize",15]]],null,[[["usize",15],["u64",15]]],null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blocksrequestid",3]],[[],["syncstate",3]],[[]],[[]],[[["blocksrequestid",3]],["ordering",4]],null,[[["blocksrequestid",3]],["bool",15]],[[],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["global",3],["box",3,["global"]]],[["any",8],["global",3],["box",3,["any","global"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["blocksrequestid",3]],["bool",15]],null,null,null,null,[[["config",3]]],[[["blocksrequestid",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],[[]],[[["todatabase",4],["arc",3,["sqlitefulldatabase"]],["receiver",3,["todatabase"]],["sqlitefulldatabase",3]]],[[]],null,[[]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"NodeKey"],[3,"JsonRpcAddress"],[4,"ColorChoice"],[4,"NodeKeyParseError"],[4,"CliChain"],[4,"Output"],[4,"CliOptions"],[3,"CliOptionsRun"],[3,"ColorChoiceParseError"],[3,"OutputParseError"],[3,"JsonRpcService"],[3,"Config"],[3,"JsonRpcBackground"],[4,"InitError"],[4,"Event"],[3,"Config"],[3,"ChainConfig"],[3,"NetworkService"],[3,"Guarded"],[13,"BlockAnnounce"],[13,"Connected"],[13,"Disconnected"],[3,"BlocksRequestId"],[4,"ToDatabase"],[3,"Config"],[3,"SyncService"],[3,"SyncBackground"],[3,"SyncState"]]},\
"smoldot":{"doc":"Client for Polkadot and Substrate-compatible chains.","tn":["author","calculate_genesis_block_header","chain","chain_spec","database","executor","finality","from","header","informant","json_rpc","libp2p","metadata","network","sync","transactions","trie","verify","aura","build","runtime","Config","SlotClaim","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current_authorities","eq","equivalent","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","local_authorities","local_authorities_index","ne","next_slot_claim","now_from_unix_epoch","slot_duration","slot_end_from_unix_epoch","slot_number","slot_start_from_unix_epoch","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AllSync","ApplyExtrinsic","ApplyExtrinsic","ApplyExtrinsicResult","Aura","Authoring","AuthoringStart","AuthoringStartConfig","Builder","BuilderAuthoring","Config","ConfigConsensus","Error","Error","InvalidHeaderGenerated","NextKey","NextKey","PrefixKeys","PrefixKeys","Ready","Runtime","Seal","Seal","StorageGet","StorageGet","WaitSlot","WaitSlot","add_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_sr25519_signature","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","key_as_vec","new","now_from_unix_epoch","parent_hash","parent_number","parent_runtime","prefix","scale_encoded_header","start","start","to_string","top_trie_root_calculation_cache","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","result","resume","current_authorities","local_authorities","now_from_unix_epoch","slot_duration","AncientBirthBlock","ApplyExtrinsic","ApplyExtrinsic","ApplyExtrinsicResult","Aura","Aura","Babe","Babe","BadApplyExtrinsicOutput","BadInherentExtrinsicsOutput","BadMandatory","BadOrigin","BadProof","BlockBuild","BlockHeightOverflow","Call","CannotLookup","CannotLookup","Config","ConfigPreRuntime","Custom","Custom","DispatchError","Error","ExhaustsResources","Finished","Future","InherentData","InherentDataConsensus","InherentExtrinsicDispatchError","InherentExtrinsicTransactionValidityError","InherentExtrinsics","InherentExtrinsics","InitializeBlockNonEmptyOutput","Invalid","InvalidTransaction","MandatoryDispatch","Module","NextKey","NextKey","NoUnsignedValidator","Payment","PrefixKeys","PrefixKeys","Stale","StorageGet","StorageGet","Success","TransactionValidityError","Unknown","UnknownTransaction","VmInit","WasmVm","add_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_list","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus","consensus_digest_log_item","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","inject_inherents","inject_key","inject_keys_ordered","inject_raw_inherents_list","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","key_as_vec","logs","ne","ne","ne","ne","offchain_storage_changes","parent_hash","parent_number","parent_runtime","parent_runtime","prefix","scale_encoded_header","storage_top_trie_changes","timestamp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","top_trie_root_calculation_cache","top_trie_root_calculation_cache","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","resume","error","index","error","error","extrinsic","extrinsic","slot_number","slot_number","async_tree","blocks_tree","chain_information","fork_tree","AsyncOpId","AsyncOpParams","AsyncTree","Block","Finalized","NextNecessaryAsyncOp","NotReady","OutputUpdate","OutputUpdateBlock","Ready","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","async_op_failure","async_op_finished","async_op_user_data","best_block_index","block_async_user_data","block_async_user_data_mut","block_index","block_user_data","block_user_data","block_user_data_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","hash","id","index","input_finalize","input_insert_block","input_iter_ancestry_order","input_iter_unordered","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_new_best","ne","ne","ne","new","next_necessary_async_op","parent","partial_cmp","to_owned","to_owned","to_owned","try_advance_output","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","vzip","vzip","when","async_op_user_data","best_block_index","former_index","pruned_blocks","user_data","AlgorithmHasNoJustification","BadParent","BadParent","BelowFinalized","BlockAccess","BodyInsert","BodyVerifyError","BodyVerifyRuntimeRequired","BodyVerifyStep1","BodyVerifyStep2","CommitVerifyError","Config","Consensus","ConsensusMismatch","ConsensusMismatch","Duplicate","Duplicate","EqualFinalizedHeightButInequalHash","EqualToFinalized","Error","FinalityApply","FinalityVerify","FinalityVerify","FinalityVerifyError","Finished","HeaderInsert","HeaderVerifyError","HeaderVerifySuccess","Insert","InvalidCommit","InvalidHeader","InvalidHeader","InvalidJustification","JustificationVerifyError","NonFinalizedTree","NotEnoughKnownBlocks","NotGrandpa","ParentRuntimeRequired","RuntimeCompilation","RuntimeCompilation","SetFinalizedBlockIter","SetFinalizedError","StorageGet","StorageGet","StorageNextKey","StorageNextKey","StoragePrefixKeys","StoragePrefixKeys","TooFarAhead","UnknownBlock","UnknownTargetBlock","VerificationFailed","VerificationFailed","VerificationFailed","abort","abort","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_hash","best_block_header","block_user_data","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_information","cjk_compat_variants","clear","clone","clone_into","contains_non_finalized_block","drop","drop","finality_checkpoints","finalized_block_hash","finalized_block_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","inject_key","inject_keys_ordered","inject_value","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_header","into_iter","into_user_data","is_current_best_block","is_empty","iter_ancestry_order","key","key","key_as_vec","len","new","next","nfc","nfd","nfkc","nfkd","non_finalized_block_by_hash","nth_ancestor","nth_ancestor","nth_ancestor","nth_ancestor","num_non_finalized_ancestors","num_non_finalized_ancestors","num_non_finalized_ancestors","num_non_finalized_ancestors","parent_block","parent_block","prefix","reserve","resume","set_finalized_block","shrink_to_fit","size_hint","stream_safe","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates_best_block","user_data_mut","verify_body","verify_grandpa_commit_message","verify_header","verify_justification","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","chain","parent_hash","chain","error","insert","new_runtime","offchain_storage_changes","parent_runtime","parent_runtime","storage_top_trie_changes","top_trie_root_calculation_cache","block_hash","block_number","block_to_finalize_hash","block_to_finalize_number","justification_block_hash","justification_block_number","parent_hash","block_height","insert","is_new_best","AllAuthorized","AllAuthorized","Aura","Aura","AuraConfigLoad","Babe","Babe","BabeConfigLoad","BabeEpochInformation","BabeEpochInformationRef","ChainInformation","ChainInformationConsensus","ChainInformationConsensusRef","ChainInformationFinality","ChainInformationFinalityRef","ChainInformationRef","FinalizedZeroButNonZeroAuthoritiesSetId","FromGenesisStorageError","Grandpa","Grandpa","GrandpaConfigLoad","MissingBabeSlotStartNumber","MultipleConsensusAlgorithms","NoBabeFinalizedEpoch","NonLinearBabeEpochs","Outsourced","Outsourced","ScheduledGrandPaChangeBeforeFinalized","UnexpectedBabeFinalizedEpoch","UnexpectedBabeSlotStartNumber","ValidChainInformation","ValidChainInformationRef","ValidityError","allowed_slots","allowed_slots","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","aura_config","authorities","authorities","babe_config","babe_fetch_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","epoch_index","epoch_index","finality","finality","finalized_block_header","finalized_block_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_chain_spec","from_chain_spec","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","randomness","randomness","start_slot_number","start_slot_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","finalized_authorities_list","finalized_block_epoch_information","finalized_next_epoch_transition","slot_duration","slots_per_epoch","finalized_authorities_list","finalized_block_epoch_information","finalized_next_epoch_transition","slot_duration","slots_per_epoch","after_finalized_block_authorities_set_id","finalized_scheduled_change","finalized_triggered_authorities","after_finalized_block_authorities_set_id","finalized_scheduled_change","finalized_triggered_authorities","AuraGenesisConfiguration","AuthoritiesListDecodeError","BadSlotDuration","FromGenesisStorageError","FromVmPrototypeError","HeapPagesDecode","HostFunctionNotAllowed","RuntimeNotFound","Trapped","VmError","VmInitialization","VmStart","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","authorities_list","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from_genesis_storage","from_virtual_machine_prototype","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_function_not_found","is_function_not_found","slot_duration","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BabeGenesisConfiguration","FromGenesisStorageError","FromVmPrototypeError","HeapPagesDecode","HostFunctionNotAllowed","OutputDecode","RuntimeNotFound","Trapped","VmError","VmInitialization","VmStart","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","epoch0_configuration","epoch0_information","fmt","fmt","fmt","fmt","fmt","from","from","from","from_genesis_storage","from_virtual_machine_prototype","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_function_not_found","is_function_not_found","slots_per_epoch","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BabeEpochToFetch","Config","CurrentEpoch","DecodeFailed","Error","Finished","NextEpoch","NextKey","NextKey","Query","StorageGet","StorageGet","StorageRoot","StorageRoot","WasmStart","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","babe_fetch_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","epoch_to_fetch","fmt","fmt","from","from","from","from","from","from","from","inject_key","inject_value","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","key_as_vec","resume","runtime","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","virtual_machine","ForkTree","NodeIndex","PruneAncestorsIter","PrunedNode","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ascend_and_descend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","common_ancestor","default","drop","eq","equivalent","find","fmt","fmt","from","from","from","from","get","get_mut","index","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_ancestor","is_empty","is_prune_target_ancestor","iter_ancestry_order","iter_unordered","len","ne","new","next","node_to_root_path","parent","partial_cmp","prune_ancestors","prune_uncles","reserve","root_to_node_path","shrink_to_fit","size_hint","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","with_capacity","ChainSpec","LightSyncState","ParseError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_chain_information","boot_nodes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_type","clone","clone_into","fmt","fmt","from","from","from","from_json_bytes","genesis_storage","genesis_storage_value","has_live_network","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","light_sync_state","name","properties","protocol_id","relay_chain","telemetry_endpoints","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","finalized_serialize","full_sqlite","CorruptedError","as_any","as_any_mut","borrow","borrow_mut","decode_chain","encode_chain","encode_chain_storage","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","Access","Access","Access","AccessError","BadHeader","BlockHeaderCorrupted","BrokenChain","Config","ConfigTy","ConsensusAlgorithmMix","Corrupted","CorruptedError","DatabaseEmpty","DatabaseOpen","Disk","Duplicate","Empty","FinalizedAccessError","FinalizedNephew","InsertError","Internal","InternalError","InvalidBabeEpochInformation","InvalidBlockHashLen","InvalidChainInformation","InvalidFinalizedNum","InvalidNumber","Memory","MissingBlockHeader","MissingMetaKey","MissingParent","Obsolete","Open","RevertForbidden","SetFinalizedError","SqliteFullDatabase","UnknownBlock","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_hash","block_extrinsics","block_hash_by_number","block_scale_encoded_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","finalized_block_hash","finalized_block_storage_top_trie","finalized_block_storage_top_trie_get","finalized_block_storage_top_trie_keys","finalized_block_storage_top_trie_next_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","initialize","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","open","set_finalized","to_chain_information","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CoreVersion","CoreVersionApi","CoreVersionApisRefIter","CoreVersionError","CoreVersionRef","DEFAULT_HEAP_PAGES","Decode","ForbiddenHostFunction","InvalidHeapPagesError","Run","Start","TooLarge","WrongLen","apis","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_ref","as_slice_of","authoring_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","core_version","decode","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","hash","host","impl_name","impl_version","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","name_hash","ne","ne","ne","next","read_only_runtime_host","runtime_host","spec_name","spec_version","storage_heap_pages_to_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","vm","vzip","vzip","vzip","vzip","vzip","vzip","BadFormat","BadReturnValue","CallRuntimeVersion","CallRuntimeVersion","DataSizeOverflow","EndStorageTransaction","EndStorageTransaction","Error","Error","ExternalOffchainStorageSet","ExternalOffchainStorageSet","ExternalStorageAppend","ExternalStorageAppend","ExternalStorageChangesRoot","ExternalStorageChangesRoot","ExternalStorageClearPrefix","ExternalStorageClearPrefix","ExternalStorageGet","ExternalStorageGet","ExternalStorageNextKey","ExternalStorageNextKey","ExternalStorageRoot","ExternalStorageRoot","ExternalStorageSet","ExternalStorageSet","Finished","Finished","FinishedWithPendingTransaction","FreeError","HeapBaseNotFound","HostVm","HostVmPrototype","InvalidZstd","LogEmit","LogEmit","ModuleFormatError","NestedTransaction","NewErr","NoActiveTransaction","OutOfMemory","ParamDecodeError","ParamOutOfRange","ParamsCountMismatch","ReadyToRun","ReadyToRun","ReturnValueTypeMismatch","ReturnedPtrOutOfRange","StartErr","StartStorageTransaction","StartStorageTransaction","TooLarge","Trap","Utf8Error","VirtualMachine","VirtualMachine","WrongParamTy","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","heap_pages","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","key","key","key","key","key","max_keys_to_remove","max_size","new","offset","prefix","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume_full_value","resume_vectored","run","run","run_no_param","run_vectored","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_code","actual","actual","actual","error","expected","expected","function","function","function","function","function","length","memory_size","param_num","param_num","param_num","pointer","pointer","pointer","requested_size","size","error","prototype","resume","rollback","Config","Error","ErrorDetail","Finished","ForbiddenHostCall","LogsTooLong","NextKey","NextKey","RuntimeHostVm","StorageGet","StorageGet","StorageRoot","StorageRoot","Success","SuccessVirtualMachine","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","detail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","function_to_call","inject_key","inject_value","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","key","key","key_as_vec","logs","parameter","prototype","resume","run","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","virtual_machine","virtual_machine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","logs","Config","Error","ErrorDetail","Finished","LogsTooLong","NextKey","NextKey","PrefixKeys","PrefixKeys","RuntimeHostVm","StorageGet","StorageGet","Success","SuccessVirtualMachine","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","detail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","function_to_call","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","key","key","key_as_vec","logs","offchain_storage_changes","offchain_storage_changes","parameter","prefix","prototype","run","storage_top_trie_changes","storage_top_trie_changes","to_owned","to_string","to_string","top_trie_root_calculation_cache","top_trie_root_calculation_cache","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","virtual_machine","virtual_machine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","logs","BadValueTy","CompileAheadOfTime","CouldntAllocateMemory","ExecHint","ExecOutcome","Finished","FunctionNotFound","GlobalValueErr","HeapPages","I32","I32","I64","I64","IndirectTableIsntTable","Interrupted","Invalid","MemoryIsntMemory","Module","ModuleError","ModuleError","NewErr","NotAFunction","NotFound","Oneshot","OutOfBoundsError","Poisoned","RunErr","Signature","SignatureNotSupported","StartErr","Trap","UnsupportedTypeError","Untrusted","ValueType","VirtualMachine","VirtualMachinePrototype","WasmValue","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","global_value","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_i32","into_i64","into_prototype","memory_size","ne","ne","new","new","new","new","parameters","partial_cmp","read_memory","return_type","run","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_memory","id","params","return_value","expected","obtained","grandpa","justification","chain_config","commit","warp_sync","FromGenesisStorageError","FromVmPrototypeError","GrandpaGenesisConfiguration","HeapPagesDecode","HostFunctionNotAllowed","OutputDecode","RuntimeNotFound","Trapped","UnknownEncodingVersionNumber","VmError","VmInitialization","VmStart","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from_genesis_storage","initial_authorities","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_function_not_found","is_function_not_found","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","decode","verify","CommitMessageRef","CompactCommitRef","Error","UnsignedPrecommitRef","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auth_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode_grandpa_commit","decode_partial_grandpa_commit","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","message","ne","ne","ne","precommits","round_number","set_id","target_hash","target_hash","target_number","target_number","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BadAncestry","BadPublicKey","BadSetId","BadSignature","Config","DuplicateSignature","Error","Finished","FinishedUnknown","InProgress","InvalidFormat","IsAuthority","IsAuthority","IsParent","IsParent","NotAuthority","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","block_hash","block_number","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","expected_authorities_set_id","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","num_authorities","resume","resume","target_block_hash","target_block_number","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","EmptyProof","Error","Next","NonMinimalProof","NotFinished","Success","TargetHashMismatch","Verifier","Verify","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","next","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","header_hash","justification_target_hash","justification_target_height","chain_information_finality","header","decode","verify","Error","GrandpaJustification","GrandpaJustificationRef","Precommit","PrecommitRef","PrecommitsRef","PrecommitsRefIter","VotesAncestriesIter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","authority_public_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode_grandpa","decode_partial","decode_partial_grandpa","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","iter","ne","ne","next","next","precommits","precommits","round","round","signature","signature","size_hint","size_hint","target_hash","target_hash","target_hash","target_hash","target_number","target_number","target_number","target_number","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","votes_ancestries","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadPublicKey","BadSignature","Config","DuplicateSignature","Error","NotAuthority","NotEnoughSignatures","as_any","as_any","as_any_mut","as_any_mut","authorities_list","authorities_set_id","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","justification","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","Aura","AuraAuthoritiesIter","AuraAuthority","AuraAuthorityRef","AuraConsensus","AuraConsensus","AuraConsensusLog","AuraConsensusLogRef","AuraPreDigest","AuraPreDigest","AuraPreDigest","AuraSeal","AuraSeal","AuthoritiesChange","AuthoritiesChange","Babe","BabeAllowedSlots","BabeAuthoritiesIter","BabeAuthority","BabeAuthorityRef","BabeConsensus","BabeConsensus","BabeConsensusLog","BabeConsensusLogRef","BabeNextConfig","BabeNextEpoch","BabeNextEpochRef","BabePreDigest","BabePreDigest","BabePreDigest","BabePreDigestRef","BabePrimaryPreDigest","BabePrimaryPreDigestRef","BabeSeal","BabeSeal","BabeSecondaryPlainPreDigest","BabeSecondaryVRFPreDigest","BabeSecondaryVRFPreDigestRef","BadAuraAuthoritiesListLen","BadAuraConsensusRefType","BadAuraSealLength","BadBabeConsensusRefType","BadBabeNextConfigVersion","BadBabePreDigestRefType","BadBabeSealLength","Beefy","Beefy","BlockNumberDecodeError","ChangesTrieConfiguration","ChangesTrieRoot","ChangesTrieRoot","ChangesTrieSignal","ChangesTrieSignal","ChangesTrieSignal","Digest","DigestItem","DigestItemDecodeError","DigestItemLenDecodeError","DigestItemRef","DigestLenDecodeError","DigestRef","Error","ForcedChange","ForcedChange","GrandpaAuthoritiesIter","GrandpaAuthority","GrandpaAuthorityRef","GrandpaConsensus","GrandpaConsensus","GrandpaConsensusLog","GrandpaConsensusLogDecodeError","GrandpaConsensusLogRef","GrandpaScheduledChange","GrandpaScheduledChangeRef","Header","HeaderRef","LogsIter","MultipleAuraPreRuntimeDigests","MultipleBabeConfigDescriptors","MultipleBabeEpochDescriptors","MultipleBabePreRuntimeDigests","MutipleRuntimeEnvironmentUpdated","NewConfiguration","NextConfigData","NextConfigData","NextEpochData","NextEpochData","OnDisabled","OnDisabled","OnDisabled","OnDisabled","OnDisabled","OnDisabled","Pause","Pause","PolkadotParachain","PolkadotParachain","PowIdeologicallyNotSupported","Primary","Primary","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVrfSlots","PrimarySlots","Resume","Resume","RuntimeEnvironmentUpdated","RuntimeEnvironmentUpdated","ScheduledChange","ScheduledChange","Seal","SealIsntLastItem","SecondaryPlain","SecondaryPlain","SecondaryVRF","SecondaryVRF","TooLong","TooShort","UnexpectedBabeConfigDescriptor","UnknownConsensusEngine","UnknownDigestLogType","allowed_slots","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","aura_pre_runtime","aura_seal","aura_seal","authorities","authorities","authority_index","authority_index","authority_index","authority_index","authority_index","babe_epoch_information","babe_epoch_information","babe_pre_runtime","babe_pre_runtime","babe_seal","babe_seal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_and_advance_with_depth_limit","decode_partial","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","delay","delay","digest","digest","digest_interval","digest_levels","empty","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics_root","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","has_any_aura","has_any_babe","has_runtime_environment_updated","has_runtime_environment_updated","hash","hash","hash_from_scale_encoded_header","hash_from_scale_encoded_header_vectored","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","is_aura","is_babe","is_primary","logs","logs","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next","next","next","next_authorities","next_authorities","number","number","parent_hash","parent_hash","pop_seal","public_key","public_key","public_key","public_key","public_key","public_key","push_aura_seal","push_babe_seal","randomness","randomness","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding_vec","scale_encoding_vec","size_hint","size_hint","size_hint","size_hint","slot_number","slot_number","slot_number","slot_number","slot_number","slot_number","slot_number","state_root","state_root","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vrf_output","vrf_output","vrf_output","vrf_output","vrf_proof","vrf_proof","vrf_proof","vrf_proof","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","weight","opaque","opaque","opaque","opaque","change","reset_block_height","change","reset_block_height","0","HashDisplay","InformantLine","RelayChain","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","best_hash","best_number","best_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_name","chain_name","enable_colors","finalized_hash","finalized_number","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_line_width","network_known_best","num_network_connections","num_peers","relay_chain","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","methods","parse","payment_info","websocket_server","0","0","0","0","AccountId","Block","Broadcast","DispatchClass","Dropped","Extrinsic","FinalityTimeout","Finalized","Future","HashHexString","Header","HeaderDigest","HexString","InBlock","Invalid","InvalidParameter","InvalidParameterError","InvalidParametersFormat","JsonRpcParse","JsonRpcParseError","Mandatory","Method","MethodCall","MethodError","Normal","Operational","ParseError","Ready","Response","Retracted","RpcMethods","RuntimeDispatchInfo","RuntimeVersion","StorageChangeSet","SystemHealth","SystemPeer","TooManyParameters","TransactionStatus","UnknownMethod","UnknownNotification","Usurped","account_nextIndex","account_nextIndex","apis","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","author_hasKey","author_hasKey","author_hasSessionKeys","author_hasSessionKeys","author_insertKey","author_insertKey","author_pendingExtrinsics","author_pendingExtrinsics","author_removeExtrinsic","author_removeExtrinsic","author_rotateKeys","author_rotateKeys","author_submitAndWatchExtrinsic","author_submitAndWatchExtrinsic","author_submitExtrinsic","author_submitExtrinsic","author_unwatchExtrinsic","author_unwatchExtrinsic","authoring_version","babe_epochAuthorship","babe_epochAuthorship","best_hash","best_number","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_getBlock","chain_getBlock","chain_getBlockHash","chain_getBlockHash","chain_getFinalizedHead","chain_getFinalizedHead","chain_getHeader","chain_getHeader","chain_subscribeAllHeads","chain_subscribeAllHeads","chain_subscribeFinalizedHeads","chain_subscribeFinalizedHeads","chain_subscribeNewHeads","chain_subscribeNewHeads","chain_unsubscribeAllHeads","chain_unsubscribeAllHeads","chain_unsubscribeFinalizedHeads","chain_unsubscribeFinalizedHeads","chain_unsubscribeNewHeads","chain_unsubscribeNewHeads","changes","childstate_getKeys","childstate_getKeys","childstate_getStorage","childstate_getStorage","childstate_getStorageHash","childstate_getStorageHash","childstate_getStorageSize","childstate_getStorageSize","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","digest","extrinsics","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_scale_encoded_header","grandpa_roundState","grandpa_roundState","header","impl_name","impl_version","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_syncing","justification","logs","method_names","methods","number","offchain_localStorageGet","offchain_localStorageGet","offchain_localStorageSet","offchain_localStorageSet","parent_hash","parse_json_call","partial_fee","payment_queryInfo","payment_queryInfo","peer_id","peers","roles","rpc_methods","rpc_methods","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","should_have_peers","spec_name","spec_version","state_call","state_call","state_getKeys","state_getKeys","state_getKeysPaged","state_getKeysPaged","state_getMetadata","state_getMetadata","state_getPairs","state_getPairs","state_getReadProof","state_getReadProof","state_getRuntimeVersion","state_getRuntimeVersion","state_getStorage","state_getStorage","state_getStorageHash","state_getStorageHash","state_getStorageSize","state_getStorageSize","state_queryStorage","state_queryStorage","state_queryStorageAt","state_queryStorageAt","state_root","state_subscribeRuntimeVersion","state_subscribeRuntimeVersion","state_subscribeStorage","state_subscribeStorage","state_unsubscribeRuntimeVersion","state_unsubscribeRuntimeVersion","state_unsubscribeStorage","state_unsubscribeStorage","system_accountNextIndex","system_accountNextIndex","system_addReservedPeer","system_addReservedPeer","system_chain","system_chain","system_chainType","system_chainType","system_dryRun","system_dryRun","system_health","system_health","system_localListenAddresses","system_localListenAddresses","system_localPeerId","system_localPeerId","system_name","system_name","system_networkState","system_networkState","system_nodeRoles","system_nodeRoles","system_peers","system_peers","system_properties","system_properties","system_removeReservedPeer","system_removeReservedPeer","system_version","system_version","to_json_error","to_json_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","account","at","at","count","extrinsic","hash","hash","hash","hash","hash","height","key","keys","list","prefix","start_key","subscription","subscription","subscription","subscription","subscription","subscription","transaction","transaction","actual","error","expected","parameter_index","rpc_method","rpc_method","rpc_method","error","request_id","ApplicationDefined","Call","ErrorResponse","InternalError","InvalidParams","InvalidRequest","MethodNotFound","ParseError","ParseError","ServerError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_error_response","build_subscription_event","build_success_response","fmt","fmt","fmt","fmt","from","from","from","id_json","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","method","params_json","parse_call","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DecodeError","PAYMENT_FEES_FUNCTION_NAME","as_any","as_any_mut","borrow","borrow_mut","decode_payment_info","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","payment_info_parameters","to_string","try_from","try_into","type_id","vzip","Config","ConnectionError","ConnectionId","ConnectionOpen","Event","TextFrame","WsServer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","close","cmp","connection_mut_user_data","connection_user_data","eq","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","len","local_addr","max_frame_size","ne","new","next_event","partial_cmp","queue_send","reject","send_buffer_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","address","connection_id","connection_id","message","user_data","user_data","Multiaddr","async_rw_with_buffers","collection","connection","peer_id","peers","read_write","WithBuffers","advance","as_any","as_any_mut","borrow","borrow_mut","buffers","close","flush_close","fmt","from","into","into_any","into_any_arc","into_any_rc","is_closed","new","process","try_from","try_into","type_id","vzip","BadConnection","Config","Connection","ConnectionClosed","ConnectionError","ConnectionId","ConnectionReadyFuture","Established","Event","Handshake","HandshakeError","HandshakeFinished","InboundError","InvalidConnection","InvalidConnection","Multiaddr","Network","NoSubstream","NotEstablished","NotificationProtocolConfig","NotificationsIn","NotificationsInClose","NotificationsInOpen","NotificationsOutClose","NotificationsOutResult","OpenNotificationsSubstreamError","Protocol","QueueFull","QueueNotificationError","RequestError","RequestIn","Shutdown","Timeout","accept_notifications_in","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","close_notifications_substream","cmp","connection_id","eq","equivalent","fallback_protocol_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_hash","handshake_timeout","hash","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","len","max_handshake_size","max_notification_size","max_value","min_value","ne","new","next_event","noise_key","noise_key","notification_protocols","notification_protocols","open_notifications_substream","partial_cmp","pending_api_events_buffer_size","ping_protocol","poll","protocol_name","queue_notification","randomness_seed","read_write","reject_notifications_in","request","request_response_protocols","request_response_protocols","respond_in_request","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","id","id","id","id","id","id","id","id","id","in_notification_protocols_indices","notification","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","out_notification_protocols_indices","outcome","peer_id","protocol_index","remote_handshake","request_payload","result","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_data","BadUrl","DataLessThanLen","Dccp","Dns","Dns4","Dns6","Dnsaddr","Error","FromUrlErr","Http","Https","InformationLoss","InvalidMultiaddr","InvalidProtocolString","InvalidUvar","Ip4","Ip6","Iter","Memory","Multiaddr","Onion","Onion3","Onion3Addr","P2p","P2pCircuit","P2pWebRtcDirect","P2pWebRtcStar","P2pWebSocketStar","ParsingError","Protocol","Quic","Result","Sctp","Tcp","Udp","Udt","Unix","UnknownProtocolId","UnknownProtocolString","UnsupportedScheme","Utp","Ws","Wss","from_url","from_url_lossy","multiaddr","BadInputLength","Blake2b256","Blake2b256","Blake2b512","Blake2b512","Blake2s128","Blake2s128","Blake2s256","Blake2s256","BoxedMultihashDigest","CODE","Code","DecodeError","DecodeOwnedError","EncodeError","Identity","Identity","Keccak224","Keccak224","Keccak256","Keccak256","Keccak384","Keccak384","Keccak512","Keccak512","Multihash","MultihashDigest","MultihashGeneric","MultihashRef","MultihashRefGeneric","Multihasher","Sha1","Sha1","Sha2_256","Sha2_256","Sha2_512","Sha2_512","Sha3_224","Sha3_224","Sha3_256","Sha3_256","Sha3_384","Sha3_384","Sha3_512","Sha3_512","UnknownCode","UnsupportedInputLength","UnsupportedType","code","data","digest","digest","error","input","reset","result","result_reset","wrap","established","handshake","multistream_select","noise","yamux","Config","ConfigNotifications","ConfigRequestResponse","ConfigRequestResponseIn","ConnectionPrototype","Empty","Error","Established","Event","InboundError","Noise","NotificationIn","NotificationsInClose","NotificationsInOpen","NotificationsInOpenCancel","NotificationsOutCloseDemanded","NotificationsOutReset","NotificationsOutResult","Payload","RequestIn","Response","SubstreamId","Yamux","accept_in_notifications_substream","add_request","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close_notifications_substream","cmp","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","hash","inbound_allowed","inbound_config","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_connection","max_handshake_size","max_notification_size","max_response_size","max_value","min_value","name","name","ne","notification_substream_queued_bytes","notifications_protocols","notifications_substream_user_data_mut","open_notifications_substream","partial_cmp","ping_protocol","randomness_seed","read_write","reject_in_notifications_substream","request_protocols","respond_in_request","substream","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_notification_unbounded","max_size","handshake","id","id","id","id","id","id","id","id","id","notification","outcome","protocol_index","protocol_index","protocol_index","protocol_index","request","response","result","user_data","user_data","Event","HandshakeRecvError","InboundError","InboundError","InboundNegotiated","InboundTy","NegotiationError","NegotiationError","NegotiationError","NotificationIn","Notifications","NotificationsInClose","NotificationsInClosedErr","NotificationsInError","NotificationsInOpen","NotificationsInOpenCancel","NotificationsInUnexpectedEof","NotificationsOutCloseDemanded","NotificationsOutErr","NotificationsOutReset","NotificationsOutResult","Ping","ProtocolError","ProtocolNotAvailable","ProtocolNotAvailable","RefusedHandshake","Request","RequestError","RequestIn","RequestInExpectedEof","RequestInLebError","RespondInRequestError","Response","ResponseLebError","Substream","SubstreamClosed","SubstreamClosed","SubstreamReset","SubstreamReset","SubstreamReset","Timeout","Timeout","accept_in_notifications_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close_notifications_substream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","ingoing","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","notification_substream_queued_bytes","notifications_out","notifications_substream_user_data_mut","read_write","reject_in_notifications_substream","request_out","request_substream_user_data_mut","reset","respond_in_request","set_inbound_ty","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_notification_unbounded","handshake","notification","outcome","protocol_index","protocol_index","protocol_index","protocol_index","request","response","result","user_data","user_data","error","protocol_index","protocol_index","max_handshake_size","protocol_index","protocol_index","request_max_size","Handshake","HandshakeError","Healthy","HealthyHandshake","MultistreamSelect","NoEncryptionProtocol","NoMultiplexingProtocol","Noise","NoiseHandshake","NoiseKeyRequired","NoiseKeyRequired","Success","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","read_write","resume","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","connection","remote_peer_id","BadHandshake","Config","Dialer","Error","Frame","Handshake","InProgress","InProgress","InvalidCommand","Listener","Ls","LsResponse","MessageOut","Negotiation","NotAvailable","ProtocolNa","ProtocolOk","ProtocolRequest","ReadClosed","Success","UnexpectedProtocolRequestAnswer","WriteClosed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","ne","new","new","read_write","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_out","requested_protocol","supported_protocols","Cipher","CipherError","HandshakeError","HandshakeInProgress","InProgress","InvalidKey","Noise","NoiseHandshake","NoiseKey","PROTOCOL_NAME","PayloadDecode","PayloadDecodeError","ReadClosed","SignatureVerificationFailed","Success","UnexpectedPayload","UnsignedNoiseKey","WriteClosed","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consume_inbound_data","decoded_inbound_data","encrypt","encrypt_size_conv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","inject_inbound_data","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_initiator","libp2p_public_ed25519_key","new","new","new","payload_to_sign","payload_to_sign_as_vec","random","read_write","sign","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","cipher","remote_peer_id","BadFrameType","BadPingFlags","Config","CreditsExceeded","DataFrame","DataWithRst","Error","ExtractOut","IncomingDataDetail","IncomingDataOutcome","IncomingSubstream","LocalCreditsOverflow","PROTOCOL_NAME","StreamClosed","StreamReset","SubstreamId","SubstreamMut","UnexpectedSyn","UnknownFlags","UnknownVersion","WriteAfterFin","Yamux","ZeroSubstreamId","accept_pending_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","bytes_read","capacity","clone","clone_into","close","cmp","detail","eq","equivalent","extract_out","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","hash","id","incoming_data","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_user_data","is_closed","is_initiator","is_remote_closed","max_value","min_value","ne","new","open_substream","partial_cmp","queued_bytes","randomness_seed","reject_pending_substream","reserve_window","reset","substream_by_id","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_datas","user_datas_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","yamux","start_offset","substream_id","substream_id","substream_id","user_data","user_data","BadUrl","DataLessThanLen","Dccp","Dns","Dns4","Dns6","Dnsaddr","Error","FromUrlErr","Http","Https","InformationLoss","InvalidMultiaddr","InvalidProtocolString","InvalidUvar","Ip4","Ip6","Iter","Memory","Multiaddr","Onion","Onion3","Onion3Addr","P2p","P2pCircuit","P2pWebRtcDirect","P2pWebRtcStar","P2pWebSocketStar","ParsingError","Protocol","Quic","Result","Sctp","Tcp","Udp","Udt","Unix","UnknownProtocolId","UnknownProtocolString","UnsupportedScheme","Utp","Ws","Wss","acquire","acquire","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str_parts","from_url","from_url_lossy","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","multiaddr","ne","next","port","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_bytes","BadInputLength","Blake2b256","Blake2b256","Blake2b512","Blake2b512","Blake2s128","Blake2s128","Blake2s256","Blake2s256","BoxedMultihashDigest","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","CODE","Code","DecodeError","DecodeOwnedError","EncodeError","Identity","Identity","Keccak224","Keccak224","Keccak256","Keccak256","Keccak384","Keccak384","Keccak512","Keccak512","Multihash","MultihashDigest","MultihashGeneric","MultihashRef","MultihashRefGeneric","Multihasher","Sha1","Sha1","Sha2_256","Sha2_256","Sha2_512","Sha2_512","Sha3_224","Sha3_224","Sha3_256","Sha3_256","Sha3_384","Sha3_384","Sha3_512","Sha3_512","UnknownCode","UnsupportedInputLength","UnsupportedType","algorithm","algorithm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_bytes","as_bytes","as_ref","as_ref","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","digest","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_slice","get_hash","get_hash","get_hash","hash","hash","hash","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","ne","ne","partial_cmp","partial_cmp","partial_cmp","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","result","result","result","result","result","result","result","result","result","result","result","result","result","result","result","result","result","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","result_reset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrap","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","BadAlgorithm","BadEd25519Key","Bs58","Bs58DecodeError","DecodeError","Ed25519","FromBytesError","FromMultihashError","FromProtobufEncodingError","InvalidMultihash","InvalidPublicKey","Multihash","ParseError","PeerId","ProtobufDecodeError","PublicKey","UnknownAlgorithm","UnsupportedAlgorithm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_bytes","as_ref","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_multihash","from_protobuf_encoding","from_public_key","from_str","get_hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_peer_id","is_public_key","ne","partial_cmp","to_base58","to_owned","to_owned","to_protobuf_encoding","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Config","Connected","Connection","ConnectionClosed","Desired","DesiredInNotification","DesiredInNotificationCancel","DesiredInNotificationId","DesiredOutNotification","DesiredOutNotificationId","DesiredReset","DesiredState","Disconnected","Event","InNotificationAcceptError","InboundError","NoSubstream","NotConnected","NotConnected","NotDesired","NotificationsIn","NotificationsInClose","NotificationsOutClose","NotificationsOutResult","Obsolete","Peers","QueueFull","QueueNotificationError","RequestError","RequestId","RequestIn","RequestInCancel","add_incoming_connection","add_outgoing_connection","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_notification","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","connections_capacity","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","handshake_timeout","hash","hash","hash","in_notification_accept","in_notification_refuse","initial_desired_peers","initial_desired_substreams","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","new","next_event","noise_key","noise_key","notification_protocols","notification_protocols","num_outgoing_substreams","open_out_notification","partial_cmp","partial_cmp","partial_cmp","peers_capacity","peers_list","pending_api_events_buffer_size","ping_protocol","queue_notification","randomness_seed","read_write","refused_notifications_out","request","request_response_protocols","request_response_protocols","respond","set_peer_desired","set_peer_notifications_out_desired","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfulfilled_desired_peers","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","connection_id","connection_id","connection_user_data","error","handshake","id","id","id","id","notification","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","num_peer_connections","num_peer_connections","outcome","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_is_desired","protocol_index","request_id","request_payload","result","user_data","IncomingBytes","ReadWrite","advance_read","advance_write","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","close_write","discard_all_incoming","from","from","incoming_buffer","incoming_buffer_available","incoming_bytes_iter","into","into","into_any","into_any","into_any_rc","into_any_rc","into_iter","is_dead","next","now","outgoing_buffer","outgoing_buffer_available","read_bytes","read_bytes","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wake_up_after","wake_up_after","wake_up_future","wake_up_when","wake_up_when_boxed","write_from_vec_deque","write_out","written_bytes","BadLengthPrefix","Error","Finished","HostFunctionNotAllowed","Query","RemoveMetadataLengthPrefixError","StorageGet","StorageGet","VmInitialization","VmStart","WasmRun","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decode","decode","events","fmt","fmt","fmt","fmt","from","from","from","from","inject_value","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","key","key_as_vec","query_metadata","remove_metadata_length_prefix","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Blake2_128","Blake2_128Concat","Blake2_256","DecodeError","Default","DoubleMap","ErrorMetadataRef","EventMetadataRef","ExtrinsicMetadataRef","FunctionArgumentMetadataRef","FunctionMetadataRef","Identity","Map","MetadataRef","ModuleConstantMetadataRef","ModuleMetadataRef","Optional","Plain","StorageEntryMetadataRef","StorageEntryModifier","StorageEntryTypeRef","StorageHasher","StorageMetadataRef","Twox128","Twox256","Twox64Concat","UndecodedIter","arguments","arguments","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calls","cjk_compat_variants","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constants","default","documentation","documentation","documentation","documentation","documentation","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","event","extrinsic","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","modifier","modules","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","next","nfc","nfd","nfkc","nfkd","prefix","signed_extensions","size_hint","storage","stream_safe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","hasher","hasher","key","key1","key2","key2_hasher","value","value","EventsStorageKeyError","NoEventsKey","NoSystemModule","WrongType","as_any","as_any_mut","borrow","borrow_mut","events_storage_key","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","Multiaddr","as_any","as_any_mut","as_byte_slice","as_ref","as_slice_of","borrow","borrow_mut","clone","clone_into","cmp","deserialize","empty","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","from","from","from","from","from","from_iter","from_str","get_hash","hash","into","into_any","into_any_arc","into_any_rc","iter","kademlia","len","ne","partial_cmp","pop","protocol","push","replace","serialize","service","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_into","type_id","vzip","with","with_capacity","BadMultiaddr","BadPeerId","BadResponseTy","DecodeFindNodeResponseError","Kademlia","ProtobufDecode","ProtobufDecodeError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_find_node_request","decode_find_node_response","default","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Ascending","Authority","BadResponseTy","BadResponseTy","BlockAnnounceRef","BlockAnnouncesHandshakeDecodeError","BlockAnnouncesHandshakeRef","BlockData","BlocksRequestConfig","BlocksRequestConfigStart","BlocksRequestDirection","BlocksRequestFields","BodyDecodeError","CallProofRequestConfig","CatchUp","CatchUpRef","CatchUpRequest","CatchUpRequest","Commit","DecodeBlockAnnounceError","DecodeBlockResponseError","DecodeCallProofResponseError","DecodeGrandpaNotificationError","DecodeGrandpaWarpSyncResponseError","DecodeStorageProofResponseError","Descending","Full","GrandpaNotificationRef","GrandpaWarpSyncResponse","GrandpaWarpSyncResponseFragment","Hash","IdentifyResponse","InvalidHashLength","Light","MessageRef","Neighbor","NeighborPacket","Number","Precommit","Prevote","PrevoteRef","PrimaryPropose","PrimaryProposeRef","ProofDecodeError","ProofDecodeError","ProtobufDecode","ProtobufDecode","ProtobufDecode","ProtobufDecodeError","Role","StorageProofRequestConfig","UnsignedPrevoteRef","Vote","VoteMessageRef","agent_version","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","authority_public_key","base_hash","base_number","best_hash","best_number","block_hash","block_hash","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block_request","build_call_proof_request","build_identify_response","build_storage_proof_request","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit_finalized_height","decode_block_announce","decode_block_announces_handshake","decode_block_response","decode_call_proof_response","decode_grandpa_notification","decode_grandpa_warp_sync_response","decode_storage_proof_response","desired_count","direction","ed25519_public_key","encode_block_announce","encode_block_announces_handshake","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","get_hash","hash","hash","header","header","header","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_best","is_finished","justification","justification","justification","keys","listen_addrs","message","method","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","observed_addr","parameter_vectored","precommits","prevotes","protocol_version","protocols","role","round_number","round_number","round_number","round_number","scale_encoding","scale_encoding","scale_encoding","set_id","set_id","set_id","set_id","signature","signature","start","target_hash","target_hash","target_hash","target_number","target_number","target_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadBlockAnnounce","BadBlockAnnouncesHandshake","BadGrandpaNotification","BlockAnnounce","BlocksRequestError","CallProofRequestError","ChainConfig","ChainConnectAttemptFailed","ChainConnected","ChainDisconnected","ChainNetwork","Config","Connected","Decode","Decode","Decode","Decode","DecodeError","Disconnected","DiscoveryError","DiscoveryInsert","EncodedBlockAnnounce","EncodedBlockAnnounceHandshake","EncodedGrandpaCommitMessage","Event","FindNode","GenesisMismatch","GrandpaCommitMessage","GrandpaState","GrandpaWarpSyncRequestError","IdentifyRequestIn","IdentifyRequestIn","InboundError","KademliaFindNodeError","NoPeer","NotificationsOutErr","PendingId","ProtocolError","ProtocolError","Request","Request","Request","Request","RequestFailed","StartConnect","StorageProofRequestError","Substream","add_incoming_connection","announce_transaction","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_encoded","best_hash","best_number","blocks_request","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_proof_request","chains","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_finalized_height","connections_capacity","decode","decode","decode","eq","equivalent","expected_peer_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","get_hash","grandpa_protocol_config","grandpa_warp_sync_request","handshake_timeout","hash","id","in_slots","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_network_problem","kademlia_discovery_round","kademlia_find_node","known_nodes","multiaddr","ne","new","next_event","next_start_connect","noise_key","num_chains","num_established_connections","num_peers","out_slots","partial_cmp","peer_ids","peers_capacity","peers_list","pending_api_events_buffer_size","pending_outcome_err","pending_outcome_ok","protocol_id","randomness_seed","read_write","respond","role","round_number","set_id","set_local_best_block","set_local_grandpa_state","storage_proof_request","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","announce","best_hash","best_number","chain_index","chain_index","chain_index","chain_index","chain_index","chain_indices","error","error","message","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","request","role","local_genesis","remote_genesis","all","all_forks","download_tree","grandpa_warp_sync","optimistic","para","AllAlreadyInChain","AllSync","AllSync","AlreadyInChain","BlockAnnounceOutcome","BlockRequestSuccessBlock","BlockVerification","BlockVerificationError","BlocksRequest","Config","ConfigFull","ConsensusMismatch","Discarded","Disjoint","Error","Error","Finalized","FinalizedStorageGet","FinalizedStorageNextKey","FinalizedStoragePrefixKeys","GrandpaWarpSync","HeaderBodyError","HeaderBodyVerify","HeaderError","HeaderVerify","HeaderVerify","HeaderVerifyError","HeaderVerifyOutcome","InvalidHeader","InvalidHeader","JustificationError","NotFinalizedChain","NotFinalizedChain","Outdated","ProcessOne","Queued","RequestDetail","RequestId","ResponseOutcome","SourceId","StorageGet","StorageGet","StorageNextKey","StoragePrefixKeys","Success","Success","TooOld","VerificationFailed","VerifyBodyHeader","VerifyHeader","VerifyWarpSyncFragment","WarpSyncFinished","WarpSyncFragmentVerify","add_request","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_hash","best_block_header","best_block_number","block_announce","blocks_capacity","blocks_request_response","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_information","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","desired_requests","download_ahead_blocks","eq","eq","eq","equivalent","equivalent","equivalent","finalized_block_header","finalized_runtime","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","get_hash","get_hash","grandpa_commit_message","grandpa_warp_sync_response","hash","hash","hash","hash","height","height","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_near_head_of_chain_heuristic","key","key","key_as_vec","knows_non_finalized_block","max_disjoint_headers","max_requests_per_block","ne","ne","ne","new","non_finalized_blocks_ancestry_order","num_blocks_clamp","obsolete_requests","partial_cmp","partial_cmp","perform","perform","prefix","process_one","proof_sender","remove_source","scale_encoded_extrinsics","scale_encoded_header","scale_encoded_justification","source_best_block","source_knows_non_finalized_block","source_num_ongoing_requests","source_user_data","source_user_data_mut","sources","sources_capacity","start","storage_get_response","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_num_blocks_clamp","announce_block_height","finalized_block_height","error","finalized_blocks","is_new_best","sync","sync","sync","user_data","error","is_new_best","is_new_finalized","sync","sync","user_data","ascending","block_hash","first_block_hash","first_block_height","keys","num_blocks","request_bodies","request_headers","request_justification","state_trie_root","sync_start_block_hash","discarded_unverified_block_headers","AllAlreadyInChain","AllForksSync","AllSync","AlreadyInChain","AncestrySearchResponseOutcome","BlockAnnounceOutcome","BlockBodyVerify","Config","ConsensusMismatch","Disjoint","Error","HeaderVerify","HeaderVerify","HeaderVerify","HeaderVerifyError","HeaderVerifyOutcome","Inconclusive","InvalidHeader","JustificationVerification","JustificationVerificationError","NewFinalized","NoJustification","NotFinalizedChain","NotFinalizedChain","ProcessOne","RequestId","RequestParams","RequestSuccessBlock","Success","TooOld","VerificationFailed","Verify","add_request","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_hash","best_block_header","best_block_number","block_announce","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","chain_information","clone","clone","clone_into","clone_into","cmp","cmp","desired_requests","eq","eq","equivalent","equivalent","finalized_block_header","finish_ancestry_search","first_block_hash","first_block_height","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","full","get_hash","get_hash","grandpa_commit_message","hash","hash","hash","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_success","knows_non_finalized_block","max_disjoint_headers","max_requests_per_block","ne","ne","new","non_finalized_blocks_ancestry_order","num_blocks","obsolete_requests","partial_cmp","partial_cmp","perform","process_one","remove_source","scale_encoded_header","scale_encoded_justification","source_best_block","source_knows_non_finalized_block","source_num_ongoing_requests","source_user_data","source_user_data_mut","sources","sources","sources_capacity","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","discarded_unverified_block_headers","announce_block_height","finalized_block_height","error","is_new_best","justification_verification","sync","sync","user_data","sync","AllForksSources","SourceId","add_known_block","add_source","as_any","as_any","as_any_mut","as_any_mut","best_block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","contains","eq","equivalent","finalized_block_height","fmt","fmt","from","from","get_hash","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_empty","keys","knows_non_finalized_block","len","ne","new","num_blocks","partial_cmp","remove","remove_known_block","set_best_block","set_finalized_block_height","source_knows_non_finalized_block","source_remove_known_block","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_data","user_data_mut","vzip","vzip","Block","Build","CodeNotFound","CoreVersion","DownloadId","DownloadParams","DownloadTree","Finalized","FirstFinalized","InvalidHeapPages","NewBest","NewBestAndRuntimeUpgrade","NextNecessaryDownload","None","NotNewBest","NotReady","OutputUpdate","OutputUpdateBlock","OutputUpdateBlockBest","Ready","RuntimeError","RuntimeId","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_hash","best_block_header","best_block_runtime","best_block_runtime_id","best_block_runtime_mut","block_hash","block_header","block_runtime","block_runtime_mut","block_state_root","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","drain_unused_runtimes","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","finalized_block_hash","finalized_block_header","finalized_block_runtime","finalized_block_runtime_id","finalized_block_runtime_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_finalized_block","from_finalized_block_and_runtime","get_hash","get_hash","has_output","hash","hash","id","input_finalize","input_insert_block","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_new_best","ne","ne","ne","ne","next_necessary_download","non_finalized_blocks_headers_ancestry_order","parent_hash","partial_cmp","partial_cmp","runtime_download_failure","runtime_download_finished_existing","runtime_download_finished_new","runtime_user_data","runtime_user_data_mut","runtimes_iter","scale_encoded_header","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_advance_output","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","best_block_hash","hash","scale_encoded_header","BabeFetchEpoch","Config","Error","Finished","GrandpaWarpSync","InProgress","InProgressGrandpaWarpSync","InvalidChain","InvalidHeapPages","MissingCode","NewRuntime","NextKey","NextKey","SourceId","StorageGet","StorageGet","Success","Verifier","Verifier","VirtualMachineParamsGet","VirtualMachineParamsGet","WaitingForSources","WaitingForSources","WarpSyncRequest","WarpSyncRequest","add_source","add_source","add_source","add_source","add_source","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_information","clone","clone_into","cmp","current_source","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","grandpa_warp_sync","handle_response","hash","inject_error","inject_error","inject_key","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","key_as_vec","ne","next","partial_cmp","proof_sender","remove_source","remove_source","remove_source","remove_source","runtime","set_virtual_machine_params","source_user_data","source_user_data_mut","sources","sources","sources_capacity","start_block_hash","start_chain_information","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warp_sync_header","warp_sync_header","warp_sync_header","warp_sync_source","warp_sync_source","warp_sync_source","Block","BlockVerification","BlocksUnavailable","Config","ConfigFull","Disassemble","DisassembleSource","Finalized","FinalizedStorageGet","FinalizedStorageNextKey","FinalizedStoragePrefixKeys","FinishRequestOutcome","HeaderBodyError","HeaderError","Idle","InvalidHeader","JustificationError","NewBest","NonCanonical","Obsolete","OptimisticSync","ProcessOne","Queued","RequestDetail","RequestFail","RequestId","RequestSuccessBlock","RequestsDrain","Reset","ResetCause","SourceId","SourcePunished","StorageGet","StorageNextKey","StoragePrefixKeys","Verify","Verify","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_hash","best_block_header","best_block_number","best_block_number","block_height","blocks_capacity","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_information","chain_information","clone","clone","clone_into","clone_into","cmp","cmp","desired_requests","disassemble","download_ahead_blocks","drop","eq","eq","equivalent","equivalent","finalized_block_header","finalized_runtime","finish_request","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","get_hash","get_hash","hash","hash","hash","header","height","id","inject_key","inject_keys_ordered","inject_value","insert_request","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_full_verification","justification","key","key","key_as_vec","ne","ne","new","next","non_finalized_blocks_ancestry_order","num_blocks","obsolete_requests","offchain_storage_changes","partial_cmp","partial_cmp","prefix","process_one","raise_source_best_block","remove_source","requests","scale_encoded_extrinsics","scale_encoded_header","scale_encoded_justification","size_hint","source_best_block","source_id","source_num_ongoing_requests","source_user_data","source_user_data_mut","sources","sources","sources_capacity","start","storage_top_trie_changes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","finalized_blocks","new_best_hash","new_best_number","previous_best_height","reason","sync","sync","sync","sync","Error","Free","Included","OccupiedCoreAssumption","PERSISTED_VALIDATION_FUNCTION_NAME","PersistedValidationDataRef","TimedOut","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode_persisted_validation_data_return_value","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_pov_size","parent_head","persisted_validation_data_parameters","relay_parent_number","relay_parent_storage_root","scale_encoded","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","light_pool","pool","validate","Config","LightPool","PruneBodyFinalized","SetBestBlock","TransactionId","add_block","add_unvalidated","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_hash","block_user_data","block_user_data_mut","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","double_scale_encoding","eq","equivalent","finalized_block_hash","find_transaction","fmt","fmt","fmt","from","from","from","from","from","get_hash","has_block","hash","included_transactions","included_transactions","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_included_best_chain","is_valid_against_best_block","missing_block_bodies","ne","new","num_transactions","oldest_block_finality_lag","partial_cmp","prune_finalized_with_body","remove_transaction","retracted_transactions","set_best_block","set_block_body","set_finalized_block","set_validation_result","to_owned","to_owned","transaction_user_data","transaction_user_data_mut","transactions_capacity","transactions_iter","transactions_iter_mut","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unvalidated_transactions","user_data","vzip","vzip","vzip","vzip","vzip","AppendBlock","AppendBlockTransaction","Config","NonIncludedUpdated","Pool","TransactionId","Unknown","Vacant","add_unvalidated","append_block","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_height","block_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","cmp","double_scale_encoding","eq","equivalent","finalized_block_height","find","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","hash","included_block_height","inclusion_order","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","iter","iter_mut","len","ne","new","partial_cmp","remove","remove_included","retract_blocks","set_validation_result","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unvalidated_transactions","user_data","user_data_mut","vzip","vzip","vzip","vzip","vzip","vzip","id","user_data","AncientBirthBlock","BadMandatory","BadProof","Call","CannotLookup","Config","Custom","Custom","DecodeError","EmptyProvidedTags","Error","ExhaustsResources","External","Finished","Future","InBlock","Invalid","InvalidHeader","InvalidTransaction","Local","MandatoryDispatch","NextKey","NextKey","NoUnsignedValidator","OutputDecodeError","Payment","PrefixKeys","PrefixKeys","Query","RuntimeVersion","Stale","StorageGet","StorageGet","TransactionSource","TransactionValidityError","Unknown","UnknownApiVersion","UnknownTransaction","VALIDATION_FUNCTION_NAME","ValidTransaction","WasmStart","WasmVmReadOnly","WasmVmReadWrite","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode_validate_transaction_return_value","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","key","key","key_as_vec","longevity","ne","ne","ne","ne","prefix","priority","propagate","provides","requires","runtime","scale_encoded_header","scale_encoded_transaction","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_transaction","validate_transaction_runtime_parameters_v2","validate_transaction_runtime_parameters_v3","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","virtual_machine","BytesToNibbles","Nibble","NibbleFromU8Error","TooLarge","Trie","all_nibbles","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_nibbles","calculate_root","clear","clone","clone","clone_into","clone_into","cmp","default","empty_trie_merkle_value","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","get_hash","hash","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_empty","ne","new","next","nibbles_to_bytes_extend","node_value","partial_cmp","prefix_proof","proof_node_decode","proof_verify","remove","root_merkle_value","size_hint","to_owned","to_owned","to_string","trie_structure","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AllKeys","AllKeys","CalculationCache","Finished","RootMerkleValueCalculation","StorageValue","StorageValue","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","empty","fmt","from","from","from","from","inject","inject","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","prefix_remove_update","root_merkle_value","storage_value_update","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","cache","hash","Config","NodeTy","NonRoot","Output","Root","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_ref","as_slice_of","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_merkle_root","children","clone","clone_into","encode_hex","encode_hex_upper","fmt","fmt","from","from","from","from_bytes","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","stored_value","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ty","type_id","type_id","type_id","vzip","vzip","vzip","key","partial_key","Config","InProgress","PrefixScan","ResumeOutcome","Success","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","prefix","prefix_scan","requested_keys","resume","trie_root_hash","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","keys","ChildLenDecode","ChildrenBitmapTooShort","ChildrenTooShort","Decoded","Empty","Error","InvalidPartialKeyPadding","PartialKey","PartialKeyLenOverflow","PartialKeyLenTooShort","PartialKeyTooShort","StorageValueLenDecode","StorageValueTooShort","TooLong","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","children_bitmap","clone","clone","clone_into","clone_into","decode","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","next","partial_key","size_hint","storage_value","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Children","Error","InvalidNodeValue","MissingProofEntry","Multiple","None","One","TrieNodeInfo","TrieNodeInfoConfig","TrieRootNotFound","VerifyProofConfig","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","next_nibbles","proof","proof","requested_key","requested_key","storage_value","to_owned","to_owned","to_string","trie_node_info","trie_root_hash","trie_root_hash","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_proof","vzip","vzip","vzip","vzip","vzip","children_bitmap","closest_ancestor_nibbles","Branch","BranchAlsoRemoved","BranchNodeAccess","Entry","NodeAccess","NodeIndex","Occupied","One","PrepareInsert","PrepareInsertOne","PrepareInsertTwo","Remove","SingleRemoveChild","SingleRemoveNoChild","Storage","StorageNodeAccess","StorageToBranch","TrieNowEmpty","TrieStructure","Two","Vacant","Vacant","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_node_key","capacity","child","child","child","child_user_data","child_user_data","child_user_data","clone","clone_into","default","eq","equivalent","existing_node","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","full_key","full_key","full_key","get_hash","has_storage_value","hash","insert","insert","insert","insert_storage_value","insert_storage_value","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_child","into_child","into_child","into_first_child","into_first_child","into_first_child","into_next_sibling","into_next_sibling","into_next_sibling","into_occupied","into_parent","into_parent","into_parent","into_storage","into_vacant","is_empty","is_root_node","is_root_node","is_root_node","len","ne","new","node","node_by_index","node_full_key_by_index","node_index","node_index","node_index","parent","parent","parent","partial_key","partial_key","partial_key","remove","remove_prefix","root_node","shrink_to_fit","structure_equal","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","branch_user_data","child","parent","sibling","storage_user_data","user_data","user_data","user_data","aura","babe","header_body","header_only","BadPublicKey","BadSignature","EmptyAuthorities","MissingPreRuntimeDigest","MissingSeal","ParentIsntAuraConsensus","SlotNumberNotIncreasing","TooFarInFuture","VerifyConfig","VerifyError","VerifySuccess","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","authorities_change","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_authorities","fmt","fmt","fmt","from","from","from","header","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","now_from_unix_epoch","parent_block_header","slot_duration","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_header","vzip","vzip","vzip","BadSecondarySlotAuthor","BadSignature","BadVrfProof","ForbiddenSlotType","InvalidAuthorityIndex","MissingEpochChangeLog","MissingPreRuntimeDigest","MissingSeal","OverPrimaryClaimThreshold","ParentIsntBabeConsensus","SlotNumberNotIncreasing","UnexpectedEpochChangeLog","VerifyConfig","VerifyError","VerifySuccess","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","epoch_transition_target","fmt","fmt","fmt","from","from","from","header","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","now_from_unix_epoch","parent_block_epoch","parent_block_header","parent_block_next_epoch","slot_number","slots_per_epoch","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_header","vzip","vzip","vzip","AllAuthorized","AllAuthorized","Aura","Aura","AuraVerification","Babe","Babe","BabeVerification","CodeKeyErased","Config","ConfigConsensus","Error","Finished","HeapPagesOnlyModification","HeapPagesParseError","MultipleConsensusEngines","NewRuntimeCompilationError","RuntimeCompilation","RuntimeCompilation","StorageGet","StorageGet","StorageNextKey","StorageNextKey","StoragePrefixKeys","StoragePrefixKeys","Success","SuccessConsensus","Unsealed","Verify","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_body","block_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","consensus","consensus","fmt","fmt","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","key_as_vec","logs","new_runtime","offchain_storage_changes","parent_block_header","parent_runtime","parent_runtime","prefix","storage_top_trie_changes","to_string","top_trie_root_calculation_cache","top_trie_root_calculation_cache","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","current_authorities","now_from_unix_epoch","now_from_unix_epoch","parent_block_epoch","parent_block_next_epoch","slot_duration","slots_per_epoch","authorities_change","epoch_transition_target","slot_number","AllAuthorized","AllAuthorized","Aura","Aura","AuraVerification","Babe","Babe","BabeVerification","BadParentHash","Config","ConfigConsensus","Error","MultipleConsensusEngines","NonSequentialBlockNumber","Success","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_header","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","parent_block_header","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","current_authorities","now_from_unix_epoch","now_from_unix_epoch","parent_block_epoch","parent_block_next_epoch","slot_duration","slots_per_epoch","authorities_change","epoch_transition_target","slot_number"],"q":["smoldot","","","","","","","","","","","","","","","","","","smoldot::author","","","smoldot::author::aura","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::author::buildsmoldot::author::build::BuilderAuthoring","","smoldot::author::build::ConfigConsensus","","","","smoldot::author::runtimesmoldot::author::runtime::BlockBuild","","smoldot::author::runtime::DispatchError","","smoldot::author::runtime::Error","","","","smoldot::author::runtime::InherentDataConsensus","","smoldot::chain","","","","smoldot::chain::async_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::async_tree::NextNecessaryAsyncOp","smoldot::chain::async_tree::OutputUpdate","","","","","smoldot::chain::blocks_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::blocks_tree::BodyVerifyStep1","","smoldot::chain::blocks_tree::BodyVerifyStep2","","","","","","","","","smoldot::chain::blocks_tree::FinalityVerifyError","","","","","","smoldot::chain::blocks_tree::HeaderVerifyError","smoldot::chain::blocks_tree::HeaderVerifySuccess","","","smoldot::chain::chain_informationsmoldot::chain::chain_information::ChainInformationConsensus","","","","","smoldot::chain::chain_information::ChainInformationConsensusRef","","","","","smoldot::chain::chain_information::ChainInformationFinality","","","smoldot::chain::chain_information::ChainInformationFinalityRef","","","smoldot::chain::chain_information::aura_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::chain_information::babe_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::chain_information::babe_fetch_epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::chain_information::babe_fetch_epoch::Query","","smoldot::chain::fork_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain_spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::database","","smoldot::database::finalized_serialize","","","","","","","","","","","","","","","","","","","","smoldot::database::full_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor::hostsmoldot::executor::host::Error","","","","","","","","","","","","","","","","","","","","","smoldot::executor::host::HostVm","","","","smoldot::executor::read_only_runtime_host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor::read_only_runtime_host::ErrorDetail","","smoldot::executor::runtime_host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor::runtime_host::ErrorDetail","","smoldot::executor::vmsmoldot::executor::vm::ExecOutcome","","","smoldot::executor::vm::RunErr","","smoldot::finality","","smoldot::finality::grandpa","","","smoldot::finality::grandpa::chain_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::commit","","smoldot::finality::grandpa::commit::decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::commit::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::warp_sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::warp_sync::Error","","","smoldot::finality::grandpa::warp_sync::Next","","smoldot::finality::justification","","smoldot::finality::justification::decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::justification::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::headersmoldot::header::DigestItem","","smoldot::header::DigestItemRef","","smoldot::header::GrandpaConsensusLog","","smoldot::header::GrandpaConsensusLogRef","","smoldot::informant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc","","","","smoldot::json_rpc::methods","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::MethodCall","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::MethodError","","","","","","","smoldot::json_rpc::methods::ParseError","","smoldot::json_rpc::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::payment_info","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::websocket_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::websocket_server::Event","","","","","","smoldot::libp2p","","","","","","","smoldot::libp2p::async_rw_with_buffers","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::collectionsmoldot::libp2p::collection::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::collection::multiaddr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::collection::multiaddr::multihash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection","","","","","smoldot::libp2p::connection::establishedsmoldot::libp2p::connection::established::ConfigRequestResponseIn","smoldot::libp2p::connection::established::Event","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::established::substreamsmoldot::libp2p::connection::established::substream::Event","","","","","","","","","","","","smoldot::libp2p::connection::established::substream::InboundError","","","smoldot::libp2p::connection::established::substream::InboundTy","","","","smoldot::libp2p::connection::handshake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::handshake::Handshake","","smoldot::libp2p::connection::multistream_select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::multistream_select::Config","","smoldot::libp2p::connection::noise","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::noise::NoiseHandshake","","smoldot::libp2p::connection::yamuxsmoldot::libp2p::connection::yamux::IncomingDataDetail","","","","","","smoldot::libp2p::multiaddr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::multiaddr::multihashsmoldot::libp2p::peer_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::peerssmoldot::libp2p::peers::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::read_write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::metadata::decodesmoldot::metadata::decode::StorageEntryTypeRef","","","","","","","","smoldot::metadata::events","","","","","","","","","","","","","","","","","","","","","smoldot::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::network::kademlia","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::network::protocolsmoldot::network::servicesmoldot::network::service::Event","","","","","","","","","","","","","","","","","","","","","smoldot::network::service::NotificationsOutErr","","smoldot::sync","","","","","","smoldot::sync::all","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::sync::all::BlockAnnounceOutcome","","smoldot::sync::all::BlockVerification","","","","","","","smoldot::sync::all::HeaderVerifyOutcome","","","","","","smoldot::sync::all::RequestDetail","","","","","","","","","","","smoldot::sync::all::ResponseOutcome","smoldot::sync::all_forkssmoldot::sync::all_forks::AncestrySearchResponseOutcome","smoldot::sync::all_forks::BlockAnnounceOutcome","","smoldot::sync::all_forks::HeaderVerifyOutcome","","","","","","smoldot::sync::all_forks::ProcessOne","smoldot::sync::all_forks::sources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::sync::download_treesmoldot::sync::download_tree::NextNecessaryDownload","smoldot::sync::download_tree::OutputUpdate","","","smoldot::sync::grandpa_warp_syncsmoldot::sync::optimisticsmoldot::sync::optimistic::BlockVerification","","","","","","","","smoldot::sync::optimistic::ProcessOne","smoldot::sync::para","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::transactions","","","smoldot::transactions::light_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::transactions::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::transactions::pool::AppendBlockTransaction","","smoldot::transactions::validatesmoldot::transactions::validate::Query","","smoldot::trie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::calculate_root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::calculate_root::RootMerkleValueCalculation","","smoldot::trie::node_value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::node_value::NodeTy","","smoldot::trie::prefix_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::prefix_proof::ResumeOutcome","smoldot::trie::proof_node_decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::proof_verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::proof_verify::Children","smoldot::trie::proof_verify::Error","smoldot::trie::trie_structuresmoldot::trie::trie_structure::Remove","","","","","","","","smoldot::verify","","","","smoldot::verify::aura","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::babe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::header_bodysmoldot::verify::header_body::ConfigConsensus","","","","","","","smoldot::verify::header_body::SuccessConsensus","","","smoldot::verify::header_only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::header_only::ConfigConsensus","","","","","","","smoldot::verify::header_only::Success","",""],"d":["","Builds the header of the genesis block, from the values …","Data structures describing a chain of blocks.","Substrate chain configuration.","Persistent data storage.","WebAssembly runtime code execution.","Finality consists is declaring a block as irreversible. …","","Parsing SCALE-encoded header.","Information string printed out.","JSON-RPC servers. Trusted access to the blockchain.","Low-level peer-to-peer networking.","Runtime-provided metadata","","Syncing, short for synchronizing, consists in …","Transactions handling.","Radix-16 Merkle-Patricia trie.","Methods that verify whether a block is correct.","","","Block generation system.","Configuration for <code>next_slot_claim</code>.","Slot happening now or in the future and that can be …","","","","","","","","","","","List of the Aura authorities allowed to produce a block. …","","","","","","","","","","","","","","Iterator to the list of sr25519 public keys available …","Index within <code>Config::local_authorities</code> of the authority …","","Calculates the earliest one of the authorities in …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Duration, in milliseconds, of an Aura slot.","UNIX time when the slot ends. Always inferior to the …","Slot number of the claim. Used when building the block.","UNIX time when the slot starts. Can be inferior to the …","","","","","","","","","","None of the authorities available locally are allowed to …","More transactions can be added.","Block building is ready to accept extrinsics.","Result of the previous call to …","Chain is using the Aura consensus algorithm.","Currently authoring a block.","Ready to start producing blocks.","Configuration to pass when the actual block authoring is …","Current state of the block building process.","Current state of the block building process.","Configuration for a block generation.","Extension to <code>Config</code>.","Error that can happen during the block production.","Error happened during the generation.","Runtime has generated an invalid block header.","Fetching the key that follows a given one in the parent …","Fetching the key that follows a given one in the parent …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","Block production is ready to start.","Error while producing the block in the runtime.","Block has been produced and must now be sealed.","Block has been produced by the runtime and must now be …","Loading a storage value from the parent storage is …","Loading a storage value from the parent storage is …","Block production is idle, waiting for a slot.","Block production is idle, waiting for a slot.","Adds a SCALE-encoded extrinsic and resumes execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index within the list of authorities of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus-specific configuration.","Indicate that no more extrinsics will be added, and …","","","","","","","","","","","","","","","","","","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the sr25519 signature of the SCALE-encoded header …","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Initializes a new builder.","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Hash of the parent of the block to generate.","Height of the parent of the block to generate.","Runtime used to check the new block. Must be built using …","Returns the prefix whose keys to load.","Returns the SCALE-encoded header that must be signed.","Start producing the block.","Start the block production.","","Optional cache corresponding to the storage trie root …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns when block production can begin, as a UNIX …","Result of the previous call to …","Object to use to continue trying to push other …","List of the Aura authorities allowed to produce a block. …","Iterator to the list of sr25519 public keys available …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Duration, in milliseconds, of an Aura slot.","The transaction birth block is ancient.","More transactions can be added.","Block building is ready to accept extrinsics.","Result of the previous call to …","Chain uses the Aura consensus algorithm.","Aura-specific items.","Chain uses the Babe consensus algorithm.","Babe-specific items.","Error while parsing output of <code>BlockBuilder_apply_extrinsic</code>…","Error while parsing output of …","An extrinsic with a Mandatory dispatch resulted in Error. …","A bad origin.","General error to do with the transaction’s proofs (e.g. …","Current state of the block building process.","Overflow when incrementing block height.","The call of the transaction is not expected.","Could not lookup some information that is required to …","Failed to lookup some data.","Configuration for a block generation.","Extra configuration depending on the consensus algorithm.","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Reason why a dispatch call failed.","Error that can happen during the block production.","The transaction would exhaust the resources of current …","Block generation is over.","General error to do with the transaction not yet being …","Values of the inherents to pass to the runtime.","Extra consensus-specific items in <code>InherentData</code>.","Applying an inherent extrinsic has returned a …","Applying an inherent extrinsic has returned a …","The list of inherent extrinsics are needed in order to …","The inherent extrinsics are required in order to continue.","<code>Core_initialize_block</code> has returned a non-empty output.","The transaction is invalid.","An invalid transaction validity.","A transaction with a mandatory dispatch. This is invalid; …","A custom error in a module.","Fetching the key that follows a given one in the parent …","Fetching the key that follows a given one in the parent …","No validator found for the given unsigned transaction.","General error to do with the inability to pay some fees …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","General error to do with the transaction being outdated …","Loading a storage value from the parent storage is …","Loading a storage value from the parent storage is …","Block successfully verified.","Errors that can occur while checking the validity of a …","Transaction validity can’t be determined.","An unknown transaction validity.","Error while initializing the Wasm virtual machine.","Error while executing the Wasm virtual machine.","Adds a SCALE-encoded extrinsic and resumes execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns this list of inherents into a list that can be …","Body of the produced block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start a block building process.","","","","","","","","","Consensus-specific fields.","Consensus-specific item to put in the digest of the …","","","","","","","","","Indicate that no more extrinsics will be added, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Injects the inherents extrinsics and resumes execution.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects a raw list of inherents and resumes execution.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Concatenation of all the log messages printed by the …","","","","","List of changes to the offchain storage that this block …","Hash of the parent of the block to generate.","Height of the parent of the block to generate.","Runtime used to check the new block. Must be built using …","Runtime that was passed by <code>Config</code>.","Returns the prefix whose keys to load.","SCALE-encoded header of the produced block.","List of changes to the storage top trie that the block …","Number of milliseconds since the UNIX epoch when the …","","","","","","","","","","Optional cache corresponding to the storage trie root …","Cache used for calculating the top trie root of the new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Result of the previous call to …","Object to use to continue trying to push other …","Module specific error value.","Module index, matching the metadata module index.","Error returned by the runtime.","Error returned by the runtime.","Extrinsic that triggered the problem.","Extrinsic that triggered the problem.","Number of the Aura slot being claimed to generate this …","Number of the Babe slot being claimed to generate this …","Data structure containing trees of nodes.","Finalized block header, plus tree of authenticated …","Data structures containing the finalized state of the …","Data structure containing trees of nodes.","Identifier for an asynchronous operation in the <code>AsyncTree</code>.","Information about an operation that must be started.","","A new block has been added to the list of output …","A non-finalized block has been finalized in the output.","","","See <code>AsyncTree::try_advance_output</code>.","See <code>OutputUpdate</code>.","","","","","","","","","","","","","","Injects into the state of the state machine a failed …","Injects into the state of the data structure a completed …","User data associated to the async operation of this block.","Returns the <code>NodeIndex</code> of the current “output” best …","Returns the asynchronous operation user data associated …","Returns the asynchronous operation user data associated …","Index of the block to perform the operation against.","Returns the user data associated to the given block.","User data of the block to perform the operation against.","Returns the user data associated to the given block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifier to later provide when calling …","Index of the node within the data structure.","Updates the state machine to take into account that the …","Inserts a new block in the state machine.","Similar to <code>AsyncTree::input_iter_unordered</code>, except that …","Returns the list of all non-finalized blocks that have …","","","","","","","","","","","","","","","","","","","","","","","","","True if this block is considered as the best block of the …","","","","Returns a new empty <code>AsyncTree</code>.","Examines the state of <code>self</code> and, if a block’s …","Returns the parent of the given node. Returns <code>None</code> if the …","","","","","Tries to update the output blocks to follow the input.","","","","","","","","","","","","","","","","","","","User data associated to this block.","","","","","","","","User data associated to the async operation of this block.","Index of the best block after the finalization. <code>None</code> if …","Index of the node within the data structure. This index …","Blocks that were a descendant of the former finalized …","User data associated to this block.","Finality mechanism used by the chain doesn’t use …","The parent of the block isn’t known.","The parent of the block isn’t known.","The target block height is strictly inferior to the …","Access to a block’s information and hierarchy.","Holds the <code>NonFinalizedTree</code> and allows insert a …","Error while verifying a block body.","Verification is pending. In order to continue, a …","Block verification, either just finished or still in …","Block verification, either just finished or still in …","Error that can happen when verifying a Grandpa commit.","Configuration for the <code>NonFinalizedTree</code>.","Error during the consensus-related check.","Block uses a different consensus than the rest of the …","Block uses a different consensus than the rest of the …","Block is already known.","Block is already known.","The target block height is the same as the finalized …","The target block height and hash are the same as the …","Verification has failed. The block is invalid.","Returned by <code>NonFinalizedTree::verify_justification</code> and …","Error while verifying the finality in the context of the …","Error while verifying the finality in the context of the …","Error that can happen when verifying a proof of finality.","Verification is over.","Mutably borrows the <code>NonFinalizedTree</code> and allows insert a …","Error that can happen when verifying a block header.","","Block wasn’t known and is ready to be inserted.","Error while decoding the commit.","Error while decoding the header.","Error while decoding the header.","Error while decoding the justification.","Error that can happen when verifying a justification.","Holds state about the current state of the chain for the …","Not enough blocks are known by the tree to verify this …","Chain doesn’t use the GrandPa algorithm.","Verification is pending. In order to continue, a …","A new runtime must be compiled.","A new runtime must be compiled.","Iterator producing the newly-finalized blocks removed …","Error that can happen when setting the finalized block.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","There exists a block in-between the latest finalized …","Block must have been passed to …","Finality proof targets a block that isn’t in the chain.","The justification verification has failed. The …","The commit verification has failed. The commit is invalid …","The block verification has failed. The block is invalid …","Abort the verification and return the unmodified tree.","Destroys the object without inserting the block in the …","Applies the justification, finalizing the given block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns the hash of the best block.","Returns the header of the best block.","Returns the user data of the block about to be justified.","Pre-allocated size of the chain, in number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs the runtime compilation.","Information about the latest finalized block and its …","","Removes all non-finalized blocks from the tree.","","","Returns true if the block with the given hash is in the …","","","Returns a list of blocks (by their height and hash) that …","Returns the hash of the latest finalized block.","Returns the header of the latest finalized block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the block header about to be inserted.","Returns the header of the block about to be inserted.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Inserts the block with the given user data.","Inserts the block with the given user data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroys the object without inserting the block in the …","","","Returns true if the block to be finalized is the current …","Returns true if there isn’t any non-finalized block in …","Returns the header of all known non-finalized blocks in …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Returns the number of non-finalized blocks in the chain.","Initializes a new queue.","","","","","","Gives access to a block stored by the <code>NonFinalizedTree</code>, …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Access to the parent block’s information and hierarchy. …","Access to the parent block’s information and hierarchy. …","Returns the prefix whose keys to load.","Reserves additional capacity for at least <code>additional</code> new …","Resume the verification process by passing the requested …","Sets the latest known finalized block. Trying to verify a …","Shrink the capacity of the chain as much as possible.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the finalization process modifies the …","","Verifies the given block.","Verifies the given Grandpa commit message.","Verifies the given block.","Verifies the given justification.","","","","","","","","","","","","","","","","","","","","","","","Hash of the parent block in question.","Chain yielded back.","Error that happened during the verification.","Use to insert the block in the chain.","Contains <code>Some</code> if and only if …","List of changes to the offchain storage that this block …","Value that was passed to <code>BodyVerifyRuntimeRequired::resume</code>…","Value that was passed to <code>BodyVerifyRuntimeRequired::resume</code>…","List of changes to the storage top trie that the block …","Cache of calculation for the storage trie of the best …","Hash of the block that isn’t in the chain.","Number of the block that isn’t in the chain.","Hash of the block to finalize first.","Number of the block to finalize first.","Hash of the block contained in the justification.","Number of the block contained in the justification.","Hash of the parent block in question.","Height of the verified block.","Use this struct to insert the block in the chain after …","True if the verified block will become the new “best” …","Any node on the chain is allowed to produce blocks.","See <code>ChainInformationConsensus::AllAuthorized</code>.","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Error when retrieving the Aura algorithm configuration.","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Error when retrieving the Babe algorithm configuration.","Information about a Babe epoch.","Information about a Babe epoch.","Information about the latest finalized block and state …","Extra items that depend on the consensus engine.","Extra items that depend on the consensus engine.","Extra items that depend on the finality engine.","Extra items that depend on the finality engine.","Equivalent to a <code>ChainInformation</code> but referencing an …","The finalized block is block number 0, but the GrandPa …","Error when building the chain information from the …","Chain uses the Grandpa finality algorithm.","See equivalent variant in <code>ChainInformationFinality</code>.","Error when retrieving the GrandPa configuration.","Missing Babe slot start number for Babe epoch number …","Multiple consensus algorithms have been detected.","Finalized block is not number 0, but no Babe epoch …","Next Babe epoch number does not immediately follow …","Blocks themselves don’t contain any information …","See equivalent variant in <code>ChainInformationFinality</code>.","Scheduled GrandPa authorities change is before finalized …","Finalized block is block number 0, and a Babe epoch …","Found a Babe slot start number for Babe epoch number 0. …","Information about the latest finalized block and state …","Information about the latest finalized block and state …","Error when turning a <code>ChainInformation</code> into a …","Types of blocks allowed for this epoch.","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Gives access to the information.","Gives access to the information.","","List of authorities allowed to author blocks during this …","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the constant that allows determining the chances …","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","Extra items that depend on the consensus engine.","Extra items that depend on the consensus engine.","Index of the epoch.","See equivalent field in <code>BabeEpochInformation</code>.","Extra items that depend on the finality engine.","Extra items that depend on the finality engine.","Header of the highest known finalized block.","See equivalent field in <code>ChainInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the <code>ChainInformation</code> corresponding to the genesis …","Builds the <code>ChainInformation</code> corresponding to the genesis …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Randomness value for this epoch.","See equivalent field in <code>BabeEpochInformation</code>.","Slot at which the epoch starts.","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether the information is coherent.","","","","","","","","","","","","","List of authorities that must validate children of the …","Babe epoch information about the epoch the finalized …","Babe epoch information about the epoch right after the …","Duration, in milliseconds, of an Aura slot.","Number of slots per epoch. Configured at the genesis …","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","Grandpa authorities set ID of the block right after …","Change in the GrandPa authorities list that has been …","List of GrandPa authorities that need to finalize the …","See equivalent field in <code>ChainInformationFinality</code>.","See equivalent field in <code>ChainInformationFinality</code>.","See equivalent field in <code>ChainInformationFinality</code>.","Aura configuration of a chain, as extracted from the …","Failed to decode the list of authorities returned by …","Error while decoding the output of the virtual machine …","Error when retrieving the Aura configuration.","Error when retrieving the Aura configuration.","Failed to decode heap pages from the genesis storage.","Virtual machine tried to call a host function that isn’…","Runtime couldn’t be found in the genesis storage.","Crash while running the virtual machine.","Error while executing the runtime.","Error when initializing the virtual machine.","Error when starting the virtual machine.","","","","","","","List of authorities that can validate block #1.","","","","","","","","","","","","","","","","","Retrieves the configuration from the storage of the …","Retrieves the configuration from the given virtual …","","","","","","","","","","","Returns <code>true</code> if this error is about an invalid function.","Returns <code>true</code> if this error is about an invalid function.","Duration, in milliseconds, of a slot.","","","","","","","","","","","","","","","","BABE configuration of a chain, as extracted from the …","Error when retrieving the BABE configuration.","Error when retrieving the BABE configuration.","Failed to decode heap pages from the genesis storage.","Virtual machine tried to call a host function that isn’…","Error while decoding the output of the virtual machine.","Runtime couldn’t be found in the genesis storage.","Crash while running the virtual machine.","Error while executing the runtime.","Error when initializing the virtual machine.","Error when starting the virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the configuration from the storage of the …","Retrieves the configuration from the given virtual …","","","","","","","","","","","Returns <code>true</code> if this error is about an invalid function.","Returns <code>true</code> if this error is about an invalid function.","","","","","","","","","","","","","","","","","The Babe epoch to fetch.","Configuration for <code>babe_fetch_epoch</code>.","Fetch the current epoch using <code>BabeApi_current_epoch</code>.","Error while decoding the babe epoch.","Problem encountered during a call to <code>babe_fetch_epoch</code>.","Fetching the Babe epoch is over.","Fetch the next epoch using <code>BabeApi_next_epoch</code>.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Current state of the operation.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the storage trie root is required in order to …","Fetching the storage trie root is required in order to …","Error while starting the Wasm virtual machine.","Error while running the Wasm virtual machine.","","","","","","","","","","","","","","","Fetches a Babe epoch using <code>BabeApi_current_epoch</code> or …","","","","","","","","","","","","","","","The Babe epoch to fetch.","","","","","","","","","","Injects the key.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Writes the trie root hash to the Wasm VM and prepares it …","Runtime used to get the Babe epoch. Must be built using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tree of nodes. Each node contains a value of type <code>T</code>.","Index of a node within a <code>ForkTree</code>. Never invalidated …","Iterator of elements removed when pruning ancestors.","Node removed by <code>ForkTree::prune_ancestors</code>.","","","","","","","","","Returns two iterators: the first iterator enumerates the …","","","","","","","","","Removes all elements in the tree, leaving it empty.","","","","Returns the common ancestor between <code>node1</code> and <code>node2</code>, if …","","","","","Finds the first node in the tree that matches the given …","","","","","","","Returns the value of the node with the given index.","Returns the value of the node with the given index.","Former index of the node. This index is no longer valid.","Inserts a new node in the tree.","","","","","","","","","","","","","","","","","","Returns true if <code>maybe_ancestor</code> is an ancestor of …","Returns true if there isn’t any element in the tree.","True if this node is an ancestor of the target of the …","Returns an iterator to all the node values. The returned …","Returns an iterator to all the node values without any …","Returns the number of elements in the tree.","","Initializes a new <code>ForkTree</code>.","","Enumerates all the nodes, starting from the the given …","Returns the parent of the given node. Returns <code>None</code> if the …","","Removes from the tree:","Removes from the tree any node that isn’t either an …","Reserves additional capacity for at least <code>additional</code> new …","Same as <code>ForkTree::node_to_root_path</code>, but gives the path …","Shrink the capacity of the tree as much as possible.","","","","","","","","","","","","","","","Value that was passed to <code>ForkTree::insert</code>.","","","","","Initializes a new <code>ForkTree</code> with a certain pre-allocated …","A configuration of a chain. Can be used to build a …","","Error that can happen when parsing a chain spec JSON.","","","","","","","","Returns the list of bootnode addresses in the chain specs.","","","","","","","Returns a string indicating the type of chain.","","","","","","","","Parse JSON content into a <code>ChainSpec</code>.","Returns the list of storage keys and values of the …","Returns the genesis storage value for a key","Returns true if the chain is of a type for which a live …","Returns the identifier of the chain. Similar to the name, …","","","","","","","","","","","","","","Returns the name of the chain. Meant to be displayed to …","Returns a list of arbitrary properties contained in the …","Returns the network protocol id that uniquely identifies …","","Returns the list of libp2p multiaddresses of the default …","","","","","","","","","","","","","","","Serializing/deserializing a …","Filesystem-backed database containing all the information …","Opaque error indicating a corruption in the data stored …","","","","","Deserializes the information about the chain.","Serializes the given chain information as a string.","Serializes the given chain information and finalized …","","","","","","","","","","","","","Error accessing the database.","Error accessing the database.","Error accessing the database.","Error while accessing some information.","Error when decoding the header to import.","The header of a block in the database has failed to …","The parent of a block in the database couldn’t be found …","Configuration for the database.","Type of database.","Multiple different consensus algorithms are mixed within …","Database could be accessed, but its content is invalid.","Error in the content of the database.","An open database. Holds file descriptors.","Either existing database or database prototype.","Store the database on disk. Path to the directory …","Block was already in the database.","Either a database has just been created, or there existed …","Error while accessing the storage of the finalized block.","Block isn’t a descendant of the latest finalized block.","Error while calling <code>SqliteFullDatabase::insert</code>.","","Low-level database error, such as an error while …","The information about a Babe epoch found in the database …","A block hash is expected to be 32 bytes. This isn’t the …","Values in the database are all well-formatted, but are …","Finalized block number stored in the database doesn’t …","Block numbers are expected to be 64 bits.","Store the database in memory. The database is discarded …","Some parts of the database refer to a block by its hash, …","Missing a key in the <code>meta</code> table.","Parent of the block to insert isn’t in the database.","Block hash passed as parameter is no longer the finalized …","A database already existed and has now been opened.","New finalized block must be a child of the previous …","Error while calling <code>SqliteFullDatabase::set_finalized</code>.","An open database. Holds file descriptors.","New finalized block isn’t in the database.","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of the block in the database whose …","Returns the list of extrinsics of the given block, or <code>None</code>…","Returns the hashes of the blocks given a block number.","Returns the SCALE-encoded header of the given block, or …","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of the finalized block in the database.","Returns all the keys and values in the storage of the …","Returns the value associated to a key in the storage of …","Returns the list of keys of the storage of the finalized …","Returns the key in the storage of the finalized block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the given <code>chain_information::ChainInformationRef</code> …","Insert a new block in the database.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opens the database using the given <code>Config</code>.","Changes the finalized block to the given one.","Returns a <code>chain_information::ChainInformation</code> struct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of database.","","","","","","","","","","","","","","","","","","","","","","","Buffer storing the SCALE-encoded core version.","One API that the runtime supports.","Iterator to a list of APIs. See <code>CoreVersionRef::apis</code>.","Error while executing <code>core_version</code>.","Runtime specification, once decoded.","Default number of heap pages if the storage doesn’t …","Error while decoding the output.","<code>Core_version</code> used a host function that is forbidden in …","Error potentially returned by <code>storage_heap_pages_to_value</code>.","Error during the execution of the <code>Core_version</code> function.","Error while starting the execution of the <code>Core_version</code> …","Number of heap pages is too large.","Storage value has the wrong length.","List of “API“s that the runtime supports.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs the <code>Core_version</code> function using the given virtual …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wasm virtual machine specific to the Substrate/Polkadot …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blake2 hash of length 8 of the name of the API.","","","","","Wasm virtual machine, with automatic storage overlay and …","Wasm virtual machine, with automatic storage overlay and …","","","Converts a value of the key <code>:heappages</code> found in the …","","","","","","","","","Arbitrary version number corresponding to the …","","","","","","","","","","","","","","","","","","","Version of the module. Typical values are <code>1</code>, <code>2</code>, <code>3</code>, …","General-purpose WebAssembly virtual machine.","","","","","","","Error in the format of the runtime code.","A non-<code>i64</code> value has been returned by the Wasm entry point.","Must provide the runtime version obtained by calling the …","Need to call <code>Core_version</code> on the given Wasm code and …","The size of the input data is too large.","Declares the end of a transaction.","Ends a storage transaction. All changes made to the …","Reason why the Wasm blob isn’t conforming to the …","The Wasm blob did something that doesn’t conform to the …","Must set the value of the offchain storage.","Must the set value of an offchain storage entry.","Must load a storage value, treat it as if it was a …","See documentation of <code>ExternalStorageAppend</code>.","Must provide the trie root hash of the changes trie.","Need to provide the trie root of the changes trie.","Must remove from the storage keys which start with a …","Must remove all the storage values starting with a …","Must provide the value of a storage entry.","Must load an storage value.","Must provide the storage key that follows, in …","Need to provide the storage key that follows a specific …","Must provide the trie root hash of the storage.","Need to provide the trie root of the storage.","Must set the value of a storage entry.","Must set an storage value.","Function execution has succeeded. Contains the return …","Function execution has succeeded. Contains the return …","Execution has finished while a transaction started with …","Called <code>ext_allocator_free_version_1</code> with an invalid …","Couldn’t find the <code>__heap_base</code> symbol in the Wasm code.","Running virtual machine.","Prototype for an <code>HostVm</code>.","The data is zstandard-compressed, but the data is in an …","Report about a log entry being emitted.","Runtime has emitted a log entry.","Error possibly returned when decoding a zstd-compressed …","Called <code>ext_storage_start_transaction_version_1</code> with a …","Error that can happen when initializing a VM.","Called <code>ext_storage_rollback_transaction_version_1</code> or …","Error when allocating memory for a return type.","Failed to decode a SCALE-encoded parameter.","One parameter is expected to point to a buffer, but the …","Mismatch between the number of parameters expected and …","Virtual machine is ready to run.","Wasm virtual machine is ready to be run. Call …","An host_fn wants to returns a certain value, but the Wasm …","The pointer and size returned by the Wasm entry point …","Error that can happen when starting a VM.","Declares the start of a transaction.","Declares the start of a storage transaction. See …","The size of the code exceeds the maximum allowed length.","Error in the Wasm code execution.","One parameter is expected to point to a UTF-8 string, but …","Error while initializing the virtual machine.","Error while starting the virtual machine.","The type of one of the parameters is wrong.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of heap pages that were passed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be provided back with …","Returns the key whose value must be set.","Returns the key whose value must be set.","Returns the key whose following key must be returned.","Returns the key whose value must be set.","Returns the maximum number of keys to remove. <code>None</code> means …","Maximum size of the value to pass back.","Creates a new <code>HostVmPrototype</code>. Parses and potentially …","Offset within the value that is requested.","Returns the prefix whose keys must be removed.","Writes the storage value in the Wasm VM’s memory and …","Resumes execution after having set the value.","Resumes execution after having set the value.","Resumes execution after having cleared the values.","Writes the trie root hash to the Wasm VM and prepares it …","Writes the trie root hash to the Wasm VM and prepares it …","Writes the follow-up key in the Wasm VM memory and …","Writes the SCALE-encoded runtime version to the memory …","Resumes execution after having set the value.","Resumes execution after having set the value.","Resumes execution after having acknowledged the event.","Resumes execution after having acknowledged the event.","Same as <code>ExternalStorageGet::resume</code>, but passes the full …","Similar to <code>ExternalStorageGet::resume</code>, but allows passing …","Starts the VM, calling the function passed as parameter.","Runs the virtual machine until something important …","Same as <code>HostVmPrototype::run</code>, except that the function …","Same as <code>HostVmPrototype::run</code>, except that the function …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Returns the value to set.","Returns the value to append.","Returns the value to set.","","","","","","","","","","","","","","","","","","","","","Returns the Wasm code whose runtime version must be …","Type that has actually gotten returned. <code>None</code> for “void…","Number of parameters that have been passed.","Type of the value that got passed.","Decoding error that happened.","Expected number of parameters.","Type of the value that was expected.","Name of the function being called whose number of …","Name of the function being called where a type mismatch …","Name of the function being called where a type mismatch …","Name of the function being called where a type mismatch …","Name of the function being called.","Expected length of the buffer.","Size of the virtual memory.","Index of the invalid parameter. The first parameter has …","Index of the invalid parameter. The first parameter has …","Index of the invalid parameter. The first parameter has …","Pointer that got returned.","Pointer passed as parameter.","Pointer that was expected to be free’d.","Size of the requested allocation.","Size that got returned.","Error that happened.","Virtual machine ready to be used again.","Object used to resume execution.","If true, changes must be rolled back.","Configuration for <code>run</code>.","Error that can happen during the execution.","See <code>Error::detail</code>.","Execution is over.","","Size of the logs generated by the runtime exceeds the …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Current state of the execution.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the storage trie root is required in order to …","Fetching the storage trie root is required in order to …","Execution is successful.","Function execution has succeeded. Contains the return …","Error while executing the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exact error that happened.","","","","","","","","","","","","","","","","Name of the function to be called.","Injects the key.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Concatenation of all the log messages printed by the …","Parameter of the call, as an iterator of bytes. The …","Prototype of the virtual machine that was passed through …","Writes the trie root hash to the Wasm VM and prepares it …","Start running the WebAssembly virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Virtual machine to be run.","Contains the output value of the runtime, and the virtual …","","","","","","","","","","Error that happened.","Concatenation of all the log messages printed by the …","Configuration for <code>run</code>.","Error that can happen during the execution.","See <code>Error::detail</code>.","Execution is over.","Size of the logs generated by the runtime exceeds the …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","Current state of the execution.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Execution is successful.","Function execution has succeeded. Contains the return …","Error while executing the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exact error that happened.","","","","","","","","","","","","","","","","Name of the function to be called.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Concatenation of all the log messages printed by the …","Initial state of <code>Success::offchain_storage_changes</code>. The …","List of changes to the offchain storage that this block …","Parameter of the call, as an iterator of bytes. The …","Returns the prefix whose keys to load.","Prototype of the virtual machine that was passed through …","Start running the WebAssembly virtual machine.","Initial state of <code>Success::storage_top_trie_changes</code>. The …","List of changes to the storage top trie that the block …","","","","Optional cache of the trie root calculation to use. Must …","Cache used for calculating the top trie root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Virtual machine to be run.","Contains the output value of the runtime, and the virtual …","","","","","","","","","","Error that happened.","Concatenation of all the log messages printed by the …","Passed a wrong value back.","The WebAssembly code will be instantiated once and run …","Failed to allocate memory for the virtual machine.","Hint used by the implementation to decide which kind of …","Outcome of the <code>run</code> function.","The execution has finished.","Couldn’t find the requested function.","Error that can happen when calling …","Number of heap pages available to the Wasm code.","A 32-bits integer. There is no fundamental difference …","A 32-bits integer. Used for both signed and unsigned …","A 32-bits integer. There is no fundamental difference …","A 64-bits integer. Used for both signed and unsigned …","If a “__indirect_function_table” symbol is provided, …","The virtual machine has been paused due to a call to a …","Requested symbol isn’t a <code>u32</code>.","If a “memory” symbol is provided, it must be a memory.","Compiled Wasm code.","Opaque error indicating an error while parsing or …","Error while parsing or compiling the WebAssembly code.","Error that can happen when initializing a …","The requested function has been found in the list of …","Couldn’t find requested symbol.","The WebAssembly code is expected to be only run once.","Error while reading memory.","The state machine is poisoned.","Error that can happen when resuming the execution of a …","Low-level Wasm function signature.","The requested function has a signature that isn’t …","Error that can happen when calling …","Opaque error that happened during execution, such as an …","Error used in the conversions between VM implementation …","The WebAssembly code running through this VM is untrusted.","Type of a value passed as parameter or returned by a …","","","Value that a Wasm function can accept or produce.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of a global that the module exports.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps <code>WasmValue::I32</code> into its value.","Unwraps <code>WasmValue::I64</code> into its value.","Turns back this virtual machine into a prototype.","Returns the size of the memory, in bytes.","","","Creates a new process state machine from the given …","Compiles the given Wasm code.","","Creates a <code>Signature</code> from the given parameter types and …","Returns a list of all the types of the parameters.","","Copies the given memory range into a <code>Vec<u8></code>.","Returns the type of the return type of the function. <code>None</code> …","Starts or continues execution of this thread.","Turns this prototype into an actual virtual machine. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type corresponding to this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the data at the given memory location.","Identifier of the function to call. Corresponds to the …","Parameters of the function call.","Return value of the function.","Type of the value that was expected.","Type of the value that was actually passed.","","Justifications contain a proof of the finality of a block.","","GrandPa commits contain a proof of the finality of a …","","Error when retrieving the Grandpa configuration.","Error when retrieving the Grandpa configuration.","Grandpa configuration of a chain, as extracted from the …","Failed to decode heap pages from the genesis storage.","Virtual machine tried to call a host function that isn’…","Error while decoding the SCALE-encoded list.","Runtime couldn’t be found in the genesis storage.","Crash while running the virtual machine.","Version number of the encoded authorities list isn’t …","Error while executing the runtime.","Error when initializing the virtual machine.","Error when initializing the virtual machine.","","","","","","","","","","","","","","","","","","","","","","","Retrieves the configuration from the storage of the …","Authorities of the authorities set 0. These are the …","","","","","","","","","","","Returns <code>true</code> if this error is about an invalid function.","Returns <code>true</code> if this error is about an invalid function.","","","","","","","","","","","","","","","","","","","","Error potentially returned by <code>decode_grandpa_commit</code>.","","","","","","","","","","List of ed25519 signatures and public keys.","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded Grandpa commit.","Attempt to decode the given SCALE-encoded commit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit contains a vote for a block that isn’t a …","One of the public keys is invalid.","The authorities set id of the commit doesn’t match the …","One of the signatures can’t be verified.","Configuration for a commit verification process.","One authority has produced two signatures.","Error that can happen while verifying a commit.","Verification is finished. Contains an error if the commit …","Verification is finished, but <code>IsParent::resume</code> has been …","Commit verification in progress.","Failed to decode the commit message.","Must return whether a certain public key is in the list …","See <code>IsAuthority</code>.","Must return whether a certain block is a descendant of …","See <code>IsParent</code>.","One of the public keys isn’t in the list of authorities.","","","","","","","","","","","Public key to verify.","Hash of the block to check.","Height of the block to check.","","","","","","","","","","","SCALE-encoded commit to verify.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of authorities that are allowed to emit …","Resumes the verification process.","Resumes the verification process.","Hash of the block that must be the ancestor of the block …","Height of the block that must be the ancestor of the …","","","","","","","","","","","","","","","","","Verifies that a commit is valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Potential error when decoding a justification.","Decoded justification.","Decoded justification.","","","","","Iterator towards the headers of the vote ancestries.","","","","","","","","","","","","","","","","","Authority that signed the precommit. Must be part of the …","Authority that signed the precommit. Must be part of the …","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded justification.","Decodes a SCALE-encoded precommit.","Attempt to decode the given SCALE-encoded justification.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ed25519 signature made with …","Ed25519 signature made with …","","","","","Hash of the block concerned by the pre-commit.","Hash of the block concerned by the pre-commit.","","","Height of the block concerned by the pre-commit.","Height of the block concerned by the pre-commit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One of the public keys is invalid.","One of the signatures can’t be verified.","Configuration for a justification verification process.","One authority has produced two signatures.","Error that can happen while verifying a justification.","One of the public keys isn’t in the list of authorities.","Justification doesn’t contain enough authorities …","","","","","List of authorities that are allowed to emit pre-commits …","","","","","","","","","","","","","","","","","","","Justification to verify.","","","","","","","","Verifies that a justification is valid.","","","","List of authorities in an AURA context.","","","","","A consensus log item for AURA.","A consensus log item for AURA.","AURA slot number pre-digest.","","","Block signature made using the AURA consensus engine.","Block signature made using the AURA consensus engine.","List of authorities has changed.","List of authorities has changed.","","Types of allowed slots.","List of authorities in a BABE context.","","","","","A consensus log item for BABE.","A consensus log item for BABE.","Information about the next epoch config, if changed. This …","Information about the next epoch. This is broadcast in …","Information about the next epoch. This is broadcast in …","A BABE pre-runtime digest. This contains all data …","","","A BABE pre-runtime digest. This contains all data …","Raw BABE primary slot assignment pre-digest.","Raw BABE primary slot assignment pre-digest.","Block signature made using the BABE consensus engine.","Block signature made using the BABE consensus engine.","BABE secondary slot assignment pre-digest.","BABE secondary deterministic slot assignment with VRF …","BABE secondary deterministic slot assignment with VRF …","","","Bad length of an AURA seal.","","","","Bad length of a BABE seal.","Item related to the BEEFY algorithm (Mountain Merkle …","See <code>DigestItemRef::Beefy</code>.","Error while decoding the block number.","Substrate changes trie configuration.","","","Available changes trie signals.","","","Generic header digest.","","Error while decoding a digest item.","Error while decoding a digest log item length.","","Error while decoding the digest length.","Generic header digest.","Potential error when decoding a header.","Force an authority set change.","Force an authority set change.","List of authorities in a GrandPa context.","","","","","A consensus log item for GrandPa.","","A consensus log item for GrandPa.","A scheduled change of authority set.","A scheduled change of authority set.","Header of a block, after decoding.","Header of a block, after decoding.","Iterator towards the digest log items.","There are multiple Aura pre-runtime digests in the block …","There are multiple Babe configuration descriptor digests …","There are multiple Babe epoch descriptor digests in the …","There are multiple Babe pre-runtime digests in the block …","There are multiple runtime environment updated digests in …","New changes trie configuration is enacted, starting from <strong>…","The epoch has changed, and the epoch after the current …","The epoch has changed, and the epoch after the current …","The epoch has changed. This provides information about …","The epoch has changed. This provides information about …","Disable the authority with given index.","Disable the authority with given index.","Disable the authority with given index.","Disable the authority with given index.","Note that the authority with given index is disabled …","Note that the authority with given index is disabled …","A signal to pause the current authority set after the …","A signal to pause the current authority set after the …","Item related to parachains consensus. Contains …","See <code>DigestItemRef::PolkadotParachain</code>.","Proof-of-work consensus algorithm is intentionally not …","A primary VRF-based slot assignment.","A primary VRF-based slot assignment.","Allow primary and secondary plain slot claims.","Allow primary and secondary VRF slot claims.","Only allow primary slot claims.","A signal to resume the current authority set after the …","A signal to resume the current authority set after the …","Runtime of the chain has been updated in this block. This …","Runtime of the chain has been updated in this block. This …","Schedule an authority set change.","Schedule an authority set change.","Seal poped using <code>DigestRef::pop_seal</code>.","Found a seal that isn’t the last item in the list.","A secondary deterministic slot assignment.","A secondary deterministic slot assignment.","A secondary deterministic slot assignment with VRF …","A secondary deterministic slot assignment with VRF …","Header is too long.","Header is not long enough.","Found a Babe configuration change digest without an epoch …","Unknown consensus engine specified in a digest log.","Digest log item with an unrecognized type.","Value of <code>allowed_slots</code> in <code>BabeEpochConfiguration</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the Aura pre-runtime digest item, if any.","Returns the Aura seal digest item, if any.","Returns the Aura seal digest item, if any.","The authorities.","The authorities.","Authority index","Authority index","Authority index","Authority index","Authority index","Returns the Babe epoch information stored in the header, …","Returns the Babe epoch information stored in the header, …","Returns the Babe pre-runtime digest item, if any.","Returns the Babe pre-runtime digest item, if any.","Returns the Babe seal digest item, if any.","Returns the Babe seal digest item, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of <code>c</code> in <code>BabeEpochConfiguration</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded header.","Decodes a list of authorities from a SCALE-encoded blob …","","","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded header.","","","","","","The number of blocks to delay.","The number of blocks to delay.","List of auxiliary data appended to the block header.","List of auxiliary data appended to the block header.","Interval (in blocks) at which level1-digests are created. …","Maximal number of digest levels in hierarchy. 0 means …","Returns a digest with empty logs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The merkle root of the extrinsics.","The merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a <code>AuraConsensusLogRef</code> from a slice of bytes.","Builds an iterator corresponding to the given slice.","Decodes a <code>AuraPreDigest</code> from a slice of bytes.","Decodes a <code>BabeConsensusLogRef</code> from a slice of bytes.","Decodes a <code>BabePreDigestRef</code> from a slice of bytes.","Builds a new <code>BabeAuthoritiesIter</code> iterating over the given …","Decodes a <code>BabeNextConfig</code> from a slice of bytes.","Decodes a <code>BabeAllowedSlots</code> from a slice of bytes.","Decodes a <code>BabePreDigestRef</code> from a slice of bytes.","Decodes a <code>BabePrimaryPreDigestRef</code> from a slice of bytes.","Decodes a <code>BabeSecondaryPlainPreDigest</code> from a slice of …","Decodes a <code>BabeSecondaryVRFPreDigestRef</code> from a slice of …","Decodes a <code>GrandpaConsensusLogRef</code> from a slice of bytes.","Turns an already-decoded list of items into a <code>DigestRef</code>.","Returns true if the list has any item that belong to the …","Returns true if the list has any item that belong to the …","Returns <code>true</code> if there is a …","Returns <code>true</code> if there is a …","Builds the hash of the header.","Builds the hash of the header.","Returns a hash of a SCALE-encoded header.","Returns a hash of a SCALE-encoded header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the item is relevant to the Aura consensus engine.","True if the item is relevant to the Babe consensus engine.","Returns <code>true</code> for <code>BabePreDigestRef::Primary</code>.","Returns an iterator to the log items in this digest.","Returns an iterator to the log items in this digest.","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator corresponding to the given slice.","","","","","The new authorities after the change, along with their …","The new authorities after the change, along with their …","Block number stored in the header.","Block number stored in the header.","Hash of the parent block stored in the header.","Hash of the parent block stored in the header.","If the last element of the list is a seal, removes it …","Sr25519 public key.","Sr25519 public key.","Sr25519 public key.","Sr25519 public key.","Ed25519 public key.","Ed25519 public key.","Pushes an Aura seal at the end of the list. Returns an …","Pushes a Babe seal at the end of the list. Returns an …","The value of randomness to use for the slot-assignment.","The value of randomness to use for the slot-assignment.","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Equivalent to <code>HeaderRef::scale_encoding</code> but returns the …","Equivalent to <code>Header::scale_encoding</code> but returns the data …","","","","","Returns the slot number stored in the header.","Slot number when the block was produced.","Slot number","Slot number","Slot number","Slot number","Slot number","The state trie merkle root","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VRF output","VRF output","VRF output","VRF output","VRF proof","VRF proof","VRF proof","VRF proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Smoldot doesn’t interpret the content of the log item …","Smoldot doesn’t interpret the content of the log item …","Smoldot doesn’t interpret the content of the log item …","Smoldot doesn’t interpret the content of the log item …","","","","","","Implements <code>fmt::Display</code> and displays hashes in a nice way.","Values used to build the informant line. Implements the …","Extra fields if a relay chain exists.","","","","","","","Hash of the best block that we have locally.","Number of the best block that we have locally.","Number of the best block that we have locally.","","","","","","","Name of the chain.","Name of the chain.","If true, ANSI escape characters will be written out.","Hash of the latest finalized block we have locally.","Number of the latest finalized block we have locally.","","","","","","","","","","","","","","","","","","","","Maximum number of characters of the informant line.","Best block currently being propagated on the …","Number of network connections we are having with the rest …","Number of gossiping substreams open with nodes of the …","Extra fields related to the relay chain.","","","","","","","","","","","","","","","List of requests and how to answer them.","Parse JSON-RPC method calls and notifications, and build …","","WebSocket server.","","","","","Contains the public key of an account.","","","","","","","","","","","","","","","One of the parameters of the function call is invalid.","The parameter of a function call is invalid.","Format the parameters is plain invalid.","Could not parse the body of the message as a valid …","Could not parse the body of the message as a valid …","","JSON-RPC request is valid, but there is a problem related …","","See <code>ParseError::Method</code>.","","","Error produced by <code>parse_json_call</code>.","","","","","","","","","","Too many parameters have been passed to the function.","","Call concerns a method that isn’t recognized.","Call concerns a notification that isn’t recognizedreates a <code>Header</code> from a SCALE-encoded header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of RPC method names of all the methods in …","","","","","","","","Parses a JSON call (usually received from a JSON-RPC …","","","","","","","Returns a list of all JSON-RPC methods that are available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the base58 encoding of the network identity of …","","Returns, as an opaque string, the name of the client …","","","","","","","","","","","","Returns, as an opaque string, the version of the client …","","Turns the error into a JSON string representing the error …","Serializes the response into a JSON string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of parameters actually received.","Reason why it failed.","Number of parameters that are expected to be received.","0-based index of the parameter whose format is invalid.","Name of the JSON-RPC method that was attempted to be …","Name of the JSON-RPC method that was attempted to be …","Name of the JSON-RPC method that was attempted to be …","Problem that happens.","Identifier of the request sent by the user.","Method-specific error. Contains a more precise error code …","Parsed JSON-RPC call.","Error that can be reported to the JSON-RPC client.","Internal JSON-RPC error.","Invalid method parameter(s).","The JSON sent is not a valid Request object.","The method does not exist / is not available.","Error while parsing a call.","Invalid JSON was received by the server.","Other internal server error. Contains a more precise …","","","","","","","","","","","","","Builds a JSON response.","Builds a JSON event to a subscription.","Builds a JSON response.","","","","","","","","JSON-formatted identifier of the request. <code>None</code> for …","","","","","","","","","","","","","Name of the method that is being called.","JSON-formatted list of parameters.","Parses a JSON-encoded RPC method call or notification.","","","","","","","","","","","","","","Potential error when decoding payment information runtime …","Name of the runtime function to call in order to obtain …","","","","","Attempt to decode the output of the runtime call.","","","","","","","","Produces the input to pass to the …","","","","","","Configuration for a <code>WsServer</code>.","An error has happened on a connection. The connection is …","Identifier for a connection with regard to a <code>WsServer</code>.","A new TCP connection has arrived on the listening socket.","Event that has happened on a <code>WsServer</code>.","A text frame has been received on a connection.","WebSockets listening socket and list of open connections.","Accepts the pending connection.","","","","","","","","","IP address to try to bind to.","","","","","","","","","Pre-allocated capacity for the list of connections.","","","Destroys a connection.","","Returns the user data associated to a connection.","Returns the user data associated to a connection.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if there isn’t any active healthy …","Returns the number of active healthy connections.","Address of the local TCP listening socket, as provided by …","Maximum size, in bytes, of a frame sent by the remote.","","Try opening a TCP listening socket.","Returns the next event happening on the server.","","Queues a text frame to be sent on the given connection.","Reject the pending connection.","Number of pending messages to buffer up for sending …","","","","","","","","","","","","","","","","","","Address of the remote, as provided by the operating …","Identifier of the connection. This identifier might be …","Identifier of the connection that sent the frame.","Message sent by the remote. Its content is entirely …","User data associated with the connection.","User data associated with the connection.","Representation of a Multiaddr.","Augments an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code> …","Collection of libp2p connections.","Module containing everything related to the processing of …","","Network of peers.","","Holds an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code>, …","Advances the cursors of the buffers.","","","","","Returns a buffer containing data read from the socket, …","Indicate that the writing side of the connection must be …","Wait until the socket has been properly closed.","","","","","","","True if <code>WithBuffers::close</code> has been called earlier.","Initializes a new <code>WithBuffers</code> with the given socket.","Waits either for data to be received or for data to be …","","","","","The demanded <code>ConnectionId</code> isn’t or is no longer valid.","Configuration for a <code>Network</code>.","Error in the context of the connection.","Connection has been unexpectedly closed by the remote …","Error within the context of a connection. See …","Identifier of a connection spawned by the <code>Network</code>.","Future ready when a connection has data to give out via …","Protocol error after the connection has been established.","Event generated by <code>Network::next_event</code>.","Eror during the handshake phase.","Protocol error within the context of a connection. See …","Handshake of the given connection has completed.","Received an incoming substream, but this substream has …","Connection no longer exists.","Connection no longer exists.","Representation of a Multiaddr.","Data structure containing the list of all connections, …","No substream with the given target of the given protocol.","The connection is still in its handshake phase.","Configuration for a specific overlay network.","Received a notification on a notifications substream of a …","","","A previously open outbound substream has been closed by …","Outcome of trying to open a substream with …","See <code>Network::open_notifications_substream</code>.","Protocol error.","Queue of notifications with that peer is full.","Error potentially returned by <code>Network::queue_notification</code>.","Error potentially returned by <code>Network::request</code>.","Received a request from a request-response protocol.","A transport-level connection (e.g. a TCP socket) is …","The handshake took too long.","Accepts a request for an inbound notifications substream …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of connections containers should initially …","","","Start closing a previously-open notifications substream, …","","Returns the identifier of the connection concerned by …","","","Optional alternative names for this protocol. Can …","","","","","","","","","","","","","","","","","","","","","","","","","Amount of time after which a connection handshake is …","","Adds a new connection to the collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of connections in the collection.","Maximum size, in bytes, of the handshake that can be …","Maximum size, in bytes, of a notification that can be …","","","","Initializes a new network data structure.","Returns the next event produced by the service.","Returns the Noise key originalled passed as …","Key used for the encryption layer. This is a Noise static …","Returns the list the overlay networks originally passed …","","Start opening a notifications substream.","","Number of events that can be buffered internally before …","Name of the ping protocol on the network.","","Name of the protocol negotiated on the wire.","Adds a notification to the queue of notifications to send …","Seed for the randomness within the networking state …","Reads data coming from the connection, updates the …","Rejects a request for an inbound notifications substream …","Sends a request to the given peer, and waits for a …","Returns the list the request-response protocols …","","Responds to an incoming request. Must be called in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data of the connection concerned by this …","","","","","","","","","","","","Error that happened.","Identifier of the connection whose handshake is finished.","","","","","","","","","","","","","","","","","","Identity of the peer on the other side of the connection.","","","","If <code>Ok</code>, contains the handshake sent back by the remote. …","Substream on which the request has been received. Must be …","","","Substream on which the request has been received. Must be …","","","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Copy of the user data provided when creating the …","Failed to parse the URL.","","","","","","","Error types","Error while parsing an URL.","","","Some information in the URL would be lost. Never returned …","","","","","","Iterator over <code>Multiaddr</code> <code>Protocol</code>s.","Contains the “port” to contact. Similar to TCP or …","Representation of a Multiaddr.","","","Represents an Onion v3 address","","","","","","","<code>Protocol</code> describes all possible multiaddress protocols.","","","","","","","","","","The URL scheme was not recognized.","","","","Attempts to parse an URL into a multiaddress.","Attempts to parse an URL into a multiaddress. Ignores …","Easy way for a user to create a <code>Multiaddr</code>.","The input doesn’t have a correct length.","The Blake2b-256 hasher.","BLAKE2b-256 (32-byte hash size)","The Blake2b-512 hasher.","BLAKE2b-512 (64-byte hash size)","The Blake2s-128 hasher.","BLAKE2s-128 (16-byte hash size)","The Blake2s-256 hasher.","BLAKE2s-256 (32-byte hash size)","This type makes it easier to interact with hashers","The multihash code.","The code of Multihash.","Error that can happen when decoding some bytes.","Error that can happen when decoding some bytes.","Error that can happen when encoding some bytes into a …","The Identity hasher.","Identity (Raw binary)","The Keccak-224 hasher.","Keccak-224 (28-byte hash size)","The Keccak-256 hasher.","Keccak-256 (32-byte hash size)","The Keccak-384 hasher.","Keccak-384 (48-byte hash size)","The Keccak-512 hasher.","Keccak-512 (64-byte hash size)","This type is using the default Multihash code table","The <code>MultihashDigest</code> trait specifies an interface common …","Representation of a valid multihash. This enforces …","This type is using the default Multihash code table","Represents a valid multihash.","The <code>Multihasher</code> trait specifies an interface common for …","The SHA-1 hasher.","SHA-1 (20-byte hash size)","The SHA2-256 hasher.","SHA-256 (32-byte hash size)","The SHA2-512 hasher.","SHA-512 (64-byte hash size)","The SHA3-224 hasher.","SHA3-224 (28-byte hash size)","The SHA3-256 hasher.","SHA3-256 (32-byte hash size)","The SHA3-384 hasher.","SHA3-384 (48-byte hash size)","The SHA3-512 hasher.","SHA3-512 (64-byte hash size)","The code of the hashing algorithm is incorrect.","The input length is too large for the hash algorithm.","The requested hash algorithm isn’t supported by this …","The Mutlihash byte value.","The data whose decoding was attempted.","Hash some input and return the digest.","Hash some input and return the digest.","The error.","Digest data, updating the internal state.","Reset hasher instance to its initial state.","Retrieve the computed <code>MultihashGeneric</code>, consuming the …","Retrieve result and reset hasher instance.","Wraps a hash digest in Multihash with the given Mutlihash …","State machine handling a single TCP or WebSocket libp2p …","State machine handling the handshake with a TCP or …","Multistream-select is a protocol whose purpose is to …","Noise protocol libp2p layer.","Yamux multiplexing protocol.","Configuration to turn a <code>ConnectionPrototype</code> into a …","Configuration for a notifications protocol.","Configuration for a request-response protocol.","See <code>ConfigRequestResponse::inbound_config</code>.","Successfully negotiated connection. Ready to be turned …","Request must be completely empty, not even a length …","Error during a connection. The connection should be shut …","State machine of a fully-established connection.","Event that happened on the connection. See …","Received an incoming substream, but this substream has …","Error in the noise cipher. Data has most likely been …","Remote has sent a notification on an inbound …","Remote has closed an inbound notifications substream.Can …","Remote has opened an inbound notifications substream.","Remote has canceled an inbound notifications substream …","Remote has closed an outgoing notifications substream, …","Remote has reset an outgoing notifications substream. The …","Outcome of trying to open a substream with …","Request must contain a length prefix plus a potentially …","Received a request in the context of a request-response …","Received a response to a previously emitted request on a …","Identifier of a request or a notifications substream.","Error in the yamux multiplexing protocol.","Accepts an inbound notifications protocol. Must be called …","Sends a request to the remote.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes a notifications substream opened after a successful…","","","","","","","","","","","","","","","","","","","","","","","","","If true, incoming substreams are allowed to negotiate …","Configuration related to sending out requests through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns this prototype into an actual connection.","Maximum size, in bytes, of the handshake that can be …","Maximum size, in bytes, of a notification that can be …","","Returns the value that compares superior or equal to all …","Returns the value that compares inferior or equal to all …","Name of the protocol transferred on the wire.","Name of the protocol transferred on the wire.","","Returns the number of bytes waiting to be sent out on …","List of notifications protocols supported for incoming …","Returns the user dat associated to a notifications …","Opens a outgoing substream with the given protocol, …","","Name of the ping protocol on the network.","Entropy used for the randomness specific to this …","Reads data coming from the socket, updates the internal …","Rejects an inbound notifications protocol. Must be called …","List of request-response protocols supported for incoming …","Responds to an incoming request. Must be called in …","Individual substream within an established connection.","Timeout between the moment the substream is opened and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queues a notification to be written out on the given …","Maximum allowed size for the payload in bytes.","Handshake sent by the remote. Its interpretation is out …","Identifier of the request. Needs to be provided back when …","Identifier of the request. Value that was returned by …","Identifier of the substream. Needs to be provided back …","Identifier of the substream.","Identifier of the substream.","Identifier of the substream.","Identifier of the substream. Value that was returned by …","Identifier of the substream. Value that was returned by …","Identifier of the substream. Value that was returned by …","Notification sent by the remote.","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, …","Index of the request-response protocol the request was …","Index of the notifications protocol concerned by the …","Index of the notifications protocol concerned by the …","Index of the notifications protocol concerned by the …","Bytes of the request. Its interpretation is out of scope …","Bytes of the response. Its interpretation is out of scope …","If <code>Ok</code>, contains the handshake sent back by the remote. …","Value that was passed to <code>Established::add_request</code>.","Value that was passed to …","Event that happened on the connection. See …","Error while receiving the remote’s handshake.","Error that can happen while processing an inbound …","Error while receiving an inbound substream.","An inbound substream has successfully negotiated a …","Type of inbound protocol.","Error during protocol negotiation.","Error during protocol negotiation.","Error during the multistream-select handshake.","Remote has sent a notification on an inbound …","","Remote has closed an inbound notifications substream …","Reason why an inbound notifications substream has been …","Error while receiving an inbound notifications substream …","Remote has opened an inbound notifications substream.","Remote has canceled an inbound notifications substream …","Unexpected end of file while receiving an inbound …","Remote has closed an outgoing notifications substream, …","Error that can happen when trying to open an outbound …","Remote has reset an outgoing notifications substream. The …","Remote has accepted or refused a substream opened with …","","Error in the protocol.","Remote doesn’t support this protocol.","Remote has indicated that it doesn’t support the …","Remote has refused the handshake by closing the substream.","","Error that can happen during a request in a …","Received a request in the context of a request-response …","Unexpected end of file while receiving an inbound request.","Error while receiving an inbound request.","Error potentially returned by …","Received a response to a previously emitted request on a …","Error while receiving the response.","State machine containing the state of a single substream …","Remote has decided to close the substream. This most …","The substream has already been closed.","Remote has decided to RST the substream. This most likely …","Substream has been reset during the negotiation.","Substream has been reset.","Remote hasn’t answered in time.","Remote took too long to perform the handshake.","Accepts an inbound notifications protocol. Must be called …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes a notifications substream opened after a successful…","","","","","","","","","","","","","","","","","","","","","Initializes an new ingoing substream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of bytes waiting to be sent out on …","Initializes an outgoing notifications substream.","Returns the user data associated to a notifications …","Reads data coming from the socket, updates the internal …","Rejects an inbound notifications protocol. Must be called …","Initializes an outgoing request substream.","Returns the user data associated to a request substream.","","Responds to an incoming request. Must be called in …","Call after an <code>Event::InboundNegotiated</code> has been emitted …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queues a notification to be written out on the given …","Handshake sent by the remote. Its interpretation is out …","Notification sent by the remote.","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, …","Index of the request-response protocol the request was …","Index of the notifications protocol concerned by the …","Index of the notifications protocol concerned by the …","Index of the notifications protocol concerned by the …","Bytes of the request. Its interpretation is out of scope …","Bytes of the response. Its interpretation is out of scope …","If <code>Ok</code>, contains the handshake sent back by the remote. …","Value that was passed to <code>Substream::request_out</code>.","Value that was passed to <code>Substream::notifications_out</code>.","Error that happened.","Index of the protocol that was passed in the …","Index of the protocol that was passed in the …","","","","Maximum allowed size of the request. If <code>None</code>, then no …","Current state of a connection handshake.","Error during a connection handshake. The connection …","Connection handshake in progress.","Connection handshake in progress.","Protocol error during a multistream-select negotiation.","No encryption protocol in common with the remote.","No multiplexing protocol in common with the remote.","Error in the noise cipher. Data has most likely been …","Protocol error during the noise handshake.","Connection handshake has reached the noise handshake, and …","Connection handshake has reached the noise handshake, and …","Handshake has succeeded. Connection is now open.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes a new state machine.","Shortcut for <code>HealthyHandshake::new</code> wrapped in a <code>Handshake</code>.","Feeds data coming from a socket and writes back data to …","Turn this <code>NoiseKeyRequired</code> back into a <code>HealthyHandshake</code> …","","","","","","","","","","","","","","","","","","Prototype for the connection.","Network identity of the remote.","Unknown handshake or unknown multistream-select protocol …","Configuration of a multistream-select protocol.","Local node is the dialing side and requests the specific …","Error that can happen during the negotiation.","Error while decoding a frame length, or frame size limit …","","Negotiation in progress.","Negotiation is still in progress. Use the provided …","Received empty command.","Local node is the listening side.","","","Message on the multistream-select protocol.","Current state of a multistream-select negotiation.","Negotiation has ended, but there isn’t any protocol in …","","","","Reading side of the connection is closed. The handshake …","Negotiation has ended successfully. A protocol has been …","Received answer to protocol request that doesn’t match …","Writing side of the connection is closed. The handshake …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bytes representation of this message, as a …","","Initializes a new handshake state machine.","Shortcut method for <code>InProgress::new</code> and wrapping the …","Feeds data coming from a socket, updates the internal …","","","","","","","","","","","","","","","","","","","","","","","","","Write to the given <code>ReadWrite</code> as many bytes of the message …","Name of the protocol to try negotiate. The …","List of protocol names that are supported. In case of …","Error in the decryption state machine.","Error while decoding data.","Potential error during the noise handshake.","Handshake still in progress. More data needs to be sent …","Handshake still in progress. More data needs to be sent …","Key passed as part of the payload failed to decode into a …","State of the noise encryption/decryption cipher.","State of a Noise handshake.","The noise key is the key exchanged during the noise …","Name of the protocol, typically used when negotiated it …","Failed to decode the payload as the …","Error while decoding the handshake.","Reading side of the connection is closed. The handshake …","Signature of the noise public key by the libp2p key …","Noise handshake has successfully completed.","Received a payload as part of a handshake message when …","Prototype for a <code>NoiseKey</code>.","Writing side of the connection is closed. The handshake …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads data from <code>payload</code> and writes it to <code>destination</code>. …","Returns the size of unencrypted data that fits a buffer …","","","","","","","","","","","","","","","","","","Feeds data received from the wire.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the local side has opened the connection.","Returns the libp2p public key associated to the signature …","Generates a new private and public key pair signed with …","Initializes a new noise handshake state machine.","Shortcut function that calls <code>HandshakeInProgress::new</code> and …","Returns the data that has to be signed.","Returns the data that has to be signed.","Generates a new private and public key pair.","Feeds data coming from a socket and outputs data to write …","Turns this <code>UnsignedNoiseKey</code> into a <code>NoiseKey</code> after signing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Object to use to encrypt and decrypt all further …","<code>PeerId</code> of the remote.","Unrecognized value for the type of frame as indicated in …","Received a PING frame with invalid flags.","Configuration for a new <code>Yamux</code>.","Remote tried to send more data than it was allowed to.","Received data corresponding to a substream.","Remote has sent a data frame containing data at the same …","Error while decoding the yamux stream.","","Details about the incoming data.","","Remote has requested to open a new substream.","Number of credits allocated to the local node has …","Name of the protocol, typically used when negotiated it …","Remote has closed its writing side of the substream.","Remote has asked to reset a substream.","Identifier of a substream in the context of a connection.","Reference to a substream within the <code>Yamux</code>.","Received a SYN flag with a known substream ID.","Received flags whose meaning is unknown.","Unknown version number in a header.","Remote sent additional data on a substream after having …","","Substream ID was zero in a data of window update frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the list of buffers to write.","Number of bytes read from the incoming buffer. These …","Expected number of substreams simultaneously open, both …","","","Marks the substream as closed. It is no longer possible …","","Detail about the incoming data. <code>None</code> if nothing of …","","","Returns an object that provides an iterator to a list of …","","","","","","","","","","","","","","","","","","","Identifier of the substream.","Process some incoming data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data associated to this substream.","Returns <code>true</code> if <code>SubstreamMut::close</code> has been called on …","<code>true</code> if the local machine has initiated the connection. …","Returns <code>true</code> if the remote has closed their writing side …","Returns the value that compares superior or equal to all …","Returns the value that compares inferior or equal to all …","","Initializes a new yamux state machine.","Opens a new substream.","","Returns the number of bytes queued for writing on this …","Seed used for the randomness. Used to avoid HashDos …","","Allow the remote to send up to <code>bytes</code> bytes at once in the …","Abruptly shuts down the substream. Its identifier is now …","Returns a reference to a substream by its ID. Returns <code>None</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data associated to this substream.","Returns an iterator to the list of all substream user …","Returns an iterator to the list of all substream user …","","","","","","","","","Appends data to the buffer of data to send out on this …","Yamux object on which <code>Yamux::incoming_data</code> has been …","Offset in the buffer passed to <code>Yamux::incoming_data</code> where …","Substream the data belongs to. Guaranteed to be valid.","Substream that got closed.","Substream that has been destroyed. No longer valid.","If <code>None</code>, the local writing side is still open and needs …","User data that was associated to this substream.","Failed to parse the URL.","","","","","","","Error types","Error while parsing an URL.","","","Some information in the URL would be lost. Never returned …","","","","","","Iterator over <code>Multiaddr</code> <code>Protocol</code>s.","Contains the “port” to contact. Similar to TCP or …","Representation of a Multiaddr.","","","Represents an Onion v3 address","","","","","","","<code>Protocol</code> describes all possible multiaddress protocols.","","","","","","","","","","The URL scheme was not recognized.","","","","Turn this <code>Protocol</code> into one that owns its data, thus …","Consume this instance and create an owned version …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a single <code>Protocol</code> value from its byte slice …","Parse a protocol value from the given iterator of string …","Attempts to parse an URL into a multiaddress.","Attempts to parse an URL into a multiaddress. Ignores …","Return the hash of the public key as bytes","","","","","","","","","","","","","","","","","","","","","","Easy way for a user to create a <code>Multiaddr</code>.","","","Return the port","","","","","","","","","","","","","","","","","","","","","","","","","","Encode this protocol by writing its binary representation …","The input doesn’t have a correct length.","The Blake2b-256 hasher.","BLAKE2b-256 (32-byte hash size)","The Blake2b-512 hasher.","BLAKE2b-512 (64-byte hash size)","The Blake2s-128 hasher.","BLAKE2s-128 (16-byte hash size)","The Blake2s-256 hasher.","BLAKE2s-256 (32-byte hash size)","This type makes it easier to interact with hashers","The multihash code.","The code of the Identity hasher, 0x00.","The code of the SHA-1 hasher, 0x11.","The code of the SHA2-256 hasher, 0x12.","The code of the SHA2-512 hasher, 0x13.","The code of the SHA3-224 hasher, 0x17.","The code of the SHA3-256 hasher, 0x16.","The code of the SHA3-384 hasher, 0x15.","The code of the SHA3-512 hasher, 0x14.","The code of the Keccak-224 hasher, 0x1a.","The code of the Keccak-256 hasher, 0x1b.","The code of the Keccak-384 hasher, 0x1c.","The code of the Keccak-512 hasher, 0x1d.","The code of the Blake2-256 hasher, 0xb220.","The code of the Blake2-512 hasher, 0xb240.","The code of the Blake2-128 hasher, 0xb250.","The code of the Blake2-256 hasher, 0xb260.","The code of Multihash.","Error that can happen when decoding some bytes.","Error that can happen when decoding some bytes.","Error that can happen when encoding some bytes into a …","The Identity hasher.","Identity (Raw binary)","The Keccak-224 hasher.","Keccak-224 (28-byte hash size)","The Keccak-256 hasher.","Keccak-256 (32-byte hash size)","The Keccak-384 hasher.","Keccak-384 (48-byte hash size)","The Keccak-512 hasher.","Keccak-512 (64-byte hash size)","This type is using the default Multihash code table","The <code>MultihashDigest</code> trait specifies an interface common …","Representation of a valid multihash. This enforces …","This type is using the default Multihash code table","Represents a valid multihash.","The <code>Multihasher</code> trait specifies an interface common for …","The SHA-1 hasher.","SHA-1 (20-byte hash size)","The SHA2-256 hasher.","SHA-256 (32-byte hash size)","The SHA2-512 hasher.","SHA-512 (64-byte hash size)","The SHA3-224 hasher.","SHA3-224 (28-byte hash size)","The SHA3-256 hasher.","SHA3-256 (32-byte hash size)","The SHA3-384 hasher.","SHA3-384 (48-byte hash size)","The SHA3-512 hasher.","SHA3-512 (64-byte hash size)","The code of the hashing algorithm is incorrect.","The input length is too large for the hash algorithm.","The requested hash algorithm isn’t supported by this …","Returns the algorithm used in this multihash.","Returns the algorithm used in this multihash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bytes representation of this multihash.","Returns the bytes representation of this multihash.","","Builds a <code>MultihashRef</code> corresponding to this <code>Multihash</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Mutlihash byte value.","","","","","","","","","","","","","","","","","The data whose decoding was attempted.","","","","","","","","","","","","","","","","","","","Hash some input and return the digest.","Hash some input and return the digest.","Returns the hashed data.","Returns the hash digest.","Hash some input and return the raw binary digest.","","Hash some input and return the raw binary digest.","","","","Hash some input and return the Multihash digest.","","","Hash some input and return the Multihash digest.","","Hash some input and return the Multihash digest.","","","","Hash some input and return the Multihash digest.","","","Hash some input and return the Multihash digest.","Hash some input and return the Multihash digest.","","","","","Hash some input and return the Multihash digest.","Hash some input and return the Multihash digest.","","","","Hash some input and return the Multihash digest.","","","","Hash some input and return the Multihash digest.","Hash some input and return the Multihash digest.","","","","Hash some input and return the Multihash digest.","","","Hash some input and return the Multihash digest.","","Hash some input and return the Multihash digest.","","","","","Hash some input and return the Multihash digest.","","","","","","","","","","","","","","","","","The error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Multihash</code> from a <code>Vec<u8></code>, consuming it. If …","Creates a new <code>MultihashRef</code> from a <code>&[u8]</code>. If the input …","","","","","","","Digest data, updating the internal state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bytes representation of the multihash.","","","","","","Reset hasher instance to its initial state.","","","","","","","","","","","","","","","","","Retrieve the computed <code>MultihashGeneric</code>, consuming the …","","","","","","","","","","","","","","","","","Retrieve result and reset hasher instance.","","","","","","","","","","","","","","","","","","Builds a <code>Multihash</code> that owns the data.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bytes representation of the multihash.","","","","","","","Return the <code>Code</code> based on the integer value. Error if no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a hash digest in Multihash with the given Mutlihash …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Algorithm used into the multihash isn’t correct.","Ed25519 key doesn’t have a correct length.","Error decoding the base58 encoding.","Error when decoding base58 encoding.","Failed to decode bytes into a multihash.","An ed25519 public key.","Error when turning bytes into a <code>PeerId</code>.","Error when turning a mulithash into a <code>PeerId</code>.","Error potentially returned by …","Multihash isn’t a valid <code>PeerId</code>.","Multihash uses the identity algorithm, but the data isn’…","Decoded bytes aren’t a valid <code>PeerId</code>.","Error when parsing a string to a <code>PeerId</code>.","Identifier of a node of the network.","Error decoding the protobuf message.","Public key of a node’s identity.","Public key algorithm unknown.","Algorithms other than ed25519 aren’t supported.","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether <code>data</code> is a valid <code>PeerId</code>.","Turns a <code>Multihash</code> into a <code>PeerId</code>. If the multihash doesn’…","Decode a public key from a protobuf structure, e.g. read …","Builds the <code>PeerId</code> corresponding to a public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","Convert the <code>PublicKey</code> into the corresponding <code>PeerId</code>.","Checks whether the public key passed as parameter matches …","","","Returns a base-58 encoded string of this <code>PeerId</code>.","","","Encode the public key into a protobuf structure for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies whether the given signature is valid for the …","","","","","","","","Configuration for a <code>Peers</code>.","Established a new connection to the given peer.","Error in the context of the connection.","Connection has been unexpectedly closed by the remote …","Substream is now desired. If the state was already “…","A peer would like to open a notifications substream with …","A previously-emitted <code>DesiredInNotificationId</code> is now …","See <code>Event::DesiredInNotification</code>.","Local node would like to open a notifications substream …","See <code>Event::DesiredOutNotification</code>.","Substream is now desired. If the peer has refused this …","See <code>Peers::set_peer_notifications_out_desired</code>.","A connection has stopped.","Event happening over the network. See <code>Peers::next_event</code>.","Error potentially returned by …","Received an incoming substream, but this substream has …","No substream with the given target of the given protocol.","Not connected to target.","Not connected to target.","Substream is no longer desired. Close any existing …","Received a notification on a notifications substream of a …","Remote has closed a previously-open inbound notifications …","A previously open outbound substream has been closed by …","A handshaking outbound substream has been accepted by the …","The request is now obsolete, either because the …","","Queue of notifications with that peer is full.","Error potentially returned by <code>Peers::queue_notification</code>.","Error potentially returned by <code>Peers::request</code>.","See <code>Event::RequestIn</code>.","Received a request from a request-response protocol.","A previously-emitted <code>Event::RequestIn</code> is now obsolete. …","Inserts an incoming connection in the state machine.","Inserts an outgoing connection in the state machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to calling <code>Peers::queue_notification</code> for all …","","","","","","","","","","","","","","Capacity to initially reserve to the list of connections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of time after which a connection handshake is …","","","","Responds to an <code>Event::DesiredInNotification</code> by accepting …","Responds to an <code>Event::DesiredInNotification</code> by refusing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Peers</code>.","Returns the next event produced by the service.","Returns the Noise key originalled passed as …","Key used for the encryption layer. This is a Noise static …","Returns the list the overlay networks originally passed as…","","Returns the number of connections we have a substream …","Responds to an <code>Event::DesiredOutNotification</code> by …","","","","Capacity to initially reserve to the list of peers.","Returns an iterator to the list of <code>PeerId</code>s that we have …","Number of events that can be buffered internally before …","Name of the ping protocol on the network.","","Seed for the randomness within the networking state …","Reads data coming from the connection, updates the …","Returns the combinations of notification and <code>PeerId</code> that …","Sends a request to the given peer, and waits for a …","Returns the list the request-response protocols …","","Responds to a previously-emitted <code>Event::RequestIn</code>.","Sets the “desired” flag of the given <code>PeerId</code>.","Sets the given combinations of notification protocol and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the list of <code>PeerId</code>s that have been marked as …","","","","","","","","","","","Identifier of the connection on which the problem …","Identifier of the connection that has sent the request.","Copy of the user data associated to this connection.","Error that happened.","Handshake of the request sent by the peer. Opaque to this …","Identifier for this request.","Identifier for this request. Must be passed back when …","Identifier for this request.","Identifier for this request. Must be passed back when …","Payload of the notification. Opaque to this state machine.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Number of other established connections with the same …","Number of other established connections with the same …","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, …","Identity of the peer on the other side of the connection.","Identity of the peer on the other side of the connection.","Peer which opened the substream.","Peer which sent the request.","Peer which tries to open an inbound substream.","Peer which tries to open an outbound substream.","Peer the substream is open with.","Peer the subtream is no longer open with.","Peer that sent the notification.","Peer the substream is no longer with.","<code>true</code> if the peer is marked as desired. If this is <code>true</code> …","Request-response protocol the request is about.","Identifier for this request. Must be passed back when …","Payload of the request, opaque to this state machine.","If <code>Ok</code>, contains the handshake sent back by the remote. …","User data that was associated to this connection.","See <code>ReadWrite::incoming_bytes_iter</code>.","","Discards the first <code>num</code> bytes of <code>ReadWrite::incoming_buffer</code>…","Discards the first <code>num</code> bytes of <code>ReadWrite::outgoing_buffer</code>…","","","","","","","","","Sets the writing side of the connection to closed.","Shortcut to <code>ReadWrite::advance_read</code>, passing as parameter …","","","Pointer to a buffer of socket data ready to be processed.","Returns the size of the data available in the incoming …","Returns an iterator that pops bytes from …","","","","","","","","Returns true if the connection should be considered dead. …","","","Pointer to two consecutive buffers of uninitialized data. …","Returns the size of the available outgoing buffer.","Extracts a certain number of bytes from …","Total number of bytes that have been read from …","","","","","","","","","","Sets <code>ReadWrite::wake_up_after</code> to <code>min(wake_up_after, after)</code>…","If <code>Some</code>, the socket must be waken up after the given <code>TNow</code> …","If <code>Some</code>, the socket must be waken up after the given …","Sets <code>ReadWrite::wake_up_future</code> to …","Same as <code>ReadWrite::wake_up_when</code>, but accepts a boxed …","Copies as much as possible from the content of <code>data</code> to …","Copies the content of <code>data</code> to <code>ReadWrite::outgoing_buffer</code> …","Total number of bytes that have been written to …","Length prefix doesn’t match actual length of the …","Error when retrieving the metadata.","Fetching the metadata is over.","Virtual machine tried to call a host function that isn’…","Current state of the operation.","Potential error when calling <code>remove_metadata_length_prefix</code>…","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Error when initializing the virtual machine.","Error when starting the virtual machine.","Error while running the Wasm virtual machine.","","","","","","","","","","","","","","","","","","Decodes the given SCALE-encoded metadata.","Events retrieval and decoding.","","","","","","","","","Injects the corresponding storage value.","","","","","","","","","","","","","","","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be passed to …","Returns the key whose value must be passed to …","Retrieves the SCALE-encoded metadata from the given …","Removes the length prefix at the beginning of <code>metadata</code>. …","","","","","","","","","","","","","","","","","","","","","","Error that can happen during the decoding.","","","All the metadata about a module error.","All the metadata about an event.","","All the metadata about a function argument.","All the metadata about a function.","","","","All the metadata about one module constant.","All metadata about an runtime module.","","","All the metadata about one storage entry.","A storage entry modifier.","A storage entry type.","Hasher used by storage maps","All metadata of the storagehe common prefix used by all storage entries.","The signed extensions in the order they appear in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extrinsic version.","","","","","","","","","","","","","","","","","","","","","","","","Error potentially returned by <code>events_storage_key</code>.","No storage entry called <code>Events</code> has been found.","No module called <code>System</code> has been found.","The <code>Events</code> storage key doesn’t have the type expected …","","","","","Returns the key in the storage at which events can be …","","","","","","","","","","","","","Representation of a Multiaddr.","","","","","","","","","","","","Create a new, empty multiaddress.","","","","","Convert a Multiaddr to a string","","","","","","","","","","","","","","","Returns the components of this multiaddress.","","Return the length in bytes of this multiaddress.","","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","Substrate/Polkadot-specific protocols on top of libp2p.","Adds an already-parsed address component to the end of …","Replace a <code>Protocol</code> at some position in this <code>Multiaddr</code>.","","","","","Return a copy of this <code>Multiaddr</code>’s byte representation.","","","","","","","","Like <code>Multiaddr::push</code> but consumes <code>self</code>.","Create a new, empty multiaddress with the given capacity.","Error while parsing a <code>multiaddr::Multiaddr</code> in the …","Error while parsing a <code>peer_id::PeerId</code> in the response.","Response isn’t a response to a find node request.","Error potentially returned by <code>decode_find_node_response</code>.","Data structure containing the k-buckets and the state of …","Error while decoding the protobuf encoding.","Error while decoding the protobuf encoding.","","","","","","","","","","","","","Builds a wire message to send on the Kademlia …","Decodes a response to a request built using …","","","","","","","","","","","","","","","","","","","","","Initializes a new empty data structure with empty …","","","","","","","","","","","","","","","Blocks should be returned in ascending number, starting …","","Response isn’t a response to a call proof request.","Response isn’t a response to a storage proof request.","Decoded block announcement notification.","Error potentially returned by …","Decoded handshake sent or received when opening a block …","Block sent in a block response.","Description of a block request that can be sent to a peer.","Which block the remote must return first.","Whether the first block should be the one with the …","Which fields should be present in the response.","","Description of a call proof request that can be sent to a …","","","","","","Error potentially returned by …","Error potentially returned by <code>decode_block_response</code>.","Error potentially returned by <code>decode_call_proof_response</code>.","Error potentially returned by <code>decode_grandpa_notification</code>.","Error potentially returned by …","Error potentially returned by …","Blocks should be returned in descending number, starting …","","","Response to a GrandPa warp sync request.","Response to a GrandPa warp sync request.","Hash of the block.","Description of a response to an identify request.","Hash length isn’t of the correct length.","","","","","Number of the block, where 0 would be the genesis block.","","","","","","Failed to decode response as a call proof.","Failed to decode response as a storage proof.","Error while decoding the protobuf encoding.","Error while decoding the protobuf encoding.","Error while decoding the protobuf encoding.","Error while decoding the protobuf encoding.","Role a node reports playing on the network.","Description of a storage proof request that can be sent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Authority that signed the pre-vote. Must be part of the …","","","Hash of the best block according to this node.","Height of the best block according to this node.","Hash of the block to request the storage of.","Hash of the block to request the storage of.","","Block body, if requested.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the bytes corresponding to a block request.","Builds the bytes corresponding to a call proof request.","Builds the bytes corresponding to a block request.","Builds the bytes corresponding to a storage proof request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a block announcement.","Decodes a SCALE-encoded block announces handshake.","Decodes a response to a block request.","Decodes a response to a call proof request.","Attempt to decode the given SCALE-encoded Grandpa …","Decodes a SCALE-encoded GrandPa warp sync response.","Decodes a response to a storage proof request.","Number of blocks to request. The remote is free to return …","Whether the first block should be the one with the …","Ed25519 public key of the local node.","Turns a block announcement into its SCALE-encoding ready …","Turns a block announces handshake into its SCALE-encoding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which fields should be present in the response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of fragments that consist in the proof.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the genesis block according to this node.","","","Block hash.","Header of the announced block.","","SCALE-encoded block header, if requested.","Header of a block in the chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the block is the new best block of the announcer.","If <code>true</code>, the last fragment corresponds to the highest …","","Justification, if requested and available.","Justification that proofs the finality of …","List of storage keys to query.","List of addresses the local node is listening on. This …","","Name of the runtime function to call.","","","","","","","","","","","","","","","","","","Address of the sender of the identify request, as seen …","Iterator to buffers of bytes to be concatenated then …","","","","Names of the protocols supported by the local node.","Role a node reports playing on the network.","","","","","Returns the SCALE encoding of this enum. Always …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","","","","","","Ed25519 signature made with …","First block that the remote must return.","","","Hash of the block concerned by the pre-vote.","","","Height of the block concerned by the pre-vote.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error while decoding a received block announce.","Error while decoding the handshake of the block announces …","Error while decoding a received Grandpa notification.","Received a new block announce from a peer.","Error returned by <code>ChainNetwork::blocks_request</code>.","Error returned by <code>ChainNetwork::call_proof_request</code>.","Configuration for a specific overlay network.","An attempt has been made to open the given chain, but a …","","","Data structure containing the list of all connections, …","Configuration for a <code>ChainNetwork</code>.","Established a transport-level connection (e.g. a TCP …","","","","","","A transport-level connection (e.g. a TCP socket) has been …","Error during <code>ChainNetwork::kademlia_discovery_round</code>.","Successfull outcome to …","Undecoded but valid block announce.","Undecoded but valid block announce handshake.","Undecoded but valid GrandPa commit message.","Event generated by <code>ChainNetwork::next_event</code>.","","Mismatch between the genesis hash of the remote and the …","Received a GrandPa commit message from the network.","","Error returned by <code>ChainNetwork::grandpa_warp_sync_request</code>.","See <code>Event::IdentifyRequestIn</code>.","A remote has sent a request for identification …","Error in an incoming substream.","Error during <code>ChainNetwork::kademlia_find_node</code>.","","Error that can happen when trying to open an outbound …","Identifier of a pending connection requested by the …","See <code>Event::ProtocolError</code>.","Error in the protocol in a connection, such as failure to …","","","","","","User must start connecting to the given multiaddress.","Error returned by <code>ChainNetwork::storage_proof_request</code>.","Error in the underlying protocol.","Adds an incoming connection to the state machine.","Must be passed the double-SCALE-encoded transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the encoded bytes of the commit message.","Hash of the best block according to the local node.","Height of the best block according to the local node.","Sends a blocks request to the given peer.","List of node identities that are known to belong to this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends a call proof request to the given peer.","List of blockchain peer-to-peer networks to be connected …","","","","","","","","","","","","","","Height of the highest block considered final by the node.","Capacity to initially reserve to the list of connections.","Returns the decoded version of the handshake.","Returns the decoded version of the announcement.","Returns the decoded version of the commit message.","","","<code>PeerId</code> that is expected to be reached with this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the genesis block (i.e. block number 0) according …","","If <code>Some</code>, the chain uses the GrandPa networking protocol.","","Amount of time after which a connection handshake is …","","Identifier of this connection request. Must be passed …","","Insert the results in the <code>ChainNetwork</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this is caused by networking issues, as …","Performs a round of Kademlia discovery.","Sends a Kademlia “find node” request to a single …","","Address to attempt to connect to.","","Initializes a new <code>ChainNetwork</code>.","Returns the next event produced by the service.","Allocates a <code>PendingId</code> and returns a <code>StartConnect</code> …","Key used for the encryption layer. This is a Noise static …","Returns the number of chains. Always equal to the length …","Returns the number of established TCP connections, both …","Returns the number of peers we have a substream with.","","","Returns the list of <code>peer_id::PeerId</code>s that will be …","Capacity to initially reserve to the list of peers.","Returns an iterator to the list of <code>PeerId</code>s that we have …","Number of events that can be buffered internally before …","After calling <code>ChainNetwork::next_start_connect</code>, notifies …","After calling <code>ChainNetwork::next_start_connect</code>, notifies …","Identifier of the protocol, used on the wire to determine …","Seed for the randomness within the networking state …","Reads data coming from the connection, updates the …","Queue the response to send back. The future provided by …","","","Set of authorities that will be used by the node to try …","Modifies the best block of the local node. See …","Update the state of the local node with regards to …","Sends a storage request to the given peer.","When the attempt should be considered as a failure. You …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the best block according to this node.","Height of the best block according to this node.","","","","Index of the chain the block relates to.","Index of the chain the commit message relates to.","","Problem that happened.","Error that happened.","","","","","","Identity of the sender of the block announce.","Peer that has caused the protocol error.","Remote that has sent the request.","Object allowing sending back the answer.","Role the node reports playing on the network.","Hash of the genesis block of the chain according to the …","Hash of the genesis block of the chain according to the …","All syncing strategies (optimistic, warp sync, all forks) …","<em>All-forks</em> header and body syncing.","Data structure. Inputs blocks, tries to fetch their …","Grandpa warp syncing.","Optimistic header and body syncing.","Parachains and parathreads syncing.","All blocks in the ancestry search response were already …","","No block ready to be processed.","Announced block has already been successfully verified …","Outcome of calling <code>AllSync::block_announce</code>.","","State of the processing of blocks.","Error that can happen when verifying a block body.","Requesting blocks from the source is requested.","Configuration for the <code>AllSync</code>.","See <code>Config::full</code>.","Block uses a different consensus than the rest of the …","Header cannot be verified now and has been silently …","Header cannot be verified now, and has been stored for …","Header verification failed.","Block verification failed.","Block has been successfully verified and finalized.","Loading a storage value of the finalized block is …","Fetching the key of the finalized block storage that …","Fetching the list of keys of the finalized block with a …","Sending a Grandpa warp sync request is requested.","Error while verifying a header and body.","","Error while verifying a header.","","Header is ready to be verified. Calling …","Error that can happen when verifying a block header.","Outcome of calling <code>HeaderVerify::perform</code>.","Failed to decode announce header.","Error while decoding a header.","Error while verifying a justification.","Announced block is known to not be a descendant of the …","Source has given blocks that aren’t part of the …","Request was no longer interesting for the state machine.","Outcome of calling <code>AllSync::process_one</code>.","Content of the response has been queued and will be …","See <code>AllSync::desired_requests</code>.","Identifier for a request in the <code>AllSync</code>.","Outcome of injecting a response in the <code>AllSync</code>.","Identifier for a source in the <code>AllSync</code>.","Loading a storage value is required in order to continue.","Sending a storage query is requested.","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Header has been successfully verified.","Block has been successfully verified.","Announced block is too old to be part of the finalized …","The block verification has failed. The block is invalid …","Ready to start verifying a header and a body.","Ready to start verifying a header.","Ready to start verifying a warp sync fragment.","Response has made it possible to finish warp syncing.","","Inserts a new request in the data structure.","Adds a new source to the sync state machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Injects a block announcement made by a source into the …","Pre-allocated capacity for the number of blocks between …","Inject a response to a previously-emitted blocks request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about the latest finalized block and its …","","","","","","","","","Returns the details of a request to start towards a …","Number of blocks to download ahead of the best verified …","","","","","","","Returns the header of the finalized block.","Compiled runtime code of the finalized block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>Some</code>, the block bodies and storage are also …","","","Update the state machine with a Grandpa commit message …","Inject a response to a previously-emitted GrandPa warp …","Returns the hash of the block to be verified.","Returns the hash of the block to be verified.","","","Returns the height of the block to be verified.","Returns the height of the block to be verified.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if it is believed that we are near the head …","Returns the key whose value must be passed to …","","Returns the key whose value must be passed to …","Returns the list of sources for which …","Maximum number of blocks of unknown ancestry to keep in …","Maximum number of simultaneous pending requests made …","","","","Initializes a new state machine.","Returns the header of all known non-finalized blocks in …","Caps the number of blocks to request to <code>max</code>.","Returns a list of requests that are considered obsolete …","","","Perform the verification.","Perform the verification.","Returns the prefix whose keys to load.","Process the next block in the queue of verification.","Returns the identifier and user data of the source that …","Removes a source from the state machine. Returns the user …","","","","Returns the current best block of the given source.","Returns true if the source has earlier announced the …","Returns the number of ongoing requests that concern this …","Returns the user data (<code>TSrc</code>) corresponding to the given …","Returns the user data (<code>TSrc</code>) corresponding to the given …","Returns the list of sources in this state machine.","Pre-allocated capacity for the number of block sources.","Start the verification process.","Inject a response to a previously-emitted storage proof …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Caps the number of blocks to request to <code>max</code>.","Height of the announced block.","Height of the currently finalized block.","Error that happened.","List of blocks that have been finalized. Includes the …","True if the newly-verified block is considered the new …","State machine yielded back. Use to continue the …","State machine yielded back. Use to continue the …","State machine yielded back. Use to continue the …","User data that was passed to <code>HeaderVerify::perform</code> and is …","Error that happened.","True if the newly-verified block is considered the new …","True if the newly-verified block is considered the latest …","State machine yielded back. Use to continue the …","State machine yielded back. Use to continue the …","User data that was passed to <code>HeaderVerify::perform</code> and is …","<code>True</code> if the <code>first_block_hash</code> is the response should …","Hash of the block whose storage is requested.","Hash of the first block to request. <code>None</code> if not known.","Height of the first block to request.","Keys whose values is requested.","Number of blocks the request should return.","<code>True</code> if bodies should be included in the response.","<code>True</code> if headers should be included in the response.","<code>True</code> if the justification should be included in the …","Merkle value of the root of the storage trie of the block.","Hash of the known finalized block. Starting point of the …","List of block headers that were pending verification and …","All blocks in the ancestry search response were already …","","No processing is necessary.","Announced block has already been successfully verified …","Outcome of calling <code>AllForksSync::finish_ancestry_search</code>.","Outcome of calling <code>AllForksSync::block_announce</code>.","State of the processing of blocks.","Configuration for the <code>AllForksSync</code>.","Block uses a different consensus than the rest of the …","Header cannot be verified now, and has been stored for …","Header verification failed.","Header verification to be performed.","Header is ready to be verified.","A header is ready for verification.","Error that can happen when verifying a block header.","Outcome of calling <code>HeaderVerify::perform</code>.","Couldn’t verify any of the blocks of the ancestry …","Failed to decode announce header.","Information about the verification of a justification …","A justification was available for the newly-verified …","Justification verification successful. The block and all …","No information about finality","Announced block is known to not be a descendant of the …","Source has given blocks that aren’t part of the …","State of the processing of blocks.","Identifier for a request in the <code>PendingBlocks</code>.","Information about a blocks request to be performed on a …","Struct to pass back when a block request has succeeded.","Header has been successfully verified.","Announced block is too old to be part of the finalized …","The block verification has failed. The block is invalid …","Ready to start verifying one or more headers returned in …","Inserts a new request in the data structure.","Inform the <code>AllForksSync</code> of a new potential source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Update the source with a newly-announced block.","Pre-allocated capacity for the number of blocks between …","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not actually proceed with the verification.","Information about the latest finalized block and its …","","","","","","","Returns the details of a request to start towards a …","","","","","Returns the header of the finalized block.","Call in response to a response being finished.","Hash of the first block to request.","Height of the first block to request.","","","","","","","","","","","","","","","","","","","","","If true, the block bodies and storage are also …","","","Update the state machine with a Grandpa commit message …","Returns the hash of the block to be verified.","","","Returns the height of the block to be verified.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> for <code>JustificationVerification::NewFinalized</code>.","Returns the list of sources for which …","Maximum number of blocks of unknown ancestry to keep in …","Maximum number of simultaneous pending requests made …","","","Initializes a new <code>AllForksSync</code>.","Returns the header of all known non-finalized blocks in …","Number of blocks the request should return.","Returns a list of requests that are considered obsolete …","","","Perform the verification.","Process the next block in the queue of verification.","Removes the source from the <code>AllForksSync</code>.","SCALE-encoded header returned by the remote.","SCALE-encoded justification returned by the remote.","Returns the current best block of the given source.","Returns true if the source has earlier announced the …","Returns the number of ongoing requests that concern this …","Returns the user data associated to the source. This is …","Returns the user data associated to the source. This is …","Collection of sources used for the <code>all_forks</code> syncing.","Returns the list of sources in this state machine.","Pre-allocated capacity for the number of block sources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of block headers that were pending verification and …","Height of the announced block.","Height of the currently finalized block.","Error that happened.","True if the newly-verified block is considered the new …","If a justification was attached to this block, it has …","State machine yielded back. Use to continue the …","State machine yielded back. Use to continue the …","User data that was passed to <code>HeaderVerify::perform</code> and is …","The state machine. The <code>AllForksSync::process_one</code> method …","Collection of sources and which blocks they know about.","Identifier for a source in the <code>AllForksSources</code>.","Registers a new block that the source is aware of.","Add a new source to the container.","","","","","Returns the current best block of the given source.","","","","","","","","Returns <code>true</code> if the <code>SourceId</code> is present in the collection.","","","Returns the finalized block height this state machine …","","","","","","","","","","","","","","","Returns true if the data structure is empty.","Returns the list of all <code>SourceId</code>s.","Returns the list of sources for which …","Returns the number of sources in the data structure.","","Creates a new container. Must be passed the height of the …","Returns the number of unique blocks in the data structure.","","Removes the source from the <code>AllForksSources</code>.","Removes a block from the list of blocks the sources are …","Sets the best block of this source.","Updates the height of the finalized block.","Returns true if <code>AllForksSources::add_known_block</code> or …","Removes a block from the list of blocks the source is …","","","","","","","","Returns the user data associated to the source. This is …","Returns the user data associated to the source. This is …","","","A new block has been added to the list of unfinalized …","Error while compiling the runtime.","The <code>:code</code> key of the storage is empty.","Error when determining the runtime specification.","Identifier for a download in the <code>DownloadTree</code>.","Information about a download that must be performed.","","A non-finalized block has been finalized.","Data structure now has an output. This output can only …","Error while parsing the <code>:heappages</code> storage value.","","","","No update.","","","See <code>DownloadTree::try_advance_output</code>.","See <code>OutputUpdate</code>.","See <code>OutputUpdateBlock</code>.","","Error when analyzing the runtime.","Identifier for a runtime in the <code>DownloadTree</code>.","","","","","","","","","","","","","","","","","","","Returns the hash of the current “output” best block.","Returns the SCALE-encoded header of the current “output…","Returns the runtime of the current “output” best …","Returns the runtime of the current “output” best …","Returns the runtime of the current “output” best …","Hash of the block whose runtime to download.","Returns the SCALE-encoded header of the block with the …","Returns the runtime of the block with the given hash. …","Returns the runtime of the block with the given hash. …","State trie root of the block whose runtime to download.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes from the data structure the runtimes that aren’…","","","","","","","","","","","Returns the hash of the current “output” finalized …","Returns the SCALE-encoded header of the current “output…","Returns the runtime of the current “output” finalized …","Returns the runtime of the current “output” finalized …","Returns the runtime of the current “output” finalized …","","","","","","","","","","","","","","","","","","","Returns a new <code>DownloadTree</code> containing one “input” …","Returns a new <code>DownloadTree</code> containing one “input” …","","","Returns <code>true</code> if the state machine is in a ready state, …","","","Identifier to later provide when calling …","Updates the state machine to take into account that the …","Updates the state machine with a new block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if this block is considered as the best block of the …","","","","","Examines the state of <code>self</code> and, if a block’s runtime …","Returns the list of all SCALE-encoded headers of …","Blake2 hash of the header of the parent of this block.","","","Injects into the state of the state machine a failed …","Injects into the state of the data structure a completed …","Injects into the state of the data structure a completed …","Returns the user data associated to the runtime with the …","Returns the user data associated to the runtime with the …","Iterates over all the runtimes stored in this data …","SCALE-encoded header of the block. Guaranteed to be valid.","","","","","","","","Tries to update the output blocks to follow the input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blake2 hash of the header of the best block after the …","Blake2 hash of the header of the block that has been …","Header of the block. Guaranteed to be valid. Also …","","The configuration for <code>grandpa_warp_sync</code>.","Problem encountered during a call to <code>grandpa_warp_sync</code>.","Warp syncing is over.","The GrandPa warp sync state machine.","Warp syncing is in progress,","","Parameters produced by the runtime are incoherent.","","","","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Identifier for a source in the <code>GrandpaWarpSync</code>.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","The result of a successful warp sync.","Verifying the warp sync response is required to continue.","Verifying the warp sync response is required to continue.","Fetching the parameters for the virtual machine is …","Fetching the parameters for the virtual machine is …","Adding more sources of GrandPa warp sync data to is …","Adding more sources of GrandPa warp sync data to is …","Requesting GrandPa warp sync data from a source is …","Requesting GrandPa warp sync data from a source is …","Add a source to the list of sources.","Add a source to the list of sources.","Add a source to the list of sources.","Add a source to the list of sources.","Add a source to the list of sources.","Add a source to the list of sources.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the chain information that is considered verified.","","","","","","","","","","","","","","","","","","","","","","","","","The synced chain information.","","","","The source to make a GrandPa warp sync request to.","","","","","","","","","","","","","","","","","","","","","","","","","","","Starts syncing via GrandPa warp sync.","Submit a GrandPa warp sync response if the request …","","Injects a failure to retrieve the storage value.","Injects a failure to retrieve the parameters.","Injects the key.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","","Verifies the next warp sync fragment in queue.","","Returns the identifier and user data of the source that …","Remove a source from the list of sources.","Remove a source from the list of sources.","Remove a source from the list of sources.","Remove a source from the list of sources.","The runtime constructed in <code>VirtualMachineParamsGet</code>.","Set the code and heappages from storage using the keys …","Returns the user data (<code>TSrc</code>) corresponding to the given …","Returns the user data (<code>TSrc</code>) corresponding to the given …","Returns a list of all known sources stored in the state …","The list of sources that were added to the state machine.","The initial capacity of the list of sources.","The hash of the header to warp sync from.","The chain information of the starting point of the warp …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the header that we’re warp syncing up to.","Returns the header that we’re warp syncing up to.","Returns the header that we’re warp syncing up to.","Returns the source that we received the warp sync data …","Returns the source that we received the warp sync data …","Returns the source that we received the warp sync data …","","State of the processing of blocks.","Requested blocks aren’t available from this source.","Configuration for the <code>OptimisticSync</code>.","See <code>Config::full</code>.","Output of <code>OptimisticSync::disassemble</code>.","See <code>Disassemble::sources</code>.","Processing of the block is over. The block has been …","Loading a storage value of the finalized block is …","Fetching the key of the finalized block storage that …","Fetching the list of keys of the finalized block with a …","","Error while verifying a header and body.","Error while verifying a header.","No processing is necessary.","Error while decoding a header.","Error while verifying a justification.","Processing of the block is over.","Received block isn’t a child of the current best block.","","Optimistic headers-only syncing.","State of the processing of blocks.","","Request that should be emitted towards a certain source.","Reason why a request has failed.","Identifier for an ongoing request in the <code>OptimisticSync</code>.","","Iterator that drains requests after a source has been …","An issue happened when verifying the block or its …","Problem that happened and caused the reset.","Identifier for a source in the <code>OptimisticSync</code>.","","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Start the processing of a block verification.","","Inform the <code>OptimisticSync</code> of a new potential source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Best block that the source has reported having.","Height of the block to request.","Pre-allocated capacity for the number of blocks between …","List of SCALE-encoded extrinsics that form the block’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about the latest finalized block and its …","Information about the latest finalized block and its …","","","","","","","Returns an iterator that yields all requests that could …","Disassembles the state machine into its raw components.","Number of blocks to download ahead of the best block.","","","","","","Returns the header of the finalized block.","Compiled runtime code of the finalized block.","Update the <code>OptimisticSync</code> with the outcome of a request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>Some</code>, the block bodies and storage are also …","","","Returns the hash of the block about to be verified.","","","Header of the block.","Returns the height of the block about to be verified.","Identifier that the source had.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Updates the <code>OptimisticSync</code> with the fact that a request …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>Config::full</code> was <code>Some</code> at initialization.","SCALE-encoded justification of this block, if any.","Returns the key whose value must be passed to …","","Returns the key whose value must be passed to …","","","Builds a new <code>OptimisticSync</code>.","","Returns the header of all known non-finalized blocks in …","Number of blocks to request. This might be equal to …","Returns an iterator that yields all the requests whose …","List of changes to the offchain storage that this block …","","","Returns the prefix whose keys to load.","Process the next block in the queue of verification.","Updates the best known block of the source.","Inform the <code>OptimisticSync</code> that a source of blocks is no …","List of the requests that were active.","","","","","Returns the current best block of the given source.","Source where to request blocks from.","Returns the number of ongoing requests that concern this …","","","Returns the list of sources in this state machine.","List of sources that were within the state machine.","Pre-allocated capacity for the number of block sources.","Start the verification of the block.","Changes to the storage made by this block compared to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","User data associated to the block.","","Opaque value passed to <code>OptimisticSync::add_source</code>.","","","","","","","","","","","","","","","","","","","","","Blocks that have been finalized. Includes the block that …","","","Height of the best block before the reset.","Problem that happened and caused the reset.","The state machine. The <code>OptimisticSync::process_one</code> method …","The state machine. The <code>OptimisticSync::process_one</code> method …","The state machine. The <code>OptimisticSync::process_one</code> method …","The state machine. The <code>OptimisticSync::process_one</code> method …","Error that can happen during the decoding.","The core was not occupied to begin with.","The candidate occupying the core was made available and …","An assumption being made about the state of an occupied …","Name of the runtime function to call in order to obtain …","Decoded persisted validation data.","The candidate occupying the core timed out and freed the …","","","","","","","","","","","","","","","Attempt to decode the return value of the …","","","","","","","","","","","","","","","","","","","","","","","","Maximum legal size of a POV block, in bytes.","Opaque data representing the best block (or similar …","Produces the input to pass to the …","","","Returns the SCALE encoding of this type.","","","","","","","","","","","","","","","Transactions pool specialized for light clients usage.","General-purpose transactions pool.","Runtime call to obtain the transactions validity status.","Configuration for <code>LightPool::new</code>.","Data structure containing transactions. See the …","See <code>LightPool::prune_finalized_with_body</code>.","See <code>LightPool::set_best_block</code>.","Identifier of a transaction stored within the <code>LightPool</code>.","Adds a block to the collection of blocks.","Inserts a new unvalidated transaction in the pool.","","","","","","","","","","","Hash of the finalized block.","Returns the user data associated with a given block.","Returns the user data associated with a given block.","Number of blocks to initially allocate memory for.","","","","","","","","","","","","","","","","Returns the bytes associated with a given transaction.","","","Hash of the finalized block at initialization.","Tries to find the transactions in the pool whose bytes …","","","","","","","","","","Returns <code>true</code> if the block with the given hash is present …","","List of transactions that were included in this block. …","List of transactions that weren’t included in a block …","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the given transaction has been included …","Returns <code>true</code> if the given transaction has been validated …","Returns the list of blocks whose bodies aren’t present …","","Initializes a new transactions pool.","Returns the number of transactions in the pool.","Returns the number of blocks between the oldest block …","","Removes from the pool as many blocks as possible from the …","Removes from the pool the transaction with the given …","List of transactions that were included in a block of the …","Sets the passed block as the new best block of the chain.","Sets the list of single-SCALE-encoded transactions that …","Sets the finalized block of the chain.","Sets the outcome of validating the transaction with the …","","","Returns the user data associated with a given transaction.","Returns the user data associated with a given transaction.","Number of transactions to initially allocate memory for.","Returns the list of all transactions within the pool.","Returns the list of all transactions within the pool.","","","","","","","","","","","","","","","","Returns a list of transactions whose state is “not …","User data associated to this block.","","","","","","Wraps around <code>Pool</code> while a new best block is being …","See <code>AppendBlock::block_transaction</code>.","Configuration for <code>Pool::new</code>.","Transaction to add is present in the list of non-included …","Data structure containing transactions. See the …","Identifier of a transaction stored within the <code>Pool</code>.","Transaction to add isn’t in the list of non-included …","See <code>AppendBlockTransaction::Unknown</code>.","Inserts a new unvalidated transaction in the pool.","Adds a block to the chain tracked by the transactions …","","","","","","","","","","","","","Returns the best block height according to the pool.","Adds a single-SCALE-encoded transaction to the block …","","","","","","","","","","","","","Number of transactions to initially allocate memory for.","","","","Returns the bytes associated with a given transaction.","","","Height of the finalized block at initialization.","Tries to find a transaction in the pool whose bytes are …","Finishes the block insertion process.","","","","","","","","","","","","","","Returns the block height at which the given transaction …","Returns the transactions from the pool that haven’t …","Inserts the transaction in the pool.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the pool is empty.","Returns the list of all transactions within the pool.","Returns the list of all transactions within the pool.","Returns the number of transactions in the pool.","","Initializes a new transactions pool.","","Removes from the pool the transaction with the given …","Removes from the pool all the transactions that are …","Pop a certain number of blocks from the list of blocks.","Sets the outcome of validating the transaction with the …","","","","","","","","","","","","","","","","","","","","Returns a list of transactions whose state is “not …","Returns the user data associated with a given transaction.","Returns the user data associated with a given transaction.","","","","","","","Identifier of the non-included transaction with the same …","User data stored alongside with that transaction.","The transaction birth block is ancient.","An extrinsic with a Mandatory dispatch resulted in Error. …","General error to do with the transaction’s proofs (e.g. …","The call of the transaction is not expected.","Could not lookup some information that is required to …","Configuration for a transaction validation process.","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Error that can happen during the decoding.","The list of provided tags (<code>ValidTransaction::provides</code>). …","Problem encountered during a call to <code>validate_transaction</code>.","The transaction would exhaust the resources of current …","Transaction has been received externally.","Validating the transaction is over.","General error to do with the transaction not yet being …","Transaction is already included in a block.","The transaction is invalid.","Error while decoding the block header against which to …","An invalid transaction validity.","Transaction is coming from a local source.","A transaction with a mandatory dispatch. This is invalid; …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","No validator found for the given unsigned transaction.","Error while decoding the output of the runtime.","General error to do with the inability to pay some fees …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","Current state of the operation.","Failed to determine the runtime version of the runtime.","General error to do with the transaction being outdated …","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Source of the transaction.","Errors that can occur while checking the validity of a …","Transaction validity can’t be determined.","Transaction validation API version unrecognized.","An unknown transaction validity.","Name of the runtime function to call in order to validate …","Information concerning a valid transaction.","Error while starting the Wasm virtual machine.","Error while running the Wasm virtual machine.","Error while running the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the return value of the  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Transaction longevity.","","","","","Returns the prefix whose keys to load.","Priority of the transaction.","A flag indicating whether the transaction should be …","Tags provided by the transaction.","Transaction dependencies.","Runtime used to get the validate the transaction. Must be …","Header of the block to verify the transaction against, in …","Double-SCALE-encoded transaction.","Source of the transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validates a transaction by calling …","Produces the input to pass to the …","Produces the input to pass to the …","","","","","","","","","","","","","Outcome of the verification.","Virtual machine initially passed through the …","Turns an iterator of bytes into an iterator of nibbles …","A single nibble with four bits.","Error when building a <code>Nibble</code> from a <code>u8</code>.","The integer value is too large.","Radix-16 Merkle-Patricia trie.","Returns an iterator of all possible nibble values.","","","","","","","","","","","","","","","","","Turns an iterator of bytes into an iterator of nibbles …","Freestanding function that calculates the root of a …","Removes all the elements from the trie.","","","","","","","Returns the Merkle value of the root of an empty trie.","","","","","","","","","","","","","Inserts a new entry in the trie.","","","","","","","","","","","","","","","","","","Returns true if the <code>Trie</code> is empty.","","Builds a new empty <code>Trie</code>.","","Turns an iterator of nibbles into an iterator of bytes.","Calculation of the Merkle value of a node given the …","","Scanning, through trie proofs, the list of all keys that …","","Verification of a trie proof.","Removes an entry from the trie.","Calculates the Merkle value of the root node.","","","","","Manages the structure of a trie. Allows inserting and …","","","","","","","","","","","","","","","","","","Request to return the list of all the keys in the …","Request to return the list of all the keys in the trie. …","Cache containing intermediate calculation steps.","The calculation is finished.","Current state of the <code>RootMerkleValueCalculation</code> and how …","Request the value of the node with a specific key. Call …","Request the value of the node with a specific key. Call …","","","","","","","","","","","","","","","","","","Builds a new empty cache.","","","","","","Indicates the list of all keys of the trie and advances …","Indicates the storage value and advances the calculation.","","","","","","","","","","","","","","","","","Returns the key whose value is being requested.","Notify the cache that all the storage values whose key …","Start calculating the Merkle value of the root node.","Notify the cache that a storage value at the given key …","","","","","","","","","","","","","","","","","Cache of the calculation that can be passed next time.","Root hash that has been calculated.","Information about a node whose Merkle value is to be …","Type of node whose node value is to be calculated.","Node is not the root node of the trie.","Output of the calculation.","Node is the root node of the trie.","","","","","","","","","","","","","","","","Calculates the Merkle value of a node given the …","Iterator to the Merkle values of the 16 possible children …","","","","","","","","","","Builds an <code>Output</code> from a slice of bytes.","","","","","","","","","","","","","Value of the node in the storage.","","","","","","","","Type of node.","","","","","","","Key of the node, as an iterator of nibbles. This is the …","Partial key of the node, as an iterator of nibbles.","Configuration to pass to <code>prefix_scan</code>.","Scan must continue with the next storage proof query.","Scan of a prefix in progress.","Outcome of calling <code>PrefixScan::resume</code>.","Scan has succeeded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prefix that all the keys must share.","Start a new scanning process.","Returns the list of keys whose storage proof must be …","Injects the proof presumably containing the keys returned …","Merkle value (or node value) of the root node of the trie.","","","","","","","","","","","","","List of keys with the requested prefix.","Error while decoding length of child.","End of data within the children bitmap.","Node value ends within a child value.","Decoded node value. Returned by <code>decode</code>.","Node value is empty.","Possible error returned by <code>decode</code>.","If partial key is of uneven length, then it must be …","Iterator to the nibbles of the partial key. See …","Length of partial key is too large to be reasonable.","Node value ends while parsing partial key length.","Node value ends within partial key.","Error while decoding length of storage value.","Node value ends within the storage value.","Node value is longer than expected.","","","","","","","","","","","","","All 16 possible children. <code>Some</code> if a child is present, and …","Returns a bits map of the children that are present, as …","","","","","Decodes a node value found in a proof into its components.","","","","","","","","","","","","","","","","","","","","","","Iterator to the nibbles of the partial key of the node.","","Storage value of this node, or <code>None</code> if there is no …","","","","","","","","","","","","","","","","See <code>TrieNodeInfo::children</code>.","Possible error returned by <code>verify_proof</code>","One of the node values in the proof has an invalid format.","Missing an entry in the proof.","Node has zero or more children.","Node doesn’t have any child.","Node has one child. The key of that child starts with the …","Information about a node of the trie.","Configuration to pass to <code>trie_node_info</code>.","Trie root wasn’t found in the proof.","Configuration to pass to <code>verify_proof</code>.","","","","","","","","","","","","","","","","","","","","","Which children the node has.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over all the children of the node. For each …","List of node values of nodes found in the trie. No …","List of node values of nodes found in the trie. No …","Key whose storage value needs to be found.","Key whose storage value needs to be found.","Storage value of the node, if any.","","","","Find information about the node whose key is requested by …","Merkle value (or node value) of the root node of the trie.","Merkle value (or node value) of the root node of the trie.","","","","","","","","","","","","","","","","Find the storage value of the requested key (as …","","","","","","If <code>(children_bitmap & (1 << n)) == 1</code> (where <code>n is in 0..16</code>…","Number of nibbles in the key of the closest ancestor that …","","Removing the storage value removed two nodes from the …","Access to a node within the <code>TrieStructure</code> that is known …","Access to a entry for a potential node within the …","Access to a node within the <code>TrieStructure</code>.","Index of a node in the trie. Never invalidated, except …","There exists a node with this key.","One node will be inserted in the trie.","Preparation for a new node insertion.","One node will be inserted in the trie.","Two nodes will be inserted in the trie.","Outcome of the removal of a storage value.","Removing the storage value removed the node that …","Removing the storage value removed the node that …","","Access to a node within the <code>TrieStructure</code> that is known …","Removing the storage value didn’t change the structure …","The trie was empty apart from this node. It is now …","Stores the structure of a trie, including branch nodes …","Two nodes will be inserted in the trie.","Access to a non-existing node within the <code>TrieStructure</code>.","This entry is vacant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key of the branch node that will be inserted.","Returns the number of nodes (storage or branch nodes) the …","Returns the child of this node at the given index.","Returns the child of this node at the given index.","Returns the child of this node at the given index.","Returns the user data of the child at the given index.","Returns the user data of the child at the given index.","Returns the user data of the child at the given index.","","","","","","Returns the node with the given key, or <code>None</code> if no such …","","","","","","","","","","","","","","Returns the full key of the node.","Returns the full key of the node.","Returns the full key of the node.","","Returns true if the node has a storage value associated …","","Insert the new node. <code>branch_node_user_data</code> is discarded …","Insert the new node.","Insert the new node.","Adds a storage value to this node, turning it into a …","Prepare the operation of creating the node in question.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child of this node given the given index.","Returns the child of this node given the given index.","Returns the child of this node given the given index.","Returns the first child of this node.","Returns the first child of this node.","Returns the first child of this node.","Returns the next sibling of this node.","Returns the next sibling of this node.","Returns the next sibling of this node.","Returns <code>Some</code> if <code>self</code> is an <code>Entry::Occupied</code>.","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns <code>Some</code> if <code>self</code> is an <code>NodeAccess::Storage</code>.","Returns <code>Some</code> if <code>self</code> is an <code>Entry::Vacant</code>.","Returns <code>true</code> if the trie doesn’t contain any node.","Returns true if this node is the root node of the trie.","Returns true if this node is the root node of the trie.","Returns true if this node is the root node of the trie.","Returns the number of nodes, both branch and storage …","","Builds a new empty trie.","Returns an <code>Entry</code> corresponding to the node whose key is …","Returns the <code>NodeAccess</code> of the node at the given index, or …","Returns the key of the node at the given index, or <code>None</code> …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the partial key of the node.","Returns the partial key of the node.","Returns the partial key of the node.","Removes the storage value and returns what this changes …","Removes all nodes whose key starts with the given prefix.","Returns the root node of the trie, or <code>None</code> if the trie is …","Reduces the capacity of the trie as much as possible.","Returns true if the structure of this trie is the same as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data stored in the node.","Returns the user data associated to this node.","Returns the user data associated to this node.","","","","","","","","","","","","Builds a new empty trie with a capacity for the given …","User data that was in the removed branch node (former …","Unique child that the removed node had. The parent and …","Parent that the removed node had.","Sibling of the removed node. The parent and partial key …","User data that was in the removed storage node.","User data that was in the removed node.","User data that was in the removed node.","User data that was in the removed node.","AURA consensus.","BABE consensus.","","","Failed to parse ed25519 public key.","Block header signature is invalid.","List of authorities is empty.","No pre-runtime digest in the block header.","The seal (containing the signature of the authority) is …","Parent block doesn’t contain any Aura information.","Slot number must be strictly increasing between a parent …","Slot number starts too far in the future.","Configuration for <code>verify_header</code>.","Failure to verify a block.","Information yielded back after successfully verifying a …","","","","","","","If true, the block has a change of authorities that must …","","","","","","","Aura authorities that must validate the block.","","","","","","","Header of the block to verify.","","","","","","","","","","","","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Header of the parent of the block to verify.","Duration of a slot in milliseconds. Can be found by …","","","","","","","","","","","Verifies whether a block header provides a correct proof …","","","","Block is a secondary slot claim and its author is not the …","Block header signature is invalid.","VRF proof in the block header is invalid.","Type of slot claim forbidden by current configuration.","Authority index stored within block is out of range.","Block is the first block after a new epoch, but it is …","No pre-runtime digest in the block header.","The seal (containing the signature of the authority) is …","VRF output is over threshold required to claim the …","Parent block doesn’t contain any Babe information.","Slot number must be strictly increasing between a parent …","Block contains an epoch change digest log, but no epoch …","Configuration for <code>verify_header</code>.","Failure to verify a block.","Information yielded back after successfully verifying a …","","","","","","","","","","","","","If <code>Some</code>, the verified block contains an epoch transition …","","","","","","","Header of the block to verify.","","","","","","","","","","","","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Epoch the parent block belongs to. Must be <code>None</code> if and …","Header of the parent of the block to verify.","Epoch that follows the epoch the parent block belongs to.","Slot number the block belongs to.","Number of slots per epoch in the Babe configuration.","","","","","","","","","","","Verifies whether a block header provides a correct proof …","","","","Any node on the chain is allowed to produce blocks.","<code>ConfigConsensus::AllAuthorized</code> was passed to <code>Config</code>.","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Failed to verify the authenticity of the block with the …","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Failed to verify the authenticity of the block with the …","Block being verified has erased the <code>:code</code> key from the …","Configuration for a block verification.","Extra items of <code>Config</code> that are dependant on the consensus …","Error that can happen during the verification.","Verification is over.","Block has modified the <code>:heappages</code> key without modifying …","Block has modified the <code>:heappages</code> key in a way that fails …","Block header contains items relevant to multiple …","Error while compiling new runtime.","A new runtime must be compiled.","A new runtime must be compiled.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","Block successfully verified.","Extra items in <code>Success</code> relevant to the consensus engine.","Error while verifying the unsealed block.","Current state of the verification.","","","","","","","","","","","","","","","","","","","","","Body of the block to verify.","Header of the block to verify.","","","","","","","","","","","","","","","","","","","","","Performs the runtime compilation.","Configuration items related to the consensus engine.","Extra items in <code>Success</code> relevant to the consensus engine.","","","","","","","","","","","","","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the key whose value must be passed to …","Concatenation of all the log messages printed by the …","Contains <code>Some</code> if and only if …","List of changes to the offchain storage that this block …","Header of the parent of the block to verify.","Runtime used to check the new block. Must be built using …","Runtime that was passed by <code>Config</code>.","Returns the prefix whose keys to load.","List of changes to the storage top trie that the block …","","Optional cache corresponding to the storage trie root …","Cache used for calculating the top trie root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies whether a block is valid.","","","","","","","","","","","Aura authorities that must validate the block.","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Epoch the parent block belongs to. Must be <code>None</code> if and …","Epoch that follows the epoch the parent block belongs to.","Duration of a slot in milliseconds. Can be found by …","Number of slots per epoch in the Babe configuration.","True if the list of authorities is modified by this block.","If <code>Some</code>, the verified block contains an epoch transition …","Slot number the block belongs to.","Any node on the chain is allowed to produce blocks.","<code>ConfigConsensus::AllAuthorized</code> was passed to <code>Config</code>.","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Failed to verify the authenticity of the block with the …","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Failed to verify the authenticity of the block with the …","Hash of the parent block doesn’t match the hash in the …","Configuration for a block verification.","Extra items of <code>Config</code> that are dependant on the consensus …","Error that can happen during the verification.","Block header contains items relevant to multiple …","Number of the block to verify isn’t equal to the parent …","Block successfully verified.","","","","","","","","","Header of the block to verify.","","","","","","","","","Configuration items related to the consensus engine.","","","","","","","","","","","","","","","","","","","","","","","Header of the parent of the block to verify.","","","","","","","","","","","","","","Verifies whether a block is valid.","","","","","Aura authorities that must validate the block.","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Epoch the parent block belongs to. Must be <code>None</code> if and …","Epoch that follows the epoch the parent block belongs to.","Duration of a slot in milliseconds. Can be found by …","Number of slots per epoch in the Babe configuration.","True if the list of authorities is modified by this block.","If <code>Some</code>, the verified block contains an epoch transition …","Slot number the block belongs to."],"i":[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,2,3,2,3,3,3,2,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,3,0,2,2,3,3,3,3,2,3,2,3,2,3,2,3,4,0,5,5,6,4,0,0,0,0,0,0,0,5,7,0,5,0,5,4,7,0,5,0,5,0,4,8,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,15,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,9,8,16,7,7,9,6,4,5,10,11,8,12,13,14,15,16,7,7,14,13,15,12,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,10,16,9,6,4,5,10,11,8,12,13,14,15,16,7,12,14,12,4,11,11,11,11,13,15,10,16,7,11,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,9,6,4,5,10,11,8,12,13,14,15,16,7,16,17,17,18,18,18,18,19,0,20,20,21,22,21,22,23,23,19,24,19,0,23,19,25,24,0,0,19,25,0,0,19,20,19,0,0,23,23,0,20,23,26,0,19,24,0,20,25,19,0,20,19,0,20,0,0,26,0,23,23,27,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,34,29,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,0,26,19,25,24,26,19,25,24,34,28,26,19,25,24,26,19,25,24,27,23,23,34,22,26,26,19,19,25,25,24,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,30,33,32,30,31,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,21,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,31,33,31,29,26,19,25,24,29,28,28,28,29,32,29,29,34,26,19,25,24,23,26,19,25,24,28,29,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,28,21,29,20,30,27,31,32,33,23,34,22,26,19,25,24,35,35,36,36,37,38,37,38,39,40,0,0,0,0,0,0,0,41,41,0,42,0,0,42,43,44,42,45,41,46,43,44,42,45,41,46,43,43,46,43,43,43,45,43,45,43,43,44,42,45,41,46,43,44,42,45,41,46,44,41,46,44,41,46,44,44,41,46,44,41,46,44,42,45,41,46,43,44,42,45,41,46,44,44,45,46,43,43,43,43,43,44,42,45,41,46,43,44,42,45,41,46,43,44,42,45,41,46,43,44,42,45,41,46,46,44,41,46,43,43,43,44,44,41,46,43,43,44,42,45,41,46,43,44,42,45,41,46,43,44,42,45,41,46,46,43,44,42,45,41,46,47,48,48,48,48,48,49,50,51,52,0,0,0,0,0,0,0,0,53,53,51,50,54,52,52,55,0,49,56,0,55,0,0,0,54,56,50,51,49,0,0,56,56,50,0,55,0,0,0,55,0,55,0,55,52,57,52,49,56,51,58,59,60,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,67,67,67,60,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,65,69,61,67,69,69,67,61,66,67,67,67,60,58,66,59,67,49,49,56,56,52,52,57,57,50,53,53,54,51,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,66,59,64,63,62,66,59,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,66,61,68,60,67,67,62,64,62,67,67,61,61,61,61,61,67,58,62,63,64,58,62,63,64,58,68,63,67,58,67,67,61,61,69,49,56,52,57,53,51,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,61,68,67,67,67,67,60,61,58,55,62,63,64,65,66,59,67,68,49,56,52,57,50,53,54,51,69,70,70,71,71,72,72,72,72,71,72,72,73,73,74,74,74,74,75,76,76,76,77,78,77,78,79,77,78,79,0,0,0,0,0,0,0,0,80,0,81,82,79,80,79,80,80,81,82,80,80,80,0,0,0,83,84,85,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,85,86,0,83,84,0,0,85,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,83,84,85,86,87,77,83,81,88,78,84,82,85,86,87,77,83,81,88,78,84,82,87,88,83,84,87,88,87,88,85,86,87,77,83,81,79,79,88,78,84,82,80,80,85,85,86,86,87,87,87,77,83,83,81,79,88,88,78,84,84,82,82,80,85,87,85,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,83,84,83,84,85,86,87,77,83,81,88,78,84,82,79,80,85,85,86,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,85,86,87,77,83,81,79,88,78,84,82,80,88,85,86,87,77,83,81,79,88,78,84,82,80,89,90,90,89,90,91,92,92,91,92,93,93,93,94,94,94,0,95,95,0,0,96,95,96,95,96,96,95,97,96,95,97,96,95,97,97,96,95,97,96,95,97,97,97,96,96,95,95,97,96,95,97,97,97,96,95,97,96,95,97,97,96,95,96,95,97,97,96,95,97,96,95,97,96,95,97,96,95,97,96,95,0,0,0,98,99,99,98,99,98,98,99,100,98,99,100,98,99,100,98,99,100,98,99,100,100,100,100,100,98,98,99,99,100,98,99,100,100,100,98,99,100,98,99,100,100,98,99,98,99,100,100,98,99,100,98,99,100,98,99,100,98,99,100,98,99,0,0,101,102,0,103,101,0,103,0,0,103,0,103,102,102,101,104,103,105,106,107,102,101,104,103,105,106,107,102,0,101,104,103,105,106,107,102,101,104,103,105,106,107,102,104,102,102,101,104,103,105,106,107,102,106,105,101,104,103,105,106,107,102,101,104,103,105,106,107,102,101,102,101,104,103,105,106,107,102,105,106,105,107,104,102,101,104,103,105,106,107,102,101,104,103,105,106,107,102,101,104,103,105,106,107,102,101,104,103,105,106,107,102,108,108,0,0,0,0,109,110,111,112,109,110,111,112,109,109,110,111,112,109,110,111,112,109,112,112,112,109,109,110,112,112,109,109,112,109,110,111,112,109,109,111,109,109,110,111,112,109,110,111,112,109,110,111,112,109,110,111,112,110,109,109,111,109,109,109,112,109,110,109,109,112,109,109,109,109,109,110,112,109,110,111,112,109,110,111,112,109,110,111,112,111,109,110,111,112,109,0,0,0,113,114,115,113,114,115,113,114,113,114,115,113,114,115,114,114,114,115,115,113,114,115,114,114,114,114,114,113,114,115,113,114,115,113,114,115,113,114,115,114,114,114,114,114,114,114,115,113,114,115,113,114,115,113,114,115,113,114,115,0,0,0,116,116,116,116,0,0,0,116,116,116,116,116,116,116,116,116,116,116,116,117,118,119,0,117,120,120,0,0,120,121,0,0,0,122,117,123,0,117,0,120,0,120,120,120,120,120,122,120,120,117,119,123,118,0,0,118,123,124,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,125,125,125,125,123,124,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,125,125,125,125,125,125,125,126,122,121,121,117,117,118,118,119,119,120,120,127,127,123,124,125,126,122,121,121,117,117,117,118,118,119,119,119,120,127,124,125,123,124,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,0,125,125,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,126,123,124,125,126,122,121,117,118,119,120,127,123,124,125,126,122,121,117,118,119,120,127,0,0,0,0,0,0,128,128,0,128,128,129,129,130,129,128,131,130,132,133,129,128,131,130,132,133,131,131,131,130,129,128,131,130,132,133,129,128,131,130,132,133,129,128,131,130,132,133,129,128,131,130,132,133,0,131,131,131,131,130,132,133,131,130,132,133,129,129,128,128,131,130,132,133,129,128,131,130,132,133,133,133,0,130,130,129,128,131,130,132,133,129,128,131,130,132,133,129,128,131,130,132,133,129,128,131,130,132,133,132,133,131,130,133,132,0,0,130,130,0,129,128,131,130,132,133,129,128,130,129,128,131,130,132,133,129,128,131,130,132,133,129,128,131,130,132,133,133,0,129,128,131,130,132,133,134,135,0,136,137,0,136,0,136,0,136,0,136,0,136,0,136,0,136,0,136,0,136,0,136,0,136,135,135,134,0,0,138,0,136,0,135,0,135,135,135,135,135,0,136,135,135,0,0,136,138,135,135,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,138,134,137,135,139,138,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,151,138,138,134,134,137,137,135,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,136,136,136,136,136,136,136,136,136,136,136,136,136,134,134,134,134,137,137,137,135,139,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,138,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,141,136,142,143,144,148,150,145,142,139,142,145,142,143,144,145,146,147,148,149,150,151,152,153,142,142,139,140,139,139,139,138,134,137,135,151,138,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,141,143,144,150,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,138,136,134,137,135,149,154,155,156,157,155,156,155,156,158,157,159,158,160,156,158,157,160,158,161,159,160,162,162,163,163,0,0,0,164,165,165,0,164,0,0,164,0,164,0,0,165,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,165,165,172,167,171,172,172,165,165,166,167,164,168,169,170,171,172,165,166,169,168,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,165,166,167,164,168,169,170,171,172,165,167,164,168,169,168,171,166,172,170,0,165,172,165,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,166,167,164,168,169,170,171,172,165,167,166,171,166,167,164,168,169,170,171,172,165,173,173,0,0,0,174,175,0,174,0,174,0,0,174,0,0,175,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,175,175,182,177,181,182,182,175,175,176,177,174,178,179,180,181,182,175,176,180,179,178,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,175,176,177,174,178,179,180,181,182,175,177,174,178,180,178,181,176,181,176,179,182,0,176,181,175,182,175,176,181,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,176,177,174,178,179,180,181,182,175,177,176,181,176,177,174,178,179,180,181,182,175,183,183,184,185,186,0,0,187,188,0,0,189,190,189,190,186,187,191,186,0,0,186,0,188,191,185,0,184,0,0,188,0,0,0,185,0,0,0,0,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,194,185,195,196,189,190,198,186,188,199,194,185,195,196,189,190,198,186,188,199,195,185,195,196,190,185,195,196,190,192,193,185,195,196,189,190,197,197,187,198,198,186,186,188,188,199,199,200,200,184,184,191,191,192,193,194,185,195,195,196,189,190,197,187,198,186,188,199,200,184,191,195,196,190,192,195,196,190,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,189,189,193,193,195,196,192,194,195,196,196,195,193,196,193,192,194,185,195,196,189,190,198,186,188,199,197,198,186,188,199,200,184,191,192,193,194,185,195,196,196,196,196,189,189,189,190,190,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,189,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,192,193,194,185,195,196,189,190,197,187,198,186,188,199,200,184,191,193,201,201,202,203,203,0,0,0,0,0,0,0,0,204,205,204,204,205,204,204,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,206,206,204,204,205,205,206,204,205,206,206,206,204,205,206,204,205,206,206,204,205,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,0,0,0,0,0,0,207,208,209,210,207,208,209,210,209,207,208,209,210,207,208,209,210,208,209,210,208,209,210,0,0,208,209,210,208,209,210,207,207,208,209,210,207,208,209,210,207,208,209,210,207,208,209,210,207,208,209,210,207,208,209,210,208,208,209,210,209,208,208,209,210,209,210,208,209,210,207,207,208,209,210,207,208,209,210,207,208,209,210,207,208,209,210,211,211,211,211,0,211,0,212,212,0,211,0,212,0,212,211,212,213,214,215,211,212,213,214,215,211,213,214,214,212,213,214,215,211,212,213,214,215,211,215,215,215,211,211,212,213,214,215,211,212,213,214,215,211,212,213,214,215,211,212,213,214,215,211,212,213,214,215,211,215,213,214,214,214,211,212,213,214,215,211,212,213,214,215,211,212,213,214,215,211,0,212,213,214,215,211,216,0,0,216,217,217,216,0,216,217,216,218,217,216,218,217,216,218,217,216,218,216,216,218,217,216,218,217,216,218,217,216,218,217,216,218,217,216,218,218,218,216,217,216,218,217,216,218,217,216,218,217,216,218,219,219,219,220,220,0,0,0,0,0,0,0,0,0,0,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,225,226,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,224,225,226,227,224,225,226,227,0,225,0,225,226,225,226,222,223,224,225,226,227,228,228,221,222,222,223,223,224,225,225,226,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,221,227,224,225,226,221,227,222,223,222,223,225,226,221,227,222,223,225,226,222,223,225,226,224,225,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,222,221,222,223,224,225,226,227,228,229,229,0,229,0,229,229,230,229,230,229,230,230,230,229,230,229,230,229,229,230,229,230,229,230,229,230,229,230,229,230,229,230,229,230,229,230,229,0,230,229,231,0,0,0,232,233,0,0,0,232,233,232,233,234,235,231,0,0,0,0,232,233,0,0,0,0,0,0,232,233,0,0,0,232,233,0,0,0,236,236,236,236,236,236,236,232,233,236,0,232,233,0,232,233,0,0,236,236,0,236,0,0,237,238,0,0,0,232,233,0,236,0,0,0,0,0,0,236,236,236,236,236,239,240,241,240,241,234,235,240,241,237,238,237,238,232,233,236,242,243,244,244,244,237,238,232,233,237,238,0,236,242,243,242,243,236,236,236,236,236,245,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,267,267,268,250,251,255,256,257,258,259,267,268,267,268,267,268,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,245,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,265,266,267,268,269,232,233,239,270,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,265,266,267,268,269,232,233,239,270,0,246,245,244,239,270,245,244,239,270,245,244,239,270,245,244,239,270,0,245,244,239,270,270,260,261,265,266,270,270,267,245,244,239,270,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,255,257,258,237,238,260,261,262,263,264,232,239,270,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,255,257,258,237,238,260,261,262,263,264,232,239,270,265,266,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,236,265,266,267,268,232,233,239,270,231,234,234,235,235,246,247,247,248,248,249,240,240,241,241,250,250,251,251,252,253,253,254,254,245,244,242,242,243,243,255,255,256,256,257,258,258,259,259,237,237,238,238,260,260,261,261,262,263,263,264,264,236,265,265,266,266,267,267,268,268,269,232,232,233,233,239,270,234,246,249,240,250,252,245,244,242,255,257,258,237,267,267,267,267,268,265,266,0,0,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,246,252,262,269,232,232,242,267,268,234,235,247,248,249,240,241,250,251,253,254,245,242,257,237,238,260,261,263,264,232,239,270,262,246,252,262,269,260,261,265,266,265,266,267,247,248,253,254,263,264,268,268,250,251,234,247,249,240,250,253,245,244,242,255,257,258,237,260,263,264,265,266,267,232,265,266,246,252,262,269,242,249,255,256,257,258,259,265,266,245,244,239,270,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,265,266,267,268,269,232,233,239,270,236,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,255,256,258,259,255,256,258,259,231,234,235,246,247,248,249,240,241,250,251,252,253,254,245,244,242,243,255,256,257,258,259,237,238,260,261,262,263,264,236,265,266,267,268,269,232,233,239,270,253,254,263,264,271,272,273,274,275,275,276,276,277,0,0,0,277,278,279,277,278,279,278,278,279,277,278,279,277,278,279,278,279,278,278,278,277,278,278,279,277,278,279,277,278,279,277,278,279,277,278,279,277,278,279,278,278,278,278,278,277,278,277,278,279,277,278,279,277,278,279,277,278,279,0,0,0,0,280,281,282,283,0,0,284,0,284,0,284,284,284,0,0,0,0,284,284,285,0,285,286,0,287,286,0,0,287,287,0,284,0,284,0,0,0,0,0,0,285,0,285,286,284,288,289,290,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,290,288,289,300,300,298,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,298,288,289,288,289,288,289,288,289,297,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,280,281,282,294,293,294,286,286,285,285,291,291,292,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,294,288,289,293,290,290,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,299,293,295,288,296,294,288,289,288,289,294,0,297,288,289,300,299,300,288,289,280,281,293,283,294,295,296,290,297,298,299,300,284,299,290,290,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,294,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,288,289,285,289,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,290,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,296,286,285,291,292,288,289,280,281,282,293,283,294,295,296,290,297,287,298,299,300,284,297,301,302,303,304,305,306,307,305,304,308,309,308,303,310,304,304,311,312,313,314,315,316,317,318,319,320,319,320,321,319,320,322,322,323,0,0,323,323,323,323,0,323,323,324,325,323,324,325,323,324,325,323,324,325,323,0,0,0,324,325,325,323,324,325,323,324,324,325,323,324,325,323,324,325,323,324,325,323,324,324,0,325,324,325,323,324,325,323,324,325,323,324,325,323,0,0,326,326,326,326,0,326,326,326,326,326,326,326,0,326,326,326,326,326,0,327,0,327,0,327,0,328,329,328,330,327,329,328,330,327,329,329,328,330,327,329,328,330,327,329,330,330,328,330,328,328,330,330,328,330,327,329,328,330,327,330,330,329,328,330,327,329,328,330,327,329,330,327,329,328,330,327,328,328,328,329,330,328,328,330,328,328,329,330,329,328,330,327,329,328,330,327,329,328,330,327,329,328,330,327,331,332,333,333,332,333,0,0,0,0,0,0,0,0,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,335,0,336,336,0,0,0,337,0,337,0,338,338,336,339,0,0,339,335,0,338,338,338,338,338,0,340,339,0,0,338,338,340,341,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,344,344,341,344,338,344,344,343,344,338,337,337,340,340,335,335,336,336,339,339,342,343,341,344,338,345,337,340,335,336,339,344,342,344,341,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,345,341,343,343,344,344,344,341,341,341,342,341,342,341,344,342,342,345,343,341,342,341,341,341,341,342,341,344,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,342,343,341,344,338,345,337,340,335,336,339,338,342,343,341,344,338,345,337,340,335,336,339,346,347,348,346,349,350,351,352,353,354,348,353,350,351,352,353,354,348,354,347,349,352,349,350,349,350,351,352,353,354,347,348,346,349,350,351,352,353,354,355,356,357,357,357,357,357,0,0,357,357,355,356,356,356,357,357,0,357,0,357,357,0,357,357,357,357,357,356,0,357,0,357,357,357,357,357,356,356,355,357,357,357,0,0,0,358,0,359,0,359,0,359,0,359,0,360,0,0,0,0,0,359,0,359,0,359,0,359,0,359,0,0,0,0,0,0,0,359,0,359,0,359,0,359,0,359,0,359,0,359,358,361,361,362,363,360,362,363,362,362,362,362,0,0,0,0,0,0,0,0,0,0,0,364,0,0,0,365,366,365,365,365,365,365,365,365,364,365,365,0,366,367,367,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,369,370,371,364,372,369,370,371,364,372,367,369,369,369,367,368,369,365,366,366,370,371,364,372,367,368,369,365,366,370,371,364,372,369,369,371,371,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,368,372,372,371,369,369,371,372,369,367,370,367,367,369,370,370,367,367,370,367,0,371,369,370,371,364,372,366,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,368,369,365,366,370,371,364,372,367,373,374,375,376,374,377,378,379,380,381,382,378,379,375,374,377,379,375,376,380,376,382,0,383,0,384,384,0,385,386,383,384,387,384,0,385,384,384,385,384,0,384,384,387,388,386,383,383,387,0,384,385,385,0,384,386,0,386,389,386,383,388,386,383,390,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,385,386,383,388,385,386,383,388,390,390,384,385,385,386,386,389,389,383,383,388,388,390,387,384,385,386,389,383,388,390,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,390,390,390,390,390,390,390,390,390,385,386,383,388,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,387,384,385,386,389,383,388,390,391,392,393,394,391,395,393,394,396,397,396,398,399,399,400,401,402,401,402,0,0,403,0,404,404,404,404,404,0,403,403,405,406,403,404,405,406,403,404,405,406,403,404,405,406,403,404,405,406,403,404,404,405,406,403,403,403,403,404,405,406,403,404,405,406,403,404,405,406,403,404,405,406,403,404,405,403,405,406,404,405,406,403,404,405,406,403,404,405,406,403,404,405,406,403,404,407,407,408,0,409,0,408,410,0,411,408,409,410,410,0,0,411,410,410,410,408,411,408,408,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,409,408,410,409,408,410,409,409,412,409,411,408,408,410,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,410,409,412,411,412,409,408,410,408,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,412,409,411,408,410,410,413,414,415,0,0,0,416,415,0,0,0,0,415,0,415,415,416,415,0,415,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,419,419,419,419,419,420,416,415,415,421,421,422,422,417,418,419,420,416,415,421,422,419,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,419,417,417,420,416,418,418,418,420,418,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,417,418,419,420,416,415,421,422,423,423,424,424,0,424,425,424,0,0,0,0,425,424,0,425,425,0,0,424,424,424,424,0,424,426,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,428,431,429,430,430,427,430,431,430,430,426,426,429,430,431,425,424,424,426,427,428,429,430,430,431,425,424,430,430,427,426,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,427,427,429,427,430,430,430,426,426,430,427,429,426,427,427,426,430,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,426,427,428,429,430,431,425,424,427,426,426,426,427,428,429,430,431,425,424,427,431,432,432,433,434,433,434,355,356,357,357,357,357,357,0,0,357,357,355,356,356,356,357,357,0,357,0,357,357,0,357,357,357,357,357,356,0,357,0,357,357,357,357,357,356,356,355,357,357,357,357,435,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,356,357,435,357,435,357,435,357,435,357,357,435,356,356,355,355,436,357,357,357,357,435,435,435,356,356,356,356,356,356,356,356,356,355,357,357,0,0,435,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,436,0,357,436,435,357,435,357,356,355,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,436,357,435,356,355,357,358,0,359,0,359,0,359,0,359,0,360,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,0,0,0,0,0,359,0,359,0,359,0,359,0,359,0,0,0,0,0,0,0,359,0,359,0,359,0,359,0,359,0,359,0,359,358,361,361,453,454,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,453,454,453,453,453,453,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,359,362,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,363,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,360,362,453,454,359,437,437,437,438,438,438,439,439,439,440,440,440,441,441,441,442,442,442,443,443,443,444,444,444,445,445,445,446,446,446,447,447,447,448,448,448,449,449,449,450,450,450,451,451,451,452,452,452,453,453,453,453,454,454,361,358,363,359,453,454,361,358,363,359,363,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,361,358,358,363,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,453,454,359,453,454,359,362,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,453,454,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,363,453,454,359,362,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,362,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,362,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,361,358,363,453,453,453,454,361,358,363,359,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,361,358,363,359,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,0,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,455,456,457,0,458,459,0,0,0,458,455,457,0,0,456,0,456,456,459,456,460,458,455,457,461,459,456,460,458,455,457,461,460,460,460,460,459,456,460,458,455,457,461,459,456,460,458,455,457,461,459,460,459,460,460,460,460,459,460,459,460,459,456,456,460,460,458,458,455,455,457,457,461,461,459,456,460,460,460,458,455,457,461,461,460,460,459,460,460,460,460,459,456,460,458,455,457,461,459,456,460,458,455,457,461,459,456,460,458,455,457,461,459,456,460,458,455,457,461,460,459,460,459,460,460,459,460,459,456,460,458,455,457,461,459,456,460,460,460,458,455,457,461,459,456,460,458,455,457,461,459,456,460,458,455,457,461,459,459,456,460,458,455,457,461,0,462,463,463,464,462,462,0,462,0,464,0,462,0,0,462,465,463,465,464,462,462,462,462,466,0,465,0,0,0,462,462,467,467,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,467,469,470,471,464,463,469,470,471,464,463,469,470,471,468,469,470,471,464,469,470,471,464,469,470,471,462,464,463,463,466,466,465,465,468,467,469,470,471,462,464,463,466,465,469,470,471,468,469,470,471,467,467,468,468,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,469,470,471,467,467,467,468,467,468,467,467,469,470,471,468,467,468,468,467,468,467,467,467,467,468,467,467,467,469,470,471,464,463,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,468,467,469,470,471,462,464,463,466,465,467,468,467,469,470,471,462,464,463,466,465,472,473,473,472,474,475,474,476,477,478,474,477,479,480,478,481,482,483,481,482,483,472,473,474,477,479,480,478,481,483,473,473,473,479,483,0,0,484,484,484,485,484,485,484,485,484,485,484,484,484,485,484,484,484,484,485,484,485,484,485,485,484,485,484,484,484,484,484,485,484,485,484,485,484,485,484,485,484,484,484,484,484,484,484,484,486,0,487,486,0,0,0,487,486,486,486,487,488,486,489,487,488,486,489,487,488,486,489,487,488,486,489,0,0,0,486,486,489,489,487,488,486,489,488,487,488,486,489,487,488,486,489,486,489,487,488,486,489,487,488,488,0,0,486,489,487,488,486,489,487,488,486,489,487,488,486,489,487,488,486,489,490,490,490,0,491,492,0,0,0,0,0,490,492,0,0,0,491,492,0,0,0,0,0,490,490,490,0,493,494,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,497,495,495,496,497,498,499,491,492,490,493,500,494,501,502,503,495,496,497,498,499,491,492,490,493,500,494,501,502,503,497,499,499,493,494,501,502,498,495,496,497,498,499,491,492,490,493,500,494,501,502,503,495,496,497,498,499,491,492,490,493,500,494,501,502,503,497,497,496,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,499,496,497,499,493,500,494,501,502,496,497,498,499,492,493,500,494,501,502,503,495,495,495,495,495,498,503,495,497,495,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,499,500,501,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,501,503,495,496,497,498,499,491,492,490,493,500,494,501,502,503,504,505,506,505,506,506,506,505,506,0,507,507,507,507,507,507,507,0,507,507,507,507,507,507,507,507,507,507,507,507,0,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,0,508,508,508,508,0,508,508,508,0,508,508,508,508,508,508,508,508,508,508,508,508,509,509,509,0,0,509,0,510,509,511,510,509,511,510,509,511,510,509,511,0,0,510,509,509,511,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,510,509,511,512,513,514,515,0,0,0,0,0,0,0,0,516,0,517,0,0,517,517,0,0,0,0,0,0,512,513,0,0,0,518,0,516,513,0,517,0,518,519,519,0,519,0,514,515,516,514,515,0,0,0,0,517,0,520,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,529,535,534,534,521,521,528,540,526,527,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,0,0,0,0,521,513,525,512,526,518,527,528,514,517,529,519,530,531,532,533,534,535,520,540,541,521,513,525,512,526,518,527,528,514,517,529,519,530,531,532,533,534,535,520,540,541,532,0,0,0,0,0,0,0,525,525,520,0,0,521,513,525,512,526,518,527,528,517,529,519,530,531,532,533,534,535,520,540,521,513,525,512,526,518,527,528,517,529,519,530,531,532,533,534,535,520,540,525,521,513,522,523,523,524,524,525,512,526,518,527,516,516,528,514,514,517,529,519,530,531,532,533,534,535,536,536,537,538,539,539,520,540,515,515,541,541,537,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,513,527,522,526,527,538,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,522,537,526,527,538,540,520,529,528,521,525,526,518,527,528,517,529,519,530,531,532,533,534,535,520,540,520,528,534,534,520,520,521,529,532,533,534,513,517,532,529,532,533,534,529,535,525,530,531,535,530,531,535,521,513,525,512,526,518,527,528,514,517,529,519,530,531,532,533,534,535,520,540,541,523,524,516,514,536,539,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,521,513,522,523,524,525,512,526,518,527,516,528,514,517,529,519,530,531,532,533,534,535,536,537,538,539,520,540,515,541,542,542,542,543,0,0,0,543,543,543,0,0,543,544,545,546,547,548,543,0,0,0,0,0,0,549,550,543,0,0,0,543,542,0,549,0,0,0,543,544,545,546,547,548,0,0,550,551,551,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,561,553,553,551,553,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,551,552,557,558,550,560,561,546,557,558,550,560,561,546,558,557,552,554,560,561,558,558,559,554,556,557,558,559,543,550,550,560,561,549,549,548,548,544,544,545,545,546,546,547,547,542,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,553,558,553,551,552,558,559,553,555,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,546,551,551,552,559,558,551,551,551,552,551,551,551,553,558,555,552,551,552,551,551,553,552,551,556,553,557,557,551,551,551,559,557,558,550,560,561,546,550,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,552,553,551,554,555,556,557,558,559,543,550,560,561,549,548,544,545,546,547,542,562,563,563,563,564,565,562,566,567,565,568,566,567,563,564,565,562,568,569,569,563,570,570,0,0,0,0,0,0,571,0,572,573,0,0,0,0,574,0,0,575,573,573,576,577,577,577,577,577,574,578,0,578,0,573,0,0,573,578,578,573,571,571,0,571,0,0,0,0,0,574,0,0,576,577,573,575,572,572,572,571,0,579,579,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,579,579,579,579,587,579,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,587,589,590,574,589,590,574,589,590,579,587,589,590,574,589,590,574,579,588,587,588,589,590,574,575,575,578,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,587,589,590,579,579,581,583,589,590,581,583,586,585,584,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,580,573,571,581,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,584,586,584,579,587,587,589,590,574,579,579,574,579,589,590,581,582,585,579,582,579,580,580,580,579,579,579,579,579,579,587,583,579,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,580,579,580,573,572,571,581,576,582,583,577,584,585,586,587,588,589,590,574,575,578,574,591,591,592,593,594,594,593,592,592,595,596,596,596,595,595,597,598,597,597,598,597,597,597,597,598,599,600,601,0,602,603,0,0,0,0,604,603,605,0,603,602,0,0,601,603,0,606,606,606,603,601,0,0,0,0,605,603,604,601,607,607,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,607,607,607,607,607,612,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,608,612,610,611,610,611,610,611,607,610,611,610,611,607,607,611,611,610,611,612,613,604,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,612,610,611,607,608,610,611,608,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,606,607,612,612,610,611,607,607,611,607,610,611,608,607,607,613,613,607,607,607,607,607,0,607,612,610,611,604,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,607,603,601,608,602,605,609,610,611,612,613,604,606,614,615,615,616,617,617,617,616,616,618,0,0,619,619,619,620,619,620,619,619,620,619,620,620,620,620,619,620,620,619,619,620,619,620,620,620,619,620,619,620,619,620,619,620,619,619,619,619,620,619,619,620,619,619,619,619,619,619,620,619,620,619,620,619,620,619,619,619,620,621,622,622,622,0,0,0,621,621,622,623,623,0,621,623,624,0,0,0,624,0,0,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,625,625,625,625,628,625,625,625,628,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,622,626,627,621,629,623,622,626,627,621,629,623,626,627,625,626,627,621,629,623,626,627,621,629,623,625,625,625,625,625,622,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,625,626,627,625,626,627,628,625,625,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,629,626,627,621,629,625,625,629,626,627,625,625,625,625,625,625,629,622,626,627,621,629,623,622,625,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,625,622,626,627,624,628,621,629,623,630,631,631,632,633,0,0,634,0,634,0,633,633,633,633,0,635,0,0,635,0,0,635,0,635,0,635,0,635,636,637,638,639,640,641,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,635,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,643,644,644,644,639,644,644,633,633,644,642,643,636,637,638,639,640,641,633,644,634,634,634,635,635,635,635,635,635,635,644,0,639,644,636,640,637,636,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,642,638,639,640,641,633,644,642,643,636,637,638,639,640,641,633,644,634,635,636,637,636,644,638,644,638,638,639,641,635,643,640,635,635,635,643,642,639,642,644,633,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,642,643,636,637,638,639,640,641,633,644,634,635,636,637,640,636,637,640,0,0,645,0,0,0,0,646,646,646,646,0,647,647,648,647,647,646,647,649,0,0,649,0,0,0,0,0,646,0,0,649,0,0,0,0,648,650,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,650,650,650,664,662,658,651,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,658,663,660,661,660,661,660,661,650,650,658,657,660,661,660,661,650,659,650,657,658,659,660,661,662,647,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,658,660,661,653,660,661,651,653,664,656,655,654,650,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,651,652,649,645,657,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,657,653,651,654,656,654,660,661,650,657,650,662,650,651,660,661,655,650,650,650,663,652,652,652,657,650,662,650,650,650,650,663,658,653,651,660,661,647,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,651,652,664,650,651,652,648,653,646,654,655,656,649,645,657,658,659,660,661,662,647,663,664,665,666,666,667,667,667,666,665,668,0,669,669,0,0,0,669,669,670,671,669,670,671,669,670,671,669,670,671,669,669,0,669,669,669,670,670,671,669,670,671,669,669,669,670,671,669,670,671,669,670,671,669,670,671,671,671,0,671,671,669,669,670,669,670,671,669,670,671,669,670,671,669,670,671,0,0,0,0,0,0,0,0,672,672,673,672,674,675,676,673,672,674,675,676,674,672,672,673,673,672,674,675,676,673,672,674,675,676,675,676,675,676,675,672,675,675,673,672,672,675,676,673,672,674,675,676,675,672,675,674,676,673,672,674,675,676,673,672,674,675,676,673,672,674,675,676,673,672,674,675,676,672,672,672,675,672,672,672,675,672,672,676,672,672,672,672,675,676,672,672,673,672,672,673,672,674,675,676,673,672,674,675,676,673,672,674,675,676,672,674,673,672,674,675,676,0,0,0,677,0,0,677,0,678,678,679,678,680,681,682,677,679,678,680,681,682,677,678,680,679,678,680,681,682,677,679,678,680,681,682,677,679,682,682,682,678,682,682,679,678,680,678,680,681,682,677,679,678,680,681,682,677,682,682,678,678,681,679,678,680,681,682,677,679,678,680,681,682,677,679,678,680,681,682,677,679,678,680,681,682,677,678,678,678,678,682,678,682,678,678,678,678,682,679,678,680,681,682,677,679,678,680,681,682,677,679,678,680,681,682,677,678,678,678,679,678,680,681,682,677,683,683,684,684,684,684,685,0,684,685,0,686,0,684,687,688,684,687,689,686,0,687,684,0,688,685,686,684,0,688,0,686,684,0,688,0,0,689,686,0,0,0,686,686,686,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,687,694,684,685,689,687,694,684,685,689,0,687,694,684,685,689,687,694,684,685,689,687,694,684,684,685,685,686,686,695,695,689,690,688,691,692,693,687,694,684,685,686,695,689,692,693,691,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,688,691,692,691,694,694,684,685,689,693,694,694,694,694,690,690,690,690,687,694,684,685,689,684,685,686,695,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,690,688,691,692,693,687,694,684,685,686,695,689,0,0,0,690,688,691,692,693,687,694,684,685,686,695,689,696,696,0,0,0,697,0,0,698,699,697,700,698,699,697,700,698,699,697,700,698,699,697,700,0,0,698,699,700,699,700,699,698,0,699,699,699,697,697,700,698,699,697,700,699,699,698,698,699,697,700,698,699,697,700,698,699,697,700,698,699,697,700,700,698,699,698,700,0,0,699,0,0,0,698,698,700,699,700,697,0,698,699,699,697,700,698,699,697,700,698,699,697,700,698,699,697,700,0,701,0,701,0,0,701,702,701,703,704,702,701,703,704,702,701,703,704,702,701,703,704,702,702,702,702,701,703,704,703,704,702,701,703,704,702,701,703,704,702,701,703,704,702,701,703,704,704,702,0,702,702,701,703,704,702,701,703,704,702,701,703,704,702,701,703,704,705,705,0,0,706,0,706,707,706,708,707,706,708,708,708,708,707,706,708,707,706,708,0,707,708,708,708,708,706,708,707,706,708,708,707,706,708,707,706,708,707,706,708,707,706,708,707,708,707,706,708,707,706,708,707,707,706,708,707,706,708,709,710,0,711,0,0,711,712,713,711,712,713,711,712,713,711,712,713,711,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,713,711,712,0,713,713,712,712,713,711,712,713,711,712,713,711,712,713,711,714,715,715,715,0,715,0,715,0,715,715,715,715,715,715,716,717,715,716,717,715,716,717,715,716,717,715,716,716,717,715,717,715,0,716,717,715,715,716,717,715,716,717,715,716,717,715,716,717,715,716,717,715,717,717,716,717,716,717,715,715,716,717,715,716,717,715,716,717,715,716,717,715,0,0,718,718,719,719,719,0,0,718,0,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,722,719,718,719,718,719,718,718,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,719,720,721,720,721,722,719,718,718,0,720,721,720,721,722,719,718,720,721,722,719,718,720,721,722,719,718,0,720,721,722,719,718,723,724,725,726,0,0,0,0,727,728,0,0,0,0,726,726,725,0,726,726,0,728,0,727,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,734,729,725,730,731,725,730,731,735,735,729,735,735,729,729,735,729,727,725,730,726,731,732,728,733,734,735,725,730,731,735,725,735,728,733,734,731,732,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,725,730,731,725,730,731,725,730,731,727,725,730,731,725,727,729,725,730,731,729,735,729,729,729,729,725,730,731,725,730,731,725,730,731,730,729,729,729,729,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,729,727,725,730,726,731,732,728,733,734,735,725,730,731,729,727,725,730,726,731,732,728,733,734,735,729,736,737,738,736,736,737,738,739,0,0,0,0,740,740,740,740,740,740,740,740,0,0,0,741,742,740,741,742,740,742,741,742,740,741,742,740,741,742,740,740,741,742,740,741,741,742,740,741,742,740,741,742,740,741,742,740,741,741,741,740,741,742,740,741,742,740,741,742,740,0,741,742,740,743,743,743,743,743,743,743,743,743,743,743,743,0,0,0,744,745,743,744,745,743,744,745,743,744,745,743,745,745,743,743,744,745,743,744,744,745,743,744,745,743,744,745,743,744,745,743,744,744,744,744,745,744,743,744,745,743,744,745,743,744,745,743,0,744,745,743,746,747,746,747,748,746,747,748,748,0,0,0,749,748,748,748,748,0,749,0,749,0,749,0,749,0,0,748,0,750,746,751,747,749,752,753,754,755,748,750,746,751,747,749,752,753,754,755,748,750,750,750,746,751,747,749,752,753,754,755,748,750,746,751,747,749,752,753,754,755,748,755,750,751,748,748,750,746,751,747,749,752,753,754,755,748,754,753,752,750,746,751,747,749,752,753,754,755,748,750,746,751,747,749,752,753,754,755,748,746,747,748,750,746,751,747,749,752,753,754,755,748,752,754,752,751,751,751,750,750,751,753,751,748,750,751,750,746,751,747,749,752,753,754,755,748,750,746,751,747,749,752,753,754,755,748,750,746,751,747,749,752,753,754,755,748,0,750,746,751,747,749,752,753,754,755,748,756,756,757,757,757,756,757,758,759,759,760,761,760,761,762,760,761,762,762,0,0,0,762,762,0,763,760,761,762,763,760,761,762,763,763,760,761,762,763,760,761,762,763,762,762,763,760,761,762,763,760,761,762,763,760,761,762,763,760,761,762,763,760,761,762,763,762,763,760,761,762,763,760,761,762,763,760,761,762,0,763,760,761,762,764,764,765,765,765,764,765,766,767,767],"f":[null,[[["chainspec",3]],["header",3]],null,null,null,null,null,[[["peerid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["slotclaim",3]],[[]],null,[[["slotclaim",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,[[["slotclaim",3]],["bool",15]],[[["config",3]],[["slotclaim",3],["option",4,["slotclaim"]]]],null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["u8"]],["u8",15]],["builderauthoring",4]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["builderauthoring",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",4]],["error",4]],[[["option",4]],["builderauthoring",4]],[[],["builderauthoring",4]],[[],["success",3]],[[["option",4]],["builderauthoring",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["config",3]]],null,null,null,null,[[]],[[]],[[["authoringstartconfig",3]],["builderauthoring",4]],[[],["authoringstart",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["u8"]],["u8",15]],["blockbuild",4]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["config",3]],["blockbuild",4]],[[],["transactionvalidityerror",4]],[[],["invalidtransaction",4]],[[],["unknowntransaction",4]],[[],["dispatcherror",4]],[[]],[[]],[[]],[[]],null,null,[[["transactionvalidityerror",4]],["bool",15]],[[["invalidtransaction",4]],["bool",15]],[[["unknowntransaction",4]],["bool",15]],[[["dispatcherror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["blockbuild",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inherentdata",3]],["blockbuild",4]],[[["option",4]],["blockbuild",4]],[[],["blockbuild",4]],[[],["blockbuild",4]],[[["option",4]],["blockbuild",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],null,[[["transactionvalidityerror",4]],["bool",15]],[[["invalidtransaction",4]],["bool",15]],[[["unknowntransaction",4]],["bool",15]],[[["dispatcherror",4]],["bool",15]],null,null,null,null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["asyncopid",3]]],[[["asyncopid",3]],["usize",15]],null,[[],["option",4]],[[["nodeindex",3]],["option",4]],[[["nodeindex",3]],["option",4]],null,[[["nodeindex",3]]],null,[[["nodeindex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["asyncopid",3]],[[],["outputupdate",4]],[[],["outputupdateblock",3]],[[]],[[]],[[]],[[["asyncopid",3]],["ordering",4]],[[["asyncopid",3]],["bool",15]],[[["outputupdate",4]],["bool",15]],[[["outputupdateblock",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],null,null,[[["nodeindex",3]]],[[["option",4,["nodeindex"]],["bool",15],["nodeindex",3]],["nodeindex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["asyncopid",3]],["bool",15]],[[["outputupdate",4]],["bool",15]],[[["outputupdateblock",3]],["bool",15]],[[]],[[],["nextnecessaryasyncop",4]],[[["nodeindex",3]],[["option",4,["nodeindex"]],["nodeindex",3]]],[[["asyncopid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[],[["option",4,["outputupdate"]],["outputupdate",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["nonfinalizedtree",3]],[[],["nonfinalizedtree",3]],[[],["setfinalizedblockiter",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformationref",3]],[[]],[[],["headerref",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bodyverifystep2",4]],null,[[],["replacements",3]],[[]],[[],["config",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["headerref",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["headerref",3]],[[],["headerref",3]],[[["option",4]],["bodyverifystep2",4]],[[],["bodyverifystep2",4]],[[["option",4]],["bodyverifystep2",4]],[[]],[[],["nonfinalizedtree",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["header",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["usize",15]],[[["config",3]]],[[],["option",4]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[],[["blockaccess",3],["option",4,["blockaccess"]]]],[[["u64",15]],[["blockaccess",3],["option",4,["blockaccess"]]]],[[["u64",15]],[["blockaccess",3],["option",4,["blockaccess"]]]],[[["u64",15]],[["blockaccess",3],["option",4,["blockaccess"]]]],[[["u64",15]],[["blockaccess",3],["option",4,["blockaccess"]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],[["blockaccess",3],["option",4,["blockaccess"]]]],[[],[["blockaccess",3],["result",4,["blockaccess","blockaccess"]]]],[[]],[[["usize",15]]],[[["hostvmprototype",3],["calculationcache",3],["option",4,["calculationcache"]]],["bodyverifystep2",4]],[[],[["result",4,["setfinalizedblockiter","setfinalizederror"]],["setfinalizedblockiter",3],["setfinalizederror",4]]],[[]],[[]],[[],["streamsafe",3]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["vec",3,["u8"]],["u8",15],["duration",3]],["bodyverifystep1",4]],[[],[["finalityapply",3],["commitverifyerror",4],["result",4,["finalityapply","commitverifyerror"]]]],[[["vec",3,["u8"]],["u8",15],["duration",3]],[["result",4,["headerverifysuccess","headerverifyerror"]],["headerverifysuccess",4],["headerverifyerror",4]]],[[],[["result",4,["finalityapply","justificationverifyerror"]],["finalityapply",3],["justificationverifyerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["chaininformationref",3]],[[],["chaininformationref",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["validchaininformation",3]],[[],["validchaininformationref",3]],[[],["chaininformation",3]],[[],["chaininformationconsensus",4]],[[],["babeepochinformation",3]],[[],["chaininformationfinality",4]],[[],["chaininformationref",3]],[[],["chaininformationconsensusref",4]],[[],["babeepochinformationref",3]],[[],["chaininformationfinalityref",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["validchaininformationref",3]],["validchaininformation",3]],[[]],[[]],[[["validchaininformation",3]],["validchaininformationref",3]],[[["validchaininformation",3]]],[[]],[[["chaininformationref",3]],["chaininformation",3]],[[]],[[["babeepochinformationref",3]],["babeepochinformation",3]],[[]],[[]],[[]],[[]],[[["chaininformation",3]],["chaininformationref",3]],[[]],[[]],[[["babeepochinformation",3]],["babeepochinformationref",3]],[[]],[[["chaininformationfinality",4]],["chaininformationfinalityref",4]],[[]],[[["chainspec",3]],[["fromgenesisstorageerror",4],["result",4,["fromgenesisstorageerror"]]]],[[["chainspec",3]],[["fromgenesisstorageerror",4],["result",4,["fromgenesisstorageerror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[["chaininformation",3]],["result",4]],[[["chaininformationref",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["validityerror"]],["validityerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["auragenesisconfiguration",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",4,["fromgenesisstorageerror"]],["fromgenesisstorageerror",4]]],[[["hostvmprototype",3]],[["result",4,["fromvmprototypeerror"]],["fromvmprototypeerror",4]]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["babegenesisconfiguration",3]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",4,["fromgenesisstorageerror"]],["fromgenesisstorageerror",4]]],[[["hostvmprototype",3]],[["result",4,["fromvmprototypeerror"]],["fromvmprototypeerror",4]]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["config",3]],["query",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]],["query",4]],[[["option",4]],["query",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["query",4]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["nodeindex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nodeindex",3]],[[]],[[["nodeindex",3]],["ordering",4]],[[["nodeindex",3]],[["option",4,["nodeindex"]],["nodeindex",3]]],[[]],[[]],[[["nodeindex",3]],["bool",15]],[[],["bool",15]],[[],[["option",4,["nodeindex"]],["nodeindex",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["nodeindex",3]],["option",4]],[[["nodeindex",3]],["option",4]],null,[[["option",4,["nodeindex"]],["nodeindex",3]],["nodeindex",3]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[["nodeindex",3]],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[],["usize",15]],[[["nodeindex",3]],["bool",15]],[[]],[[],["option",4]],[[["nodeindex",3]]],[[["nodeindex",3]],[["option",4,["nodeindex"]],["nodeindex",3]]],[[["nodeindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["nodeindex",3]],["pruneancestorsiter",3]],[[["nodeindex",3]],["pruneancestorsiter",3]],[[["usize",15]]],[[["nodeindex",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[["usize",15]]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[],["chainspec",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["parseerror",3],["result",4,["parseerror"]]]],[[]],[[],["option",4]],[[],["bool",15]],[[],["str",15]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["option",4,["lightsyncstate"]],["lightsyncstate",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["option",4]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["str",15]],[["result",4,["corruptederror"]],["corruptederror",3]]],[[["validchaininformationref",3]],["string",3]],[[["option",4],["validchaininformationref",3]],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["result",4,["accesserror"]],["accesserror",4]]],[[],[["option",4],["accesserror",4],["result",4,["option","accesserror"]]]],[[["u64",15]],[["result",4,["accesserror"]],["accesserror",4]]],[[],[["option",4,["vec"]],["accesserror",4],["result",4,["option","accesserror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["accesserror"]],["accesserror",4]]],[[],[["fromiterator",8],["finalizedaccesserror",4],["result",4,["finalizedaccesserror"]]]],[[],[["finalizedaccesserror",4],["result",4,["option","finalizedaccesserror"]],["option",4,["vec"]]]],[[],[["vec",3,["vec"]],["finalizedaccesserror",4],["result",4,["vec","finalizedaccesserror"]]]],[[],[["finalizedaccesserror",4],["result",4,["option","finalizedaccesserror"]],["option",4,["vec"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["corruptederror",4]],["accesserror",4]],[[]],[[]],[[["accesserror",4]],["inserterror",4]],[[["error",4]],["inserterror",4]],[[["accesserror",4]],["setfinalizederror",4]],[[]],[[]],[[],["finalizedaccesserror",4]],[[["accesserror",4]],["finalizedaccesserror",4]],[[]],[[]],[[["vec",3,["u8"]],["option",4,["vec"]]],[["sqlitefulldatabase",3],["accesserror",4],["result",4,["sqlitefulldatabase","accesserror"]]]],[[["bool",15]],[["inserterror",4],["result",4,["inserterror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["config",3]],[["internalerror",3],["result",4,["databaseopen","internalerror"]],["databaseopen",4]]],[[],[["setfinalizederror",4],["result",4,["setfinalizederror"]]]],[[],[["validchaininformation",3],["result",4,["validchaininformation","finalizedaccesserror"]],["finalizedaccesserror",4]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["invalidheappageserror",4]],[[],["coreversionerror",4]],[[],["coreversion",3]],[[],["coreversionref",3]],[[],["coreversionapisrefiter",3]],[[],["coreversionapi",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hostvmprototype",3]]],[[],["coreversionref",3]],[[]],[[]],[[["coreversion",3]],["bool",15]],[[["coreversionref",3]],["bool",15]],[[],["bool",15]],[[["coreversionapi",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],null,[[["coreversion",3]],["bool",15]],[[["coreversionref",3]],["bool",15]],[[["coreversionapi",3]],["bool",15]],[[],["option",4]],null,null,null,null,[[["option",4]],[["heappages",3],["result",4,["heappages","invalidheappageserror"]],["invalidheappageserror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",4]],[[],["newerr",4]],[[],["starterr",4]],[[],["error",4]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["externalstoragenextkey",3]],["hostvm",4]],[[["logemit",3]],["hostvm",4]],[[["externalstorageclearprefix",3]],["hostvm",4]],[[["externalstorageset",3]],["hostvm",4]],[[["externaloffchainstorageset",3]],["hostvm",4]],[[["externalstorageroot",3]],["hostvm",4]],[[["callruntimeversion",3]],["hostvm",4]],[[["externalstoragechangesroot",3]],["hostvm",4]],[[]],[[["externalstorageappend",3]],["hostvm",4]],[[["startstoragetransaction",3]],["hostvm",4]],[[["finished",3]],["hostvm",4]],[[["externalstorageget",3]],["hostvm",4]],[[["readytorun",3]],["hostvm",4]],[[["newerr",4]],["newerr",4]],[[]],[[],["newerr",4]],[[["moduleformaterror",4]],["newerr",4]],[[]],[[],["starterr",4]],[[["starterr",4]],["starterr",4]],[[]],[[],["heappages",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["hostvmprototype",3]],[[],["hostvmprototype",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["u32"]],["u32",15]]],[[],["u32",15]],[[["heappages",3],["exechint",4]],[["newerr",4],["result",4,["newerr"]]]],[[],["u32",15]],[[]],[[["option",4]],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[["option",4]],["hostvm",4]],[[["option",4]],["hostvm",4]],[[["result",4]],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[],["hostvm",4]],[[["option",4]],["hostvm",4]],[[["option",4]],["hostvm",4]],[[["str",15]],[["readytorun",3],["result",4,["readytorun"]]]],[[],["hostvm",4]],[[["str",15]],[["readytorun",3],["result",4,["readytorun"]]]],[[["str",15]],[["readytorun",3],["result",4,["readytorun"]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordetail",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["option",4]],["runtimehostvm",4]],[[["option",4]],["runtimehostvm",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["hostvmprototype",3]],[[],["hostvmprototype",3]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],null,null,null,[[],["runtimehostvm",4]],[[["config",3]],[["result",4,["runtimehostvm"]],["runtimehostvm",4]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errordetail",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["option",4]],["runtimehostvm",4]],[[],["runtimehostvm",4]],[[["option",4]],["runtimehostvm",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["hostvmprototype",3]],[[],["hostvmprototype",3]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],null,null,null,null,[[]],null,[[["config",3]],[["result",4,["runtimehostvm"]],["runtimehostvm",4]]],null,null,[[]],[[],["string",3]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["module",3]],[[],["exechint",4]],[[],["heappages",3]],[[],["signature",3]],[[],["wasmvalue",4]],[[],["valuetype",4]],[[],["trap",3]],[[],["newerr",4]],[[],["starterr",4]],[[],["moduleerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["heappages",3]],["ordering",4]],[[["exechint",4]],["bool",15]],[[["heappages",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["valuetype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["str",15]],[["result",4,["u32","globalvalueerr"]],["u32",15],["globalvalueerr",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["option",4,["i32"]],["i32",15]]],[[],[["i64",15],["option",4,["i64"]]]],[[],["virtualmachineprototype",3]],[[],["u32",15]],[[["heappages",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["heappages",3],["module",3]],[["result",4,["newerr"]],["newerr",4]]],[[["exechint",4]],[["result",4,["newerr"]],["newerr",4]]],[[["u32",15]]],[[],["signature",3]],[[]],[[["heappages",3]],[["option",4,["ordering"]],["ordering",4]]],[[["u32",15]],[["result",4,["outofboundserror"]],["outofboundserror",3]]],[[],[["valuetype",4],["option",4,["valuetype"]]]],[[["option",4,["wasmvalue"]],["wasmvalue",4]],[["execoutcome",4],["result",4,["execoutcome","runerr"]],["runerr",4]]],[[["str",15]],[["result",4,["virtualmachine"]],["virtualmachine",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["signature",3]],["result",4]],[[["signature",3]],["result",4]],[[],["result",4]],[[["functype",3]],["result",4]],[[["runtimevalue",4]],["result",4]],[[["val",4]],["result",4]],[[],["result",4]],[[["valuetype",4]],["result",4]],[[["valtype",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["valuetype",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["outofboundserror",3],["result",4,["outofboundserror"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grandpagenesisconfiguration",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",4,["fromgenesisstorageerror"]],["fromgenesisstorageerror",4]]],null,[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["commitmessageref",3]],[[],["compactcommitref",3]],[[],["unsignedprecommitref",3]],[[]],[[]],[[]],[[],[["result",4,["commitmessageref","error"]],["commitmessageref",3],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[["commitmessageref",3]],["bool",15]],[[["compactcommitref",3]],["bool",15]],[[["unsignedprecommitref",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["commitmessageref",3]],["bool",15]],[[["compactcommitref",3]],["bool",15]],[[["unsignedprecommitref",3]],["bool",15]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["bool",15]],["inprogress",4]],[[["option",4,["bool"]],["bool",15]],["inprogress",4]],[[]],[[],["u64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asref",8],["config",3]],[["asref",8],["inprogress",4]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["grandpawarpsyncresponsefragment",3],["bool",15],["chaininformationfinalityref",4],["vec",3,["grandpawarpsyncresponsefragment"]]]],[[],[["next",4],["error",4],["result",4,["next","error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["precommitsref",3]],[[],["precommitref",3]],[[],["precommit",3]],[[],["votesancestriesiter",3]],[[]],[[]],[[]],[[]],[[],[["grandpajustificationref",3],["error",3],["result",4,["grandpajustificationref","error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["precommitref",3]],["bool",15]],[[["precommit",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["grandpajustification",3]],["grandpajustificationref",3]],[[["grandpajustificationref",3]],["grandpajustification",3]],[[]],[[]],[[]],[[["precommit",3]],["precommitref",3]],[[]],[[["precommitref",3]],["precommit",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[["precommitref",3]],["bool",15]],[[["precommit",3]],["bool",15]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["config",3]],[["result",4,["error"]],["error",4]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],[["option",4,["aurapredigest"]],["aurapredigest",3]]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],[["option",4,["babepredigestref"]],["babepredigestref",4]]],[[],[["option",4,["babepredigestref"]],["babepredigestref",4]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["auraconsensuslogref",4]],[[],["auraconsensuslog",4]],[[],["auraauthoritiesiter",3]],[[],["auraauthorityref",3]],[[],["auraauthority",3]],[[],["aurapredigest",3]],[[],["babeconsensuslogref",4]],[[],["babeconsensuslog",4]],[[],["babenextepochref",3]],[[],["babenextepoch",3]],[[],["babeauthoritiesiter",3]],[[],["babeauthorityref",3]],[[],["babeauthority",3]],[[],["babenextconfig",3]],[[],["babeallowedslots",4]],[[],["babepredigestref",4]],[[],["babepredigest",4]],[[],["babeprimarypredigestref",3]],[[],["babeprimarypredigest",3]],[[],["babesecondaryplainpredigest",3]],[[],["babesecondaryvrfpredigestref",3]],[[],["babesecondaryvrfpredigest",3]],[[],["grandpaconsensuslogref",4]],[[],["grandpaconsensuslog",4]],[[],["grandpascheduledchangeref",3]],[[],["grandpascheduledchange",3]],[[],["grandpaauthoritiesiter",3]],[[],["grandpaauthorityref",3]],[[],["grandpaauthority",3]],[[],["headerref",3]],[[],["header",3]],[[],["digestref",3]],[[],["digest",3]],[[],["logsiter",3]],[[],["digestitemref",4]],[[],["digestitem",4]],[[],["changestriesignal",4]],[[],["changestrieconfiguration",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",4],["result",4,["headerref","error"]],["headerref",3]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[["u32",15]],[["error",3],["result",4,["error"]]]],[[],["changestrieconfiguration",3]],null,null,null,null,null,null,[[],["digestref",3]],[[]],[[]],[[]],[[]],[[["auraconsensuslogref",4]],["bool",15]],[[["auraconsensuslog",4]],["bool",15]],[[["auraauthoritiesiter",3]],["bool",15]],[[["auraauthorityref",3]],["bool",15]],[[["auraauthority",3]],["bool",15]],[[["aurapredigest",3]],["bool",15]],[[["babeconsensuslogref",4]],["bool",15]],[[["babeconsensuslog",4]],["bool",15]],[[["babenextepochref",3]],["bool",15]],[[["babenextepoch",3]],["bool",15]],[[["babeauthoritiesiter",3]],["bool",15]],[[["babeauthorityref",3]],["bool",15]],[[["babeauthority",3]],["bool",15]],[[["babenextconfig",3]],["bool",15]],[[["babeallowedslots",4]],["bool",15]],[[["babepredigestref",4]],["bool",15]],[[["babeprimarypredigestref",3]],["bool",15]],[[["babesecondaryplainpredigest",3]],["bool",15]],[[["babesecondaryvrfpredigestref",3]],["bool",15]],[[["grandpaconsensuslogref",4]],["bool",15]],[[["grandpaconsensuslog",4]],["bool",15]],[[["grandpascheduledchangeref",3]],["bool",15]],[[["grandpascheduledchange",3]],["bool",15]],[[["grandpaauthoritiesiter",3]],["bool",15]],[[["grandpaauthorityref",3]],["bool",15]],[[["grandpaauthority",3]],["bool",15]],[[["digestitemref",4]],["bool",15]],[[["changestriesignal",4]],["bool",15]],[[["changestrieconfiguration",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["auraconsensuslog",4]]],[[]],[[["auraconsensuslogref",4]]],[[]],[[]],[[]],[[["auraauthority",3]]],[[]],[[["auraauthorityref",3]]],[[]],[[]],[[["babeconsensuslog",4]]],[[["babeconsensuslogref",4]]],[[]],[[]],[[["babenextepoch",3]]],[[]],[[["babenextepochref",3]]],[[]],[[]],[[["babeauthority",3]]],[[["babeauthorityref",3]]],[[]],[[]],[[]],[[]],[[["babepredigest",4]]],[[]],[[["babepredigestref",4]]],[[["babeprimarypredigest",3]]],[[]],[[["babeprimarypredigestref",3]]],[[]],[[]],[[]],[[["babesecondaryvrfpredigest",3]]],[[["babesecondaryvrfpredigestref",3]]],[[]],[[["grandpaconsensuslog",4]]],[[]],[[["grandpaconsensuslogref",4]]],[[]],[[]],[[["grandpascheduledchange",3]]],[[["grandpascheduledchangeref",3]]],[[]],[[]],[[["grandpaauthority",3]]],[[]],[[]],[[["grandpaauthorityref",3]]],[[]],[[["header",3]],["headerref",3]],[[]],[[]],[[["headerref",3]],["header",3]],[[]],[[["digest",3]],["digestref",3]],[[]],[[["digestref",3]],["digest",3]],[[]],[[]],[[["digestitem",4]],["digestitemref",4]],[[["digestitemref",4]],["digestitem",4]],[[]],[[]],[[]],[[],[["error",4],["result",4,["error"]]]],[[]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["logsiter",3]],[[],["logsiter",3]],[[["auraconsensuslogref",4]],["bool",15]],[[["auraconsensuslog",4]],["bool",15]],[[["auraauthorityref",3]],["bool",15]],[[["auraauthority",3]],["bool",15]],[[["aurapredigest",3]],["bool",15]],[[["babeconsensuslogref",4]],["bool",15]],[[["babeconsensuslog",4]],["bool",15]],[[["babenextepochref",3]],["bool",15]],[[["babenextepoch",3]],["bool",15]],[[["babeauthorityref",3]],["bool",15]],[[["babeauthority",3]],["bool",15]],[[["babenextconfig",3]],["bool",15]],[[["babepredigestref",4]],["bool",15]],[[["babesecondaryplainpredigest",3]],["bool",15]],[[["grandpaconsensuslogref",4]],["bool",15]],[[["grandpaconsensuslog",4]],["bool",15]],[[["grandpascheduledchangeref",3]],["bool",15]],[[["grandpascheduledchange",3]],["bool",15]],[[["grandpaauthorityref",3]],["bool",15]],[[["grandpaauthority",3]],["bool",15]],[[["digestitemref",4]],["bool",15]],[[["changestriesignal",4]],["bool",15]],[[["changestrieconfiguration",3]],["bool",15]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,[[],[["option",4,["seal"]],["seal",4]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,null,null,null,null,null,null,null,[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,null,[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["methodcall",4]],[[],["response",4]],[[],["hexstring",3]],[[],["hashhexstring",3]],[[],["accountid",3]],[[],["block",3]],[[],["extrinsic",3]],[[],["header",3]],[[],["headerdigest",3]],[[],["rpcmethods",3]],[[],["runtimeversion",3]],[[],["runtimedispatchinfo",3]],[[],["dispatchclass",4]],[[],["storagechangeset",3]],[[],["systemhealth",3]],[[],["systempeer",3]],[[],["transactionstatus",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["hexstring",3],["result",4,["hexstring"]]]],[[],[["result",4,["hashhexstring"]],["hashhexstring",3]]],[[],[["result",4,["accountid"]],["accountid",3]]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",4],["header",3],["result",4,["header","error"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,[[]],null,null,null,null,null,null,null,[[["str",15]],[["result",4,["parseerror"]],["parseerror",4]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorresponse",4],["str",15],["option",4,["str"]]],["string",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,[[["str",15]],[["result",4,["call","parseerror"]],["parseerror",3],["call",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["result",4,["runtimedispatchinfo","decodeerror"]],["runtimedispatchinfo",3],["decodeerror",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[],["connectionid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["connectionid",3]],[[]],[[["connectionid",3]]],[[["connectionid",3]],["ordering",4]],[[["connectionid",3]]],[[["connectionid",3]]],[[["connectionid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[],["usize",15]],[[],[["result",4,["socketaddr","error"]],["socketaddr",4],["error",3]]],null,[[["connectionid",3]],["bool",15]],[[["config",3]]],[[]],[[["connectionid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["connectionid",3],["string",3]]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[]],[[["pin",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[]],[[["pin",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15],["connectionid",3],["vec",3,["u8"]],["substreamid",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["connectionid",3]],[[]],[[["substreamid",3],["connectionid",3]]],[[["connectionid",3]],["ordering",4]],[[],["connectionid",3]],[[["connectionid",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],null,null,[[]],[[]],[[["connectionid",3]],["bool",15]],[[["config",3]]],[[]],[[],["noisekey",3]],null,[[]],null,[[["usize",15],["connectionid",3]]],[[["connectionid",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[["context",3],["pin",3]],["poll",4]],null,[[["substreamid",3],["connectionid",3]]],null,[[["readwrite",3],["connectionid",3]]],[[["substreamid",3],["connectionid",3]]],[[["usize",15],["u8",15],["connectionid",3],["vec",3,["u8"]]]],[[]],null,[[["result",4,["vec"]],["connectionid",3],["vec",3,["u8"]],["substreamid",3]]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["result",4,["multiaddr","fromurlerr"]],["multiaddr",3],["fromurlerr",4]]],[[["str",15]],[["result",4,["multiaddr","fromurlerr"]],["multiaddr",3],["fromurlerr",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["multihashgeneric",3]],[[],["multihashgeneric",3]],null,[[]],[[]],[[],["multihashgeneric",3]],[[],["multihashgeneric",3]],[[],["multihashgeneric",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["u8"]],["u8",15],["substreamid",3]]],[[["usize",15],["vec",3,["u8"]],["u8",15]],["substreamid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["substreamid",3]],[[],["config",3]],[[],["configrequestresponse",3]],[[],["configrequestresponsein",4]],[[],["confignotifications",3]],[[]],[[]],[[]],[[]],[[]],[[["substreamid",3]]],[[["substreamid",3]],["ordering",4]],[[["substreamid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["config",3]],["established",3]],null,null,null,[[]],[[]],null,null,[[["substreamid",3]],["bool",15]],[[["substreamid",3]],["usize",15]],null,[[["substreamid",3]],["option",4]],[[["usize",15],["vec",3,["u8"]],["u8",15]],["substreamid",3]],[[["substreamid",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,[[["readwrite",3]],[["result",4,["error"]],["error",4]]],[[["substreamid",3]]],null,[[["result",4,["vec"]],["vec",3,["u8"]],["substreamid",3]],[["respondinrequesterror",4],["result",4,["respondinrequesterror"]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15],["substreamid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,["u8"]],["u8",15],["usize",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inbounderror",4]],[[],["requesterror",4]],[[],["notificationsouterr",4]],[[],["notificationsinclosederr",4]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3],["vec",3,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["usize",15]],[[["string",3],["u8",15],["usize",15],["vec",3,["u8"]]]],[[],["option",4]],[[["readwrite",3]]],[[]],[[["string",3],["usize",15],["option",4,["vec"]],["vec",3,["u8"]]]],[[],["option",4]],[[],[["option",4,["event"]],["event",4]]],[[["vec",3,["u8"]],["result",4,["vec"]]],[["respondinrequesterror",4],["result",4,["respondinrequesterror"]]]],[[["inboundty",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["handshake",4]],[[["healthyhandshake",3]],["handshake",4]],[[["noisekeyrequired",3]],["handshake",4]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["bool",15]]],[[["bool",15]]],[[["readwrite",3]],[["handshake",4],["handshakeerror",4],["result",4,["handshake","handshakeerror"]]]],[[["noisekey",3]],["healthyhandshake",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["config",4]],[[],["error",4]],[[],["messageout",4]],[[]],[[]],[[]],[[["config",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[["config",4]],["bool",15]],[[["config",4]]],[[["config",4]]],[[["readwrite",3]],[["error",4],["result",4,["negotiation","error"]],["negotiation",4]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["readwrite",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]],["usize",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["usize","ciphererror"]],["usize",15],["ciphererror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[]],[[]],[[["noisekey",3],["bool",15]]],[[["noisekey",3],["bool",15]]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[["readwrite",3]],[["handshakeerror",4],["result",4,["noisehandshake","handshakeerror"]],["noisehandshake",4]]],[[],["noisekey",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["substreammut",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["substreamid",3]],[[]],[[],["option",4]],[[["substreamid",3]],["ordering",4]],null,[[["substreamid",3]],["bool",15]],[[],["bool",15]],[[["usize",15]],["extractout",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["nonzerou32",3]],["substreamid",3]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[],["substreamid",3]],[[],[["error",4],["result",4,["incomingdataoutcome","error"]],["incomingdataoutcome",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["bool",15]],null,[[],["bool",15]],[[]],[[]],[[["substreamid",3]],["bool",15]],[[["config",3]],["yamux",3]],[[],["substreammut",3]],[[["substreamid",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["usize",15]],null,[[]],[[["u64",15]]],[[]],[[["substreamid",3]],[["option",4,["substreammut"]],["substreammut",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["protocol",4]],[[],["onion3addr",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["protocol",4]],[[],["onion3addr",3]],[[]],[[]],[[["protocol",4]],["bool",15]],[[["onion3addr",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["ipv6addr",3]],["protocol",4]],[[["ipaddr",4]],["protocol",4]],[[["ipv4addr",3]],["protocol",4]],[[]],[[]],[[],["onion3addr",3]],[[],["onion3addr",3]],[[["error",4]],["error",4]],[[]],[[["decodeownederror",3]],["error",4]],[[["error",3]],["error",4]],[[["fromutf8error",3]],["error",4]],[[["parseinterror",3]],["error",4]],[[["utf8error",3]],["error",4]],[[["error",4]],["error",4]],[[["addrparseerror",3]],["error",4]],[[]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["protocol",4],["result",4,["protocol","error"]]]],[[["str",15]],[["result",4,["multiaddr","fromurlerr"]],["multiaddr",3],["fromurlerr",4]]],[[["str",15]],[["result",4,["multiaddr","fromurlerr"]],["multiaddr",3],["fromurlerr",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],null,[[["protocol",4]],["bool",15]],[[],["option",4]],[[],["u16",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["multihashrefgeneric",3]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multihashgeneric",3]],[[],["multihashrefgeneric",3]],[[],["encodeerror",4]],[[],["decodeerror",4]],[[],["decodeownederror",3]],[[],["code",4]],[[],["identity",3]],[[],["sha1",3]],[[],["sha2_256",3]],[[],["sha2_512",3]],[[],["sha3_224",3]],[[],["sha3_256",3]],[[],["sha3_384",3]],[[],["sha3_512",3]],[[],["keccak224",3]],[[],["keccak256",3]],[[],["keccak384",3]],[[],["keccak512",3]],[[],["blake2b256",3]],[[],["blake2b512",3]],[[],["blake2s128",3]],[[],["blake2s256",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["multihashgeneric",3]],["ordering",4]],[[["multihashrefgeneric",3]],["ordering",4]],[[["code",4]],["ordering",4]],[[]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],[[],["code",4]],null,[[],["identity",3]],[[],["sha1",3]],[[],["sha2_256",3]],[[],["sha2_512",3]],[[],["sha3_224",3]],[[],["sha3_256",3]],[[],["sha3_384",3]],[[],["sha3_512",3]],[[],["keccak224",3]],[[],["keccak256",3]],[[],["keccak384",3]],[[],["keccak512",3]],[[],["blake2b256",3]],[[],["blake2b512",3]],[[],["blake2s128",3]],[[],["blake2s256",3]],[[]],[[]],[[],["multihashgeneric",3]],[[],["multihashgeneric",3]],[[]],[[]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[]],[[]],[[["multihashrefgeneric",3]],["bool",15]],[[["multihashgeneric",3]],["bool",15]],[[["multihashrefgeneric",3]],["bool",15]],[[["multihashgeneric",3]],["bool",15]],[[["encodeerror",4]],["bool",15]],[[["decodeerror",4]],["bool",15]],[[["decodeownederror",3]],["bool",15]],[[["code",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15],["vec",3,["u8","global"]],["global",3]],[["decodeownederror",3],["result",4,["multihashgeneric","decodeownederror"]],["multihashgeneric",3]]],[[],[["multihashrefgeneric",3],["decodeerror",4],["result",4,["multihashrefgeneric","decodeerror"]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[["multihashrefgeneric",3]],["bool",15]],[[["decodeownederror",3]],["bool",15]],[[["multihashgeneric",3]],[["option",4,["ordering"]],["ordering",4]]],[[["multihashrefgeneric",3]],[["option",4,["ordering"]],["ordering",4]]],[[["code",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multihashgeneric",3]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],["multihashgeneric",3]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[],[["code",4],["multihashgeneric",3,["code"]]]],[[]],[[],["multihashgeneric",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[],["result",4]],[[["u8",15],["vec",3,["u8","global"]],["global",3]],[["result",4,["multihashgeneric"]],["multihashgeneric",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],[["result",4,["code"]],["code",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multihashgeneric",3]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["publickey",4]],[[],["peerid",3]],[[]],[[]],[[],["ordering",4]],[[]],[[]],[[["publickey",4]],["bool",15]],[[["peerid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["publickey",4]],["peerid",3]],[[["publickey",4]],["peerid",3]],[[]],[[]],[[]],[[]],[[]],[[["error",4]],["bs58decodeerror",3]],[[["vec",3,["u8"]],["u8",15]],[["result",4,["peerid"]],["peerid",3]]],[[["multihash",6]],[["result",4,["peerid"]],["peerid",3]]],[[],[["result",4,["publickey","fromprotobufencodingerror"]],["publickey",4],["fromprotobufencodingerror",4]]],[[["publickey",4]],["peerid",3]],[[["str",15]],["result",4]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["peerid",3]],[[["publickey",4]],[["bool",15],["option",4,["bool"]]]],[[["publickey",4]],["bool",15]],[[],[["ordering",4],["option",4,["ordering"]]]],[[],["string",3]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["multihash",6]],["result",4]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["peerid",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["desiredinnotificationid",3]],[[],["desiredoutnotificationid",3]],[[],["requestid",3]],[[],["desiredstate",4]],[[],["requesterror",4]],[[]],[[]],[[]],[[]],[[]],[[["desiredinnotificationid",3]],["ordering",4]],[[["desiredoutnotificationid",3]],["ordering",4]],[[["requestid",3]],["ordering",4]],null,[[["desiredinnotificationid",3]],["bool",15]],[[["desiredoutnotificationid",3]],["bool",15]],[[["requestid",3]],["bool",15]],[[["desiredstate",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,[[]],[[]],[[]],[[["vec",3,["u8"]],["desiredinnotificationid",3],["u8",15]]],[[["desiredinnotificationid",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["desiredinnotificationid",3]],["bool",15]],[[["desiredoutnotificationid",3]],["bool",15]],[[["requestid",3]],["bool",15]],[[["config",3]]],[[]],[[],["noisekey",3]],null,[[]],null,[[["usize",15]]],[[["vec",3,["u8"]],["u8",15],["desiredoutnotificationid",3]]],[[["desiredinnotificationid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["desiredoutnotificationid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["requestid",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],null,null,[[["peerid",3],["usize",15]]],null,[[["readwrite",3],["connectionid",3]]],[[]],[[["usize",15],["u8",15],["peerid",3],["vec",3,["u8"]]]],[[]],null,[[["result",4,["vec"]],["vec",3,["u8"]],["requestid",3]]],[[["peerid",3],["bool",15]]],[[["peerid",3],["usize",15],["desiredstate",4]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["incomingbytes",3]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["bool",15]],[[],[["u8",15],["option",4,["u8"]]]],null,null,[[],["usize",15]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[]],[[["boxfuture",6]]],[[["vecdeque",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["metadataref",3],["result",4,["metadataref","decodeerror"]],["decodeerror",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["option",4]],["query",4]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["hostvmprototype",3]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["hostvmprototype",3]],["query",4]],[[],[["result",4,["removemetadatalengthprefixerror"]],["removemetadatalengthprefixerror",3]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["replacements",3]],[[]],[[],["metadataref",3]],[[],["modulemetadataref",3]],[[],["storagemetadataref",3]],[[],["storageentrymetadataref",3]],[[],["storageentrymodifier",4]],[[],["storageentrytyperef",4]],[[],["storagehasher",4]],[[],["functionmetadataref",3]],[[],["functionargumentmetadataref",3]],[[],["eventmetadataref",3]],[[],["moduleconstantmetadataref",3]],[[],["errormetadataref",3]],[[],["extrinsicmetadataref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[["metadataref",3]],["bool",15]],[[["modulemetadataref",3]],["bool",15]],[[["storagemetadataref",3]],["bool",15]],[[["storageentrymetadataref",3]],["bool",15]],[[["storageentrymodifier",4]],["bool",15]],[[["storageentrytyperef",4]],["bool",15]],[[["storagehasher",4]],["bool",15]],[[["functionmetadataref",3]],["bool",15]],[[["functionargumentmetadataref",3]],["bool",15]],[[["eventmetadataref",3]],["bool",15]],[[["moduleconstantmetadataref",3]],["bool",15]],[[["errormetadataref",3]],["bool",15]],[[["extrinsicmetadataref",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],null,null,null,null,null,null,null,null,null,[[["metadataref",3]],["bool",15]],[[["modulemetadataref",3]],["bool",15]],[[["storagemetadataref",3]],["bool",15]],[[["storageentrymetadataref",3]],["bool",15]],[[["storageentrytyperef",4]],["bool",15]],[[["functionmetadataref",3]],["bool",15]],[[["functionargumentmetadataref",3]],["bool",15]],[[["eventmetadataref",3]],["bool",15]],[[["moduleconstantmetadataref",3]],["bool",15]],[[["errormetadataref",3]],["bool",15]],[[["extrinsicmetadataref",3]],["bool",15]],[[],["option",4]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],null,null,[[]],null,[[],["streamsafe",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["metadataref",3]],[["result",4,["eventsstoragekeyerror"]],["eventsstoragekeyerror",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[],["multiaddr",3]],[[]],[[["multiaddr",3]],["ordering",4]],[[],[["multiaddr",3],["result",4,["multiaddr"]]]],[[],["multiaddr",3]],[[]],[[]],[[["multiaddr",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["ipv6addr",3]],["multiaddr",3]],[[["ipaddr",4]],["multiaddr",3]],[[["protocol",4]],["multiaddr",3]],[[["ipv4addr",3]],["multiaddr",3]],[[],["multiaddr",3]],[[["str",15]],[["multiaddr",3],["error",4],["result",4,["multiaddr","error"]]]],[[],["u64",15]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["iter",3]],null,[[],["usize",15]],[[["multiaddr",3]],["bool",15]],[[["multiaddr",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["protocol"]],["protocol",4]]],null,[[["protocol",4]]],[[["usize",15]],[["multiaddr",3],["option",4,["multiaddr"]]]],[[],["result",4]],null,[[]],[[],["string",3]],[[],[["u8",15],["vec",3,["u8","global"]],["global",3]]],[[["str",15]],[["multiaddr",3],["error",4],["result",4,["multiaddr","error"]]]],[[],["result",4]],[[["u8",15],["vec",3,["u8","global"]],["global",3]],[["multiaddr",3],["error",4],["result",4,["multiaddr","error"]]]],[[["string",3]],[["multiaddr",3],["error",4],["result",4,["multiaddr","error"]]]],[[],["result",4]],[[],["typeid",3]],[[]],[[["protocol",4]],["multiaddr",3]],[[["usize",15]],["multiaddr",3]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["result",4,["vec","decodefindnoderesponseerror"]],["vec",3],["decodefindnoderesponseerror",4]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blocksrequestconfig",3]]],[[["callproofrequestconfig",3]]],[[["identifyresponse",3]]],[[["storageproofrequestconfig",3]]],[[],["blockannounceshandshakeref",3]],[[],["role",4]],[[],["blocksrequestconfig",3]],[[],["blocksrequestdirection",4]],[[],["blocksrequestfields",3]],[[],["blocksrequestconfigstart",4]],[[],["blockdata",3]],[[],["callproofrequestconfig",3]],[[],["decodecallproofresponseerror",4]],[[],["grandpanotificationref",4]],[[],["votemessageref",3]],[[],["messageref",4]],[[],["unsignedprevoteref",3]],[[],["primaryproposeref",3]],[[],["neighborpacket",3]],[[],["catchuprequest",3]],[[],["catchupref",3]],[[],["prevoteref",3]],[[],["identifyresponse",3]],[[],["storageproofrequestconfig",3]],[[],["protobufdecodeerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["decodeblockannounceerror",3],["result",4,["blockannounceref","decodeblockannounceerror"]],["blockannounceref",3]]],[[],[["blockannounceshandshakeref",3],["blockannounceshandshakedecodeerror",3],["result",4,["blockannounceshandshakeref","blockannounceshandshakedecodeerror"]]]],[[],[["vec",3,["blockdata"]],["decodeblockresponseerror",4],["result",4,["vec","decodeblockresponseerror"]]]],[[],[["result",4,["vec","decodecallproofresponseerror"]],["vec",3,["vec"]],["decodecallproofresponseerror",4]]],[[],[["decodegrandpanotificationerror",3],["grandpanotificationref",4],["result",4,["grandpanotificationref","decodegrandpanotificationerror"]]]],[[],[["grandpawarpsyncresponse",3],["decodegrandpawarpsyncresponseerror",3],["result",4,["grandpawarpsyncresponse","decodegrandpawarpsyncresponseerror"]]]],[[],[["vec",3,["vec"]],["decodestorageproofresponseerror",4],["result",4,["vec","decodestorageproofresponseerror"]]]],null,null,null,[[["blockannounceref",3]]],[[["blockannounceshandshakeref",3]]],[[["blockannounceshandshakeref",3]],["bool",15]],[[["role",4]],["bool",15]],[[["blocksrequestconfig",3]],["bool",15]],[[["blocksrequestdirection",4]],["bool",15]],[[["blocksrequestfields",3]],["bool",15]],[[["blocksrequestconfigstart",4]],["bool",15]],[[["blockdata",3]],["bool",15]],[[["callproofrequestconfig",3]],["bool",15]],[[["grandpanotificationref",4]],["bool",15]],[[["votemessageref",3]],["bool",15]],[[["messageref",4]],["bool",15]],[[["unsignedprevoteref",3]],["bool",15]],[[["primaryproposeref",3]],["bool",15]],[[["neighborpacket",3]],["bool",15]],[[["catchuprequest",3]],["bool",15]],[[["catchupref",3]],["bool",15]],[[["prevoteref",3]],["bool",15]],[[["identifyresponse",3]],["bool",15]],[[["storageproofrequestconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,null,null,null,null,null,[[["blockannounceshandshakeref",3]],["bool",15]],[[["blocksrequestconfig",3]],["bool",15]],[[["blocksrequestfields",3]],["bool",15]],[[["blocksrequestconfigstart",4]],["bool",15]],[[["blockdata",3]],["bool",15]],[[["callproofrequestconfig",3]],["bool",15]],[[["grandpanotificationref",4]],["bool",15]],[[["votemessageref",3]],["bool",15]],[[["messageref",4]],["bool",15]],[[["unsignedprevoteref",3]],["bool",15]],[[["primaryproposeref",3]],["bool",15]],[[["neighborpacket",3]],["bool",15]],[[["catchuprequest",3]],["bool",15]],[[["catchupref",3]],["bool",15]],[[["prevoteref",3]],["bool",15]],[[["identifyresponse",3]],["bool",15]],[[["storageproofrequestconfig",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["multiaddr",3]]],[[["usize",15],["peerid",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],null,null,[[["usize",15],["blocksrequestconfig",3],["peerid",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["callproofrequestconfig",3],["peerid",3]]],null,[[],["grandpastate",3]],[[],["pendingid",3]],[[],["notificationsouterr",4]],[[],["encodedblockannounce",3]],[[],["encodedgrandpacommitmessage",3]],[[],["callproofrequesterror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pendingid",3]],["ordering",4]],null,null,[[],["blockannounceshandshakeref",3]],[[],["blockannounceref",3]],[[],["commitmessageref",3]],[[["pendingid",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],null,[[["usize",15],["peerid",3]]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[["usize",15]]],[[["peerid",3],["usize",15]]],null,null,[[["pendingid",3]],["bool",15]],[[["config",3]]],[[]],[[]],null,[[],["usize",15]],[[]],[[["usize",15]]],null,[[["pendingid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],null,[[]],null,[[["pendingid",3]]],[[["pendingid",3]]],null,null,[[["readwrite",3],["connectionid",3]]],[[["str",15]]],null,null,null,[[["usize",15],["u64",15]]],[[["usize",15],["grandpastate",3]]],[[["usize",15],["storageproofrequestconfig",3],["peerid",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["requestdetail",4],["sourceid",3]],["requestid",3]],[[["u64",15]],["sourceid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformationref",3]],[[]],[[],["headerref",3]],[[],["u64",15]],[[["u8",15],["bool",15],["vec",3,["u8"]],["sourceid",3]],["blockannounceoutcome",4]],null,[[["result",4],["requestid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sourceid",3]],[[],["requestid",3]],[[],["requestdetail",4]],[[]],[[]],[[]],[[["sourceid",3]],["ordering",4]],[[["requestid",3]],["ordering",4]],[[]],null,[[["sourceid",3]],["bool",15]],[[["requestid",3]],["bool",15]],[[["requestdetail",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["headerref",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[],[["commitverifyerror",4],["result",4,["commitverifyerror"]]]],[[["grandpawarpsyncresponse",3],["option",4,["grandpawarpsyncresponse"]],["requestid",3]]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["option",4]],["blockverification",4]],[[],["blockverification",4]],[[["option",4]],["blockverification",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["u64",15]]],null,null,[[["sourceid",3]],["bool",15]],[[["requestid",3]],["bool",15]],[[["requestdetail",4]],["bool",15]],[[["config",3]]],[[]],[[["nonzerou64",3]]],[[]],[[["sourceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["requestid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["duration",3]],["headerverifyoutcome",4]],[[]],[[]],[[],["processone",4]],[[]],[[["sourceid",3]]],null,null,null,[[["sourceid",3]]],[[["u64",15],["sourceid",3]],["bool",15]],[[["sourceid",3]],["usize",15]],[[["sourceid",3]]],[[["sourceid",3]]],[[]],null,[[["duration",3]],["blockverification",4]],[[["result",4],["requestid",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nonzerou64",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["requestparams",3],["sourceid",3]],["requestid",3]],[[["u64",15]],["sourceid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformationref",3]],[[]],[[],["headerref",3]],[[],["u64",15]],[[["u8",15],["bool",15],["vec",3,["u8"]],["sourceid",3]],["blockannounceoutcome",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["allforkssync",3]],null,[[],["requestid",3]],[[],["requestparams",3]],[[]],[[]],[[["requestid",3]],["ordering",4]],[[["requestparams",3]],["ordering",4]],[[]],[[["requestid",3]],["bool",15]],[[["requestparams",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["headerref",3]],[[["requestid",3],["result",4]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[],[["commitverifyerror",4],["result",4,["commitverifyerror"]]]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[["u64",15]]],null,null,[[["requestid",3]],["bool",15]],[[["requestparams",3]],["bool",15]],[[["config",3]]],[[]],null,[[]],[[["requestid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["requestparams",3]],[["option",4,["ordering"]],["ordering",4]]],[[["duration",3]],["headerverifyoutcome",4]],[[],["processone",4]],[[["sourceid",3]]],null,null,[[["sourceid",3]]],[[["u64",15],["sourceid",3]],["bool",15]],[[["sourceid",3]],["usize",15]],[[["sourceid",3]]],[[["sourceid",3]]],null,[[]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["sourceid",3]]],[[["u64",15]],["sourceid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["sourceid",3]]],[[]],[[]],[[]],[[]],[[],["sourceid",3]],[[]],[[["sourceid",3]],["ordering",4]],[[["sourceid",3]],["bool",15]],[[["sourceid",3]],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[]],[[["u64",15]]],[[],["usize",15]],[[["sourceid",3]],["bool",15]],[[["usize",15],["u64",15]]],[[],["usize",15]],[[["sourceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["sourceid",3]]],[[["u64",15]]],[[["u64",15],["sourceid",3]]],[[["u64",15]]],[[["u64",15],["sourceid",3]],["bool",15]],[[["u64",15],["sourceid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["sourceid",3]]],[[["sourceid",3]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[],["runtimeid",3]],[[]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["runtimeerror",4]],[[],["downloadid",3]],[[],["runtimeid",3]],[[],["outputupdate",4]],[[],["outputupdateblock",3]],[[],["outputupdateblockbest",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["downloadid",3]],["ordering",4]],[[["runtimeid",3]],["ordering",4]],[[]],[[["downloadid",3]],["bool",15]],[[["runtimeid",3]],["bool",15]],[[["outputupdate",4]],["bool",15]],[[["outputupdateblock",3]],["bool",15]],[[["outputupdateblockbest",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],["runtimeid",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[],["u64",15]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],null,[[]],[[["u8",15],["bool",15],["vec",3,["u8"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["downloadid",3]],["bool",15]],[[["runtimeid",3]],["bool",15]],[[["outputupdate",4]],["bool",15]],[[["outputupdateblock",3]],["bool",15]],[[],["nextnecessarydownload",4]],[[]],null,[[["downloadid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["runtimeid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["downloadid",3]]],[[["downloadid",3],["runtimeid",3]]],[[["downloadid",3]],["runtimeid",3]],[[["runtimeid",3]]],[[["runtimeid",3]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],[["option",4,["outputupdate"]],["outputupdate",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["sourceid",3]],[[],["sourceid",3]],[[],["sourceid",3]],[[],["sourceid",3]],[[],["sourceid",3]],[[],["warpsyncrequest",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformationref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["sourceid",3]],[[]],[[["sourceid",3]],["ordering",4]],[[]],[[["sourceid",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["inprogressgrandpawarpsync",4]],["grandpawarpsync",4]],[[]],[[["success",3]],["grandpawarpsync",4]],[[["nextkey",3]],["inprogressgrandpawarpsync",4]],[[["waitingforsources",3]],["inprogressgrandpawarpsync",4]],[[["warpsyncrequest",3]],["inprogressgrandpawarpsync",4]],[[["storageget",3]],["inprogressgrandpawarpsync",4]],[[["verifier",3]],["inprogressgrandpawarpsync",4]],[[]],[[["virtualmachineparamsget",3]],["inprogressgrandpawarpsync",4]],[[],["u64",15]],[[["config",3]],["inprogressgrandpawarpsync",4]],[[["grandpawarpsyncresponse",3],["option",4,["grandpawarpsyncresponse"]]],["inprogressgrandpawarpsync",4]],[[]],[[],["grandpawarpsync",4]],[[],["grandpawarpsync",4]],[[["option",4]]],[[["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["sourceid",3]],["bool",15]],[[]],[[["sourceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["sourceid",3]]],[[["sourceid",3]]],[[["sourceid",3]]],[[["sourceid",3]]],null,[[["option",4],["exechint",4]]],[[["sourceid",3]]],[[["sourceid",3]]],[[]],null,null,[[]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["headerref",3]],[[],["headerref",3]],[[],["headerref",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["sourceid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["validchaininformationref",3]],[[]],[[],["headerref",3]],[[],["u64",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["requestid",3]],[[],["sourceid",3]],[[]],[[]],[[["requestid",3]],["ordering",4]],[[["sourceid",3]],["ordering",4]],[[]],[[],["disassemble",3]],null,[[]],[[["requestid",3]],["bool",15]],[[["sourceid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["headerref",3]],null,[[["requestid",3],["requestfail",4],["result",4,["requestfail"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],null,[[],["u64",15]],null,[[["option",4]],["blockverification",4]],[[],["blockverification",4]],[[["option",4]],["blockverification",4]],[[["requestdetail",3]],["requestid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["bool",15]],null,[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[["requestid",3]],["bool",15]],[[["sourceid",3]],["bool",15]],[[["config",3]]],[[],["option",4]],[[]],null,[[]],null,[[["requestid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["sourceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],["processone",4]],[[["u64",15],["sourceid",3]]],[[["sourceid",3]]],null,null,null,null,[[]],[[["sourceid",3]],["u64",15]],null,[[["sourceid",3]],["usize",15]],[[["sourceid",3]]],[[["sourceid",3]]],[[]],null,null,[[["duration",3]],["blockverification",4]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["occupiedcoreassumption",4]],[[]],[[],[["option",4,["persistedvalidationdataref"]],["result",4,["option","error"]],["error",3]]],[[["occupiedcoreassumption",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,[[["occupiedcoreassumption",4],["u32",15]]],null,null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[["vec",3,["u8"]],["u8",15]],["transactionid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[],["option",4]],[[],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactionid",3]],[[],["setbestblock",3]],[[]],[[]],[[["transactionid",3]],["ordering",4]],[[["transactionid",3]],["option",4]],[[["transactionid",3]],["bool",15]],[[],["bool",15]],null,[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["bool",15]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["transactionid",3]],["bool",15]],[[["transactionid",3]],["bool",15]],[[]],[[["transactionid",3]],["bool",15]],[[["config",3]]],[[],["usize",15]],[[],["usize",15]],[[["transactionid",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["transactionid",3]]],null,[[],["setbestblock",3]],[[]],[[]],[[["validtransaction",3],["result",4,["validtransaction","transactionvalidityerror"]],["transactionvalidityerror",4],["transactionid",3]]],[[]],[[]],[[["transactionid",3]],["option",4]],[[["transactionid",3]],["option",4]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["vec",3,["u8"]],["u8",15]],["transactionid",3]],[[],["appendblock",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["u64",15]],[[],["appendblocktransaction",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["transactionid",3]],[[]],[[["transactionid",3]],["ordering",4]],[[["transactionid",3]],["option",4]],[[["transactionid",3]],["bool",15]],[[],["bool",15]],null,[[]],[[],["pool",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[["transactionid",3]],[["u64",15],["option",4,["u64"]]]],[[]],[[],["transactionid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["bool",15]],[[]],[[]],[[],["usize",15]],[[["transactionid",3]],["bool",15]],[[["config",3]]],[[["transactionid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["transactionid",3]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15],["validtransaction",3],["result",4,["validtransaction","transactionvalidityerror"]],["transactionvalidityerror",4],["transactionid",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["transactionid",3]],["option",4]],[[["transactionid",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactionsource",4]],[[],["validtransaction",3]],[[],["invalidtransaction",4]],[[],["unknowntransaction",4]],[[],["transactionvalidityerror",4]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["result","decodeerror"]],["result",4,["validtransaction","transactionvalidityerror"]],["decodeerror",3]]],[[["transactionsource",4]],["bool",15]],[[["validtransaction",3]],["bool",15]],[[["invalidtransaction",4]],["bool",15]],[[["unknowntransaction",4]],["bool",15]],[[["transactionvalidityerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]],["query",4]],[[],["query",4]],[[["option",4]],["query",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[],["hostvmprototype",3]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],null,[[["validtransaction",3]],["bool",15]],[[["invalidtransaction",4]],["bool",15]],[[["unknowntransaction",4]],["bool",15]],[[["transactionvalidityerror",4]],["bool",15]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["config",3]],["query",4]],[[["transactionsource",4]]],[[["transactionsource",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bytestonibbles",3]],null,[[]],[[],["nibble",3]],[[],["bytestonibbles",3]],[[]],[[]],[[["nibble",3]],["ordering",4]],[[]],[[]],[[["nibble",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["bool",15]],[[["nibble",3]],["bool",15]],[[],["trie",3]],[[],[["option",4,["nibble"]],["nibble",3]]],[[["iterator",8]]],null,[[["nibble",3]],[["option",4,["ordering"]],["ordering",4]]],null,null,null,[[],[["vec",3,["u8"]],["option",4,["vec"]]]],[[["option",4,["calculationcache"]],["calculationcache",3]]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["rootmerklevaluecalculation",4]],[[["option",4]],["rootmerklevaluecalculation",4]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[["option",4,["calculationcache"]],["calculationcache",3]],["rootmerklevaluecalculation",4]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["config",3]],["output",3]],null,[[],["output",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["output",3]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[["config",3]],["prefixscan",3]],[[]],[[],[["resumeoutcome",4],["result",4,["resumeoutcome"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u16",15]],[[],["partialkey",3]],[[],["error",4]],[[]],[[]],[[],[["decoded",3],["result",4,["decoded","error"]],["error",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],[["option",4,["nibble"]],["nibble",3]]],null,[[]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["children",4]],[[],["error",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],null,null,null,null,null,[[]],[[]],[[],["string",3]],[[["trienodeinfoconfig",3]],[["trienodeinfo",3],["error",4],["result",4,["trienodeinfo","error"]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["verifyproofconfig",3]],[["result",4,["option","error"]],["option",4],["error",4]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["nibble",3]],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[["nibble",3]],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[["nibble",3]],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[["nibble",3]],["option",4]],[[["nibble",3]],["option",4]],[[["nibble",3]],["option",4]],[[],["nodeindex",3]],[[]],[[]],[[["nodeindex",3]],["bool",15]],[[],["bool",15]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["bool",15]],[[]],[[],["storagenodeaccess",3]],[[],["storagenodeaccess",3]],[[],["storagenodeaccess",3]],[[],["storagenodeaccess",3]],[[],["prepareinsert",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["nibble",3]],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[["nibble",3]],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[["nibble",3]],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["result",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["option",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["option",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["option",4,["nodeaccess"]]]],[[],[["nodeaccess",4],["option",4,["nodeaccess"]]]],[[],[["storagenodeaccess",3],["option",4,["storagenodeaccess"]]]],[[],[["vacant",3],["option",4,["vacant"]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[["nodeindex",3]],["bool",15]],[[]],[[],["entry",4]],[[["nodeindex",3]],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[["nodeindex",3]],["option",4]],[[],["nodeindex",3]],[[],["nodeindex",3]],[[],["nodeindex",3]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[]],[[]],[[]],[[],["remove",4]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[],[["option",4,["nodeaccess"]],["nodeaccess",4]]],[[]],[[["triestructure",3]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["verifyconfig",3]],[["result",4,["verifysuccess","verifyerror"]],["verifysuccess",3],["verifyerror",4]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,null,null,null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["verifyconfig",3]],[["verifyerror",4],["result",4,["verifysuccess","verifyerror"]],["verifysuccess",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["verify",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4]],["verify",4]],[[],["verify",4]],[[["option",4]],["verify",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],null,null,null,null,null,null,[[]],null,[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["config",3]],["verify",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["box",3,["global"]],["global",3]],[["box",3,["any","global"]],["any",8],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["config",3]],[["error",4],["result",4,["success","error"]],["success",4]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null],"p":[[6,"Multihash"],[3,"Config"],[3,"SlotClaim"],[4,"Builder"],[4,"BuilderAuthoring"],[4,"ConfigConsensus"],[4,"Error"],[3,"ApplyExtrinsic"],[3,"Config"],[3,"AuthoringStart"],[3,"AuthoringStartConfig"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[3,"Seal"],[3,"WaitSlot"],[13,"ApplyExtrinsicResult"],[13,"Aura"],[4,"InvalidTransaction"],[4,"BlockBuild"],[4,"ConfigPreRuntime"],[4,"InherentDataConsensus"],[4,"Error"],[4,"DispatchError"],[4,"UnknownTransaction"],[4,"TransactionValidityError"],[3,"ApplyExtrinsic"],[3,"Config"],[3,"Success"],[3,"InherentExtrinsics"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[3,"InherentData"],[13,"ApplyExtrinsicResult"],[13,"Module"],[13,"InherentExtrinsicDispatchError"],[13,"InherentExtrinsicTransactionValidityError"],[13,"Aura"],[13,"Babe"],[4,"OutputUpdate"],[4,"NextNecessaryAsyncOp"],[3,"AsyncTree"],[3,"AsyncOpId"],[3,"AsyncOpParams"],[3,"OutputUpdateBlock"],[13,"NotReady"],[13,"Finalized"],[4,"JustificationVerifyError"],[4,"BodyVerifyStep1"],[4,"HeaderVerifyError"],[4,"FinalityVerifyError"],[4,"BodyVerifyError"],[4,"HeaderVerifySuccess"],[4,"BodyVerifyStep2"],[4,"CommitVerifyError"],[4,"SetFinalizedError"],[3,"BodyVerifyRuntimeRequired"],[3,"BodyInsert"],[3,"FinalityApply"],[3,"SetFinalizedBlockIter"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"RuntimeCompilation"],[3,"HeaderInsert"],[3,"NonFinalizedTree"],[3,"BlockAccess"],[3,"Config"],[13,"BadParent"],[13,"Error"],[13,"Finished"],[13,"UnknownTargetBlock"],[13,"TooFarAhead"],[13,"BadParent"],[13,"Insert"],[4,"ChainInformationConsensus"],[4,"ChainInformationConsensusRef"],[4,"FromGenesisStorageError"],[4,"ValidityError"],[4,"ChainInformationFinality"],[4,"ChainInformationFinalityRef"],[3,"BabeEpochInformation"],[3,"BabeEpochInformationRef"],[3,"ValidChainInformation"],[3,"ValidChainInformationRef"],[3,"ChainInformation"],[3,"ChainInformationRef"],[13,"Aura"],[13,"Babe"],[13,"Aura"],[13,"Babe"],[13,"Grandpa"],[13,"Grandpa"],[4,"FromVmPrototypeError"],[4,"FromGenesisStorageError"],[3,"AuraGenesisConfiguration"],[4,"FromGenesisStorageError"],[4,"FromVmPrototypeError"],[3,"BabeGenesisConfiguration"],[4,"BabeEpochToFetch"],[4,"Error"],[4,"Query"],[3,"Config"],[3,"StorageGet"],[3,"NextKey"],[3,"StorageRoot"],[13,"Finished"],[3,"ForkTree"],[3,"PruneAncestorsIter"],[3,"PrunedNode"],[3,"NodeIndex"],[3,"LightSyncState"],[3,"ChainSpec"],[3,"ParseError"],[3,"CorruptedError"],[4,"InsertError"],[4,"SetFinalizedError"],[4,"FinalizedAccessError"],[4,"CorruptedError"],[4,"AccessError"],[4,"ConfigTy"],[4,"DatabaseOpen"],[3,"DatabaseEmpty"],[3,"SqliteFullDatabase"],[3,"Config"],[3,"InternalError"],[4,"CoreVersionError"],[4,"InvalidHeapPagesError"],[3,"CoreVersionRef"],[3,"CoreVersion"],[3,"CoreVersionApisRefIter"],[3,"CoreVersionApi"],[4,"NewErr"],[4,"Error"],[4,"HostVm"],[4,"StartErr"],[4,"ModuleFormatError"],[3,"HostVmPrototype"],[3,"ReadyToRun"],[3,"Finished"],[3,"ExternalStorageGet"],[3,"ExternalStorageSet"],[3,"ExternalStorageAppend"],[3,"ExternalStorageClearPrefix"],[3,"ExternalStorageRoot"],[3,"ExternalStorageChangesRoot"],[3,"ExternalStorageNextKey"],[3,"CallRuntimeVersion"],[3,"ExternalOffchainStorageSet"],[3,"LogEmit"],[3,"StartStorageTransaction"],[3,"EndStorageTransaction"],[13,"BadReturnValue"],[13,"ParamsCountMismatch"],[13,"WrongParamTy"],[13,"Utf8Error"],[13,"ParamOutOfRange"],[13,"OutOfMemory"],[13,"ReturnedPtrOutOfRange"],[13,"FreeError"],[13,"Error"],[13,"EndStorageTransaction"],[4,"RuntimeHostVm"],[4,"ErrorDetail"],[3,"Config"],[3,"SuccessVirtualMachine"],[3,"StorageGet"],[3,"NextKey"],[3,"StorageRoot"],[3,"Success"],[3,"Error"],[13,"WasmVm"],[4,"RuntimeHostVm"],[4,"ErrorDetail"],[3,"Config"],[3,"SuccessVirtualMachine"],[3,"StorageGet"],[3,"PrefixKeys"],[3,"NextKey"],[3,"Success"],[3,"Error"],[13,"WasmVm"],[4,"RunErr"],[4,"ExecHint"],[4,"NewErr"],[4,"ExecOutcome"],[4,"StartErr"],[4,"WasmValue"],[4,"ValueType"],[4,"GlobalValueErr"],[3,"VirtualMachinePrototype"],[3,"VirtualMachine"],[3,"Module"],[3,"HeapPages"],[3,"Signature"],[3,"UnsupportedTypeError"],[3,"Trap"],[3,"ModuleError"],[3,"OutOfBoundsError"],[13,"Interrupted"],[13,"Finished"],[13,"BadValueTy"],[4,"FromGenesisStorageError"],[4,"FromVmPrototypeError"],[3,"GrandpaGenesisConfiguration"],[3,"Error"],[3,"CommitMessageRef"],[3,"CompactCommitRef"],[3,"UnsignedPrecommitRef"],[4,"Error"],[4,"InProgress"],[3,"IsAuthority"],[3,"IsParent"],[3,"Config"],[4,"Error"],[4,"Next"],[3,"Verifier"],[13,"TargetHashMismatch"],[13,"Success"],[3,"PrecommitsRefIter"],[3,"GrandpaJustificationRef"],[3,"GrandpaJustification"],[3,"PrecommitsRef"],[3,"PrecommitRef"],[3,"Precommit"],[3,"VotesAncestriesIter"],[3,"Error"],[4,"Error"],[3,"Config"],[4,"Seal"],[4,"DigestItemRef"],[4,"DigestItem"],[4,"AuraConsensusLogRef"],[4,"AuraConsensusLog"],[4,"Error"],[4,"GrandpaConsensusLogRef"],[4,"GrandpaConsensusLog"],[4,"ChangesTrieSignal"],[4,"BabeConsensusLogRef"],[4,"BabeConsensusLog"],[4,"BabePreDigestRef"],[4,"BabePreDigest"],[4,"BabeAllowedSlots"],[3,"BabeNextConfig"],[3,"AuraAuthoritiesIter"],[3,"AuraAuthorityRef"],[3,"AuraAuthority"],[3,"AuraPreDigest"],[3,"BabeNextEpochRef"],[3,"BabeNextEpoch"],[3,"BabeAuthoritiesIter"],[3,"BabeAuthorityRef"],[3,"BabeAuthority"],[3,"BabePrimaryPreDigestRef"],[3,"BabePrimaryPreDigest"],[3,"BabeSecondaryPlainPreDigest"],[3,"BabeSecondaryVRFPreDigestRef"],[3,"BabeSecondaryVRFPreDigest"],[3,"GrandpaScheduledChangeRef"],[3,"GrandpaScheduledChange"],[3,"GrandpaAuthoritiesIter"],[3,"GrandpaAuthorityRef"],[3,"GrandpaAuthority"],[3,"HeaderRef"],[3,"Header"],[3,"DigestRef"],[3,"Digest"],[3,"LogsIter"],[3,"ChangesTrieConfiguration"],[13,"Beefy"],[13,"PolkadotParachain"],[13,"Beefy"],[13,"PolkadotParachain"],[13,"ForcedChange"],[13,"ForcedChange"],[3,"HashDisplay"],[3,"InformantLine"],[3,"RelayChain"],[3,"HexString"],[3,"HashHexString"],[3,"AccountId"],[3,"Extrinsic"],[4,"TransactionStatus"],[4,"MethodError"],[4,"ParseError"],[4,"DispatchClass"],[4,"MethodCall"],[4,"Response"],[3,"RuntimeVersion"],[3,"JsonRpcParseError"],[3,"InvalidParameterError"],[3,"Block"],[3,"Header"],[3,"HeaderDigest"],[3,"RpcMethods"],[3,"RuntimeDispatchInfo"],[3,"StorageChangeSet"],[3,"SystemHealth"],[3,"SystemPeer"],[13,"system_accountNextIndex"],[13,"state_getRuntimeVersion"],[13,"state_queryStorageAt"],[13,"state_getKeysPaged"],[13,"payment_queryInfo"],[13,"chain_getBlock"],[13,"chain_getHeader"],[13,"state_getStorage"],[13,"chain_getBlockHash"],[13,"state_subscribeStorage"],[13,"author_unwatchExtrinsic"],[13,"chain_unsubscribeAllHeads"],[13,"chain_unsubscribeFinalizedHeads"],[13,"chain_unsubscribeNewHeads"],[13,"state_unsubscribeRuntimeVersion"],[13,"state_unsubscribeStorage"],[13,"author_submitAndWatchExtrinsic"],[13,"author_submitExtrinsic"],[13,"TooManyParameters"],[13,"InvalidParameter"],[13,"InvalidParametersFormat"],[13,"Method"],[4,"ErrorResponse"],[3,"Call"],[3,"ParseError"],[3,"DecodeError"],[4,"Event"],[3,"WsServer"],[3,"Config"],[3,"ConnectionId"],[13,"ConnectionOpen"],[13,"ConnectionError"],[13,"TextFrame"],[3,"WithBuffers"],[4,"OpenNotificationsSubstreamError"],[4,"RequestError"],[4,"ConnectionError"],[4,"Event"],[4,"QueueNotificationError"],[4,"HandshakeError"],[3,"Network"],[3,"Config"],[3,"NotificationProtocolConfig"],[3,"ConnectionId"],[3,"ConnectionReadyFuture"],[13,"InboundError"],[13,"HandshakeFinished"],[13,"Shutdown"],[13,"RequestIn"],[13,"NotificationsOutResult"],[13,"NotificationsOutClose"],[13,"NotificationsInOpen"],[13,"NotificationsIn"],[13,"NotificationsInClose"],[4,"FromUrlErr"],[4,"Error"],[4,"Protocol"],[4,"DecodeError"],[4,"Code"],[8,"Multihasher"],[4,"EncodeError"],[8,"MultihashDigest"],[3,"DecodeOwnedError"],[4,"ConfigRequestResponseIn"],[4,"Event"],[4,"Error"],[3,"Established"],[3,"ConnectionPrototype"],[3,"SubstreamId"],[3,"Config"],[3,"ConfigRequestResponse"],[3,"ConfigNotifications"],[13,"Payload"],[13,"NotificationsInOpen"],[13,"RequestIn"],[13,"Response"],[13,"NotificationsInOpenCancel"],[13,"NotificationIn"],[13,"NotificationsInClose"],[13,"NotificationsOutResult"],[13,"NotificationsOutCloseDemanded"],[13,"NotificationsOutReset"],[4,"NotificationsOutErr"],[4,"Event"],[4,"InboundError"],[4,"RequestError"],[4,"InboundTy"],[4,"NotificationsInClosedErr"],[4,"RespondInRequestError"],[3,"Substream"],[13,"NotificationsInOpen"],[13,"NotificationIn"],[13,"NotificationsInClose"],[13,"RequestIn"],[13,"NotificationsInOpenCancel"],[13,"Response"],[13,"NotificationsOutResult"],[13,"NotificationsOutReset"],[13,"NotificationsInError"],[13,"NotificationsInUnexpectedEof"],[13,"Notifications"],[13,"Request"],[4,"Handshake"],[4,"HandshakeError"],[3,"HealthyHandshake"],[3,"NoiseKeyRequired"],[13,"Success"],[4,"Error"],[4,"Config"],[4,"MessageOut"],[4,"Negotiation"],[3,"InProgress"],[13,"Dialer"],[13,"Listener"],[4,"HandshakeError"],[4,"NoiseHandshake"],[3,"NoiseKey"],[3,"UnsignedNoiseKey"],[3,"Noise"],[3,"HandshakeInProgress"],[3,"CipherError"],[3,"PayloadDecodeError"],[13,"Success"],[4,"Error"],[4,"IncomingDataDetail"],[3,"Yamux"],[3,"SubstreamMut"],[3,"ExtractOut"],[3,"Config"],[3,"SubstreamId"],[3,"IncomingDataOutcome"],[13,"DataFrame"],[13,"StreamClosed"],[13,"StreamReset"],[3,"Onion3Addr"],[3,"Iter"],[3,"Identity"],[3,"Sha1"],[3,"Sha2_256"],[3,"Sha2_512"],[3,"Sha3_224"],[3,"Sha3_256"],[3,"Sha3_384"],[3,"Sha3_512"],[3,"Keccak224"],[3,"Keccak256"],[3,"Keccak384"],[3,"Keccak512"],[3,"Blake2b256"],[3,"Blake2b512"],[3,"Blake2s128"],[3,"Blake2s256"],[3,"MultihashGeneric"],[3,"MultihashRefGeneric"],[4,"FromMultihashError"],[4,"FromProtobufEncodingError"],[4,"ParseError"],[4,"FromBytesError"],[4,"PublicKey"],[3,"PeerId"],[3,"Bs58DecodeError"],[4,"Event"],[4,"RequestError"],[4,"DesiredState"],[4,"QueueNotificationError"],[4,"InNotificationAcceptError"],[3,"Peers"],[3,"Config"],[3,"DesiredInNotificationId"],[3,"DesiredOutNotificationId"],[3,"RequestId"],[13,"InboundError"],[13,"RequestIn"],[13,"DesiredInNotification"],[13,"RequestInCancel"],[13,"DesiredInNotificationCancel"],[13,"DesiredOutNotification"],[13,"NotificationsIn"],[13,"NotificationsOutResult"],[13,"NotificationsOutClose"],[13,"NotificationsInClose"],[13,"Connected"],[13,"Disconnected"],[3,"ReadWrite"],[3,"IncomingBytes"],[4,"Error"],[4,"Query"],[3,"StorageGet"],[3,"RemoveMetadataLengthPrefixError"],[4,"StorageHasher"],[4,"StorageEntryModifier"],[4,"StorageEntryTypeRef"],[3,"FunctionMetadataRef"],[3,"EventMetadataRef"],[3,"UndecodedIter"],[3,"MetadataRef"],[3,"ModuleMetadataRef"],[3,"StorageMetadataRef"],[3,"StorageEntryMetadataRef"],[3,"FunctionArgumentMetadataRef"],[3,"ModuleConstantMetadataRef"],[3,"ErrorMetadataRef"],[3,"ExtrinsicMetadataRef"],[3,"DecodeError"],[13,"Map"],[13,"DoubleMap"],[4,"EventsStorageKeyError"],[3,"Multiaddr"],[4,"DecodeFindNodeResponseError"],[3,"Kademlia"],[3,"ProtobufDecodeError"],[4,"BlocksRequestDirection"],[4,"Role"],[4,"DecodeCallProofResponseError"],[4,"DecodeStorageProofResponseError"],[4,"DecodeBlockResponseError"],[4,"GrandpaNotificationRef"],[4,"BlocksRequestConfigStart"],[4,"MessageRef"],[3,"IdentifyResponse"],[3,"BlockAnnouncesHandshakeRef"],[3,"BlockAnnounceRef"],[3,"DecodeBlockAnnounceError"],[3,"BlockAnnouncesHandshakeDecodeError"],[3,"BlocksRequestConfig"],[3,"BlocksRequestFields"],[3,"BlockData"],[3,"CallProofRequestConfig"],[3,"VoteMessageRef"],[3,"UnsignedPrevoteRef"],[3,"PrimaryProposeRef"],[3,"NeighborPacket"],[3,"CatchUpRequest"],[3,"CatchUpRef"],[3,"PrevoteRef"],[3,"DecodeGrandpaNotificationError"],[3,"GrandpaWarpSyncResponse"],[3,"GrandpaWarpSyncResponseFragment"],[3,"DecodeGrandpaWarpSyncResponseError"],[3,"StorageProofRequestConfig"],[3,"ProtobufDecodeError"],[4,"ProtocolError"],[4,"Event"],[4,"BlocksRequestError"],[4,"StorageProofRequestError"],[4,"CallProofRequestError"],[4,"GrandpaWarpSyncRequestError"],[4,"KademliaFindNodeError"],[4,"DiscoveryError"],[4,"NotificationsOutErr"],[3,"ChainNetwork"],[3,"Config"],[3,"ChainConfig"],[3,"EncodedBlockAnnounceHandshake"],[3,"DiscoveryInsert"],[3,"IdentifyRequestIn"],[3,"GrandpaState"],[3,"PendingId"],[3,"StartConnect"],[3,"EncodedBlockAnnounce"],[3,"EncodedGrandpaCommitMessage"],[13,"BlockAnnounce"],[13,"ChainConnected"],[13,"ChainDisconnected"],[13,"ChainConnectAttemptFailed"],[13,"GrandpaCommitMessage"],[13,"Disconnected"],[13,"ProtocolError"],[13,"IdentifyRequestIn"],[13,"GenesisMismatch"],[4,"ResponseOutcome"],[4,"ProcessOne"],[4,"BlockAnnounceOutcome"],[4,"RequestDetail"],[4,"HeaderVerifyError"],[4,"HeaderVerifyOutcome"],[4,"BlockVerification"],[4,"BlockVerificationError"],[3,"AllSync"],[3,"BlockRequestSuccessBlock"],[3,"HeaderVerify"],[3,"WarpSyncFragmentVerify"],[3,"HeaderBodyVerify"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"Config"],[3,"ConfigFull"],[3,"SourceId"],[3,"RequestId"],[13,"TooOld"],[13,"Error"],[13,"Finalized"],[13,"Success"],[13,"Error"],[13,"Success"],[13,"BlocksRequest"],[13,"StorageGet"],[13,"GrandpaWarpSync"],[13,"NotFinalizedChain"],[4,"AncestrySearchResponseOutcome"],[4,"ProcessOne"],[4,"BlockAnnounceOutcome"],[4,"HeaderVerifyError"],[4,"HeaderVerifyOutcome"],[4,"JustificationVerification"],[3,"AllForksSync"],[3,"HeaderVerify"],[4,"BlockBodyVerify"],[3,"RequestId"],[3,"RequestParams"],[3,"Config"],[3,"RequestSuccessBlock"],[13,"NotFinalizedChain"],[13,"TooOld"],[13,"Error"],[13,"Success"],[13,"AllSync"],[3,"AllForksSources"],[3,"SourceId"],[4,"OutputUpdate"],[4,"RuntimeError"],[4,"OutputUpdateBlockBest"],[4,"NextNecessaryDownload"],[3,"DownloadTree"],[3,"DownloadId"],[3,"RuntimeId"],[3,"DownloadParams"],[3,"OutputUpdateBlock"],[13,"NotReady"],[13,"Finalized"],[13,"FirstFinalized"],[4,"Error"],[4,"GrandpaWarpSync"],[4,"InProgressGrandpaWarpSync"],[3,"StorageGet"],[3,"NextKey"],[3,"Verifier"],[3,"WarpSyncRequest"],[3,"VirtualMachineParamsGet"],[3,"WaitingForSources"],[3,"Config"],[3,"Success"],[3,"SourceId"],[4,"RequestFail"],[4,"BlockVerification"],[4,"ResetCause"],[4,"ProcessOne"],[4,"FinishRequestOutcome"],[3,"OptimisticSync"],[3,"Block"],[3,"RequestSuccessBlock"],[3,"Verify"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"RequestsDrain"],[3,"Config"],[3,"ConfigFull"],[3,"RequestId"],[3,"SourceId"],[3,"RequestDetail"],[3,"Disassemble"],[3,"DisassembleSource"],[13,"Finalized"],[13,"NewBest"],[13,"Reset"],[13,"Idle"],[4,"OccupiedCoreAssumption"],[3,"Error"],[3,"PersistedValidationDataRef"],[3,"LightPool"],[3,"Config"],[3,"PruneBodyFinalized"],[3,"TransactionId"],[3,"SetBestBlock"],[4,"AppendBlockTransaction"],[3,"Pool"],[3,"Config"],[3,"AppendBlock"],[3,"Vacant"],[3,"TransactionId"],[13,"NonIncludedUpdated"],[4,"InvalidTransaction"],[4,"UnknownTransaction"],[4,"Error"],[4,"TransactionSource"],[4,"Query"],[4,"TransactionValidityError"],[3,"Config"],[3,"StorageGet"],[3,"NextKey"],[3,"PrefixKeys"],[3,"ValidTransaction"],[3,"DecodeError"],[13,"Finished"],[4,"NibbleFromU8Error"],[3,"Trie"],[3,"Nibble"],[3,"BytesToNibbles"],[4,"RootMerkleValueCalculation"],[3,"CalculationCache"],[3,"AllKeys"],[3,"StorageValue"],[13,"Finished"],[4,"NodeTy"],[3,"Config"],[3,"Output"],[13,"Root"],[13,"NonRoot"],[4,"ResumeOutcome"],[3,"Config"],[3,"PrefixScan"],[13,"Success"],[4,"Error"],[3,"Decoded"],[3,"PartialKey"],[4,"Error"],[4,"Children"],[3,"VerifyProofConfig"],[3,"TrieNodeInfoConfig"],[3,"TrieNodeInfo"],[13,"Multiple"],[13,"MissingProofEntry"],[4,"NodeAccess"],[4,"Remove"],[4,"Entry"],[4,"PrepareInsert"],[3,"TrieStructure"],[3,"StorageNodeAccess"],[3,"BranchNodeAccess"],[3,"Vacant"],[3,"PrepareInsertOne"],[3,"PrepareInsertTwo"],[3,"NodeIndex"],[13,"BranchAlsoRemoved"],[13,"SingleRemoveChild"],[13,"SingleRemoveNoChild"],[13,"TrieNowEmpty"],[4,"VerifyError"],[3,"VerifyConfig"],[3,"VerifySuccess"],[4,"VerifyError"],[3,"VerifyConfig"],[3,"VerifySuccess"],[4,"ConfigConsensus"],[4,"SuccessConsensus"],[4,"Error"],[4,"Verify"],[3,"Config"],[3,"Success"],[3,"StorageGet"],[3,"StoragePrefixKeys"],[3,"StorageNextKey"],[3,"RuntimeCompilation"],[13,"Aura"],[13,"Babe"],[13,"Aura"],[13,"Babe"],[4,"ConfigConsensus"],[4,"Success"],[4,"Error"],[3,"Config"],[13,"Aura"],[13,"Babe"],[13,"Aura"],[13,"Babe"]]},\
"smoldot_light":{"doc":"Contains a light client implementation usable from a …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["AddChainConfig","ChainId","Client","add_chain","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_is_erroneous","clone","clone","clone_into","clone_into","cmp","eq","equivalent","ffi","fmt","fmt","from","from","from","from","get_hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","json_rpc_request","json_rpc_running","ne","new","partial_cmp","potential_relay_chains","remove_chain","specification","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Connection","Delay","Instant","add","advance_read_cursor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bindings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","connect","drop","drop","duration_since","elapsed","eq","equivalent","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_future","is_terminated","new","new_at","now","partial_cmp","poll","read_buffer","send","spawn_background_task","sub","sub","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","add_chain","alloc","chain_error_len","chain_error_ptr","chain_is_ok","connection_close","connection_closed","connection_message","connection_new","connection_open","connection_send","init","json_rpc_respond","json_rpc_send","log","monotonic_clock_ms","remove_chain","start_timer","throw","timer_finished","unix_time_ms"],"q":["smoldot_light","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot_light::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot_light::ffi::bindings","","","","","","","","","","","","","","","","","","","",""],"d":["See <code>Client::add_chain</code>.","Chain registered in a <code>Client</code>.","","Adds a new chain to the list of chains smoldot tries to …","","","","","","","","","","","","","If <code>Client::add_chain</code> encountered an error when creating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enqueues a JSON-RPC request towards the given chain.","If <code>false</code>, then no JSON-RPC service is started for this …","","Initializes the smoldot Wasm client.","","If <code>AddChainConfig</code> defines a parachain, contains the list …","Removes the chain from smoldot. This instantaneously and …","JSON text containing the specification of the chain (the …","","","","","","","","","","","","","","","Connection connected to a target.","<code>Future</code> that automatically wakes up after a certain amount …","","","Advances the read cursor by the given amount of bytes. …","","","","","","","Imports and exports of the WebAssembly module.","","","","","","","","","","Connects to the given URL. Returns a <code>Connection</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a buffer containing data received on the …","Queues the given buffer. For WebSocket connections, …","Spawn a background task that runs forever.","","","","","","","","","","","","","","","","Adds a chain to the client. The client will try to stay …","Allocates a buffer of the given length, with an alignment …","Returns the length of the error message stored for this …","Returns a pointer to the error message stored for this …","Returns <code>1</code> if creating this chain was successful. …","Close a connection previously initialized with …","Can be called at any point by the JavaScript code if the …","Notify of a message being received on the connection. The …","Must initialize a new connection that tries to connect to …","Called by the JavaScript code if the connection switches …","Queues data on the given connection. The data is found in …","Initializes the client.","Client is emitting a response to a previous JSON-RPC …","Emit a JSON-RPC request towards the given chain …","Client is emitting a log entry.","Must return the number of milliseconds that have passed …","Removes a chain previously added using <code>add_chain</code>. …","After at least <code>milliseconds</code> milliseconds have passed, …","Must throw an exception. The message is a UTF-8 string …","Must be called in response to <code>start_timer</code> after the given …","Must return the number of milliseconds that have passed …"],"i":[0,0,0,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,3,3,3,3,0,2,3,1,2,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,3,2,1,2,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,4,5,6,5,4,6,5,4,0,6,5,4,6,5,4,4,4,4,5,6,5,4,4,4,4,5,4,6,5,4,6,5,4,6,5,4,6,5,4,6,5,4,6,6,6,6,4,4,6,5,5,0,4,4,4,6,5,4,6,5,4,6,5,4,6,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[["addchainconfig",3]],["chainid",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chainid",3]],[["str",15],["option",4,["str"]]]],[[],["addchainconfig",3]],[[],["chainid",3]],[[]],[[]],[[["chainid",3]],["ordering",4]],[[["chainid",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["chainid",3]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["chainid",3]]],null,[[["chainid",3]],["bool",15]],[[["levelfilter",4]]],[[["chainid",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["chainid",3]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[["duration",3]],["instant",3]],[[["usize",15],["pin",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["instant",3]],[[]],[[],["ordering",4]],[[["str",15]]],[[]],[[]],[[["instant",3]],["duration",3]],[[],["duration",3]],[[["instant",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["box",3,["global"]],["global",3]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["arc",3]],[["any",8],["arc",3,["any"]]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[["rc",3]],[["rc",3,["any"]],["any",8]]],[[]],[[],["bool",15]],[[["duration",3]]],[[["instant",3]]],[[],["instant",3]],[[["instant",3]],[["option",4,["ordering"]],["ordering",4]]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3]]],[[["pin",3]]],[[]],[[["instant",3]],["duration",3]],[[["duration",3]],["instant",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["u32",15]],null,[[["u32",15]]],[[["u32",15]]],null,[[["u32",15]]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,[[["u32",15]]],null,null,[[["u32",15]]],null],"p":[[3,"Client"],[3,"AddChainConfig"],[3,"ChainId"],[3,"Instant"],[3,"Connection"],[3,"Delay"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};